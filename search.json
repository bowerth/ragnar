[{"path":"https://t-kalinowski.github.io/ragnar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 ragnar authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tomasz Kalinowski. Author, maintainer.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kalinowski T (2025). ragnar: Package (One Line, Title Case). R package version 0.0.0.9000, https://t-kalinowski.github.io/ragnar/.","code":"@Manual{,   title = {ragnar: What the Package Does (One Line, Title Case)},   author = {Tomasz Kalinowski},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://t-kalinowski.github.io/ragnar/}, }"},{"path":"https://t-kalinowski.github.io/ragnar/index.html","id":"ragnar-","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"üöß active development üöß ragnar R package helps implement Retrieval-Augmented Generation (RAG) workflows. focuses providing complete solution sensible defaults, still giving knowledgeable user precise control steps. don‚Äôt believe can fully automate creation good RAG system, ‚Äôs important ragnar black box. ragnar designed transparent‚Äîcan inspect easily outputs intermediate steps understand ‚Äôs happening.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"","code":"pak::pak(\"t-kalinowski/ragnar\")"},{"path":[]},{"path":"https://t-kalinowski.github.io/ragnar/index.html","id":"id_1-document-processing","dir":"","previous_headings":"Key Steps","what":"1. Document Processing","title":"What the Package Does (One Line, Title Case)","text":"ragnar works wide variety document types, using MarkItDown convert content Markdown. Key functions: ragnar_find_links(): Find links webpage ragnar_read(): Convert file URL markdown","code":""},{"path":"https://t-kalinowski.github.io/ragnar/index.html","id":"id_2-text-chunking","dir":"","previous_headings":"Key Steps","what":"2. Text Chunking","title":"What the Package Does (One Line, Title Case)","text":"Next divide document multiple chunks. Ragnar defaults strategy preserves semantics document, provide plenty options tweak approach. Key functions: ragnar_chunk(): Higher-level function identifies semantic boundaries chunks text. ragnar_segment(): Lower-level function identifies semantic boundaries. ragnar_chunk_segments(): Lower-level function chunks pre-segmented text.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/index.html","id":"id_3-context-augmentation-optional","dir":"","previous_headings":"Key Steps","what":"3. Context Augmentation (Optional)","title":"What the Package Does (One Line, Title Case)","text":"RAG applications benefit augmenting text chunks additional context, document headings subheadings. ragnar doesn‚Äôt directly export functions , supports template-based augmentation ragnar_read(frame_by_tags, split_by_tags). Future versions support generating context summaries via LLM calls. Key functions: ragnar_read(): Use frame_by_tags /split_by_tags arguments associate text chunks document position. markdown_segment(): Segment markdown text character vector using semantic tags (e.g., headings, paragraphs, code chunks). markdown_frame(): Convert markdown text dataframe.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/index.html","id":"id_4-embedding","dir":"","previous_headings":"Key Steps","what":"4. Embedding","title":"What the Package Does (One Line, Title Case)","text":"ragnar can help compute embeddings chunk. goal ragnar provide access embeddings popular LLM providers. Currently ollama openai providers. Key functions: embed_ollama() embed_openai() Note calling embedding function directly typically necessary. Instead, embedding function specified store first created, automatically called needed ragnar_retreive() ragnar_store_insert().","code":""},{"path":"https://t-kalinowski.github.io/ragnar/index.html","id":"id_5-storage","dir":"","previous_headings":"Key Steps","what":"5. Storage","title":"What the Package Does (One Line, Title Case)","text":"Processed data stored format optimized efficient searching, using duckdb default. API designed extensible, allowing additional packages implement support different storage providers. Key functions: ragnar_store_create() ragnar_store_connect() ragnar_store_insert()","code":""},{"path":"https://t-kalinowski.github.io/ragnar/index.html","id":"id_6-retrieval","dir":"","previous_headings":"Key Steps","what":"6. Retrieval","title":"What the Package Does (One Line, Title Case)","text":"Given prompt, retrieve related chunks based embedding distance bm25 text search. Key functions: ragnar_retrieve() ragnar_retrieve_vss(): Retrieve using vss DuckDB extension ragnar_retrieve_bm25(): Retrieve using full-text search DuckDB extension","code":""},{"path":"https://t-kalinowski.github.io/ragnar/index.html","id":"id_7-re-ranking-optional","dir":"","previous_headings":"Key Steps","what":"7. Re-ranking (Optional)","title":"What the Package Does (One Line, Title Case)","text":"Re-ranking retrieved chunks planned future releases.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/index.html","id":"id_8-prompt-generation","dir":"","previous_headings":"Key Steps","what":"8. Prompt Generation","title":"What the Package Does (One Line, Title Case)","text":"ragnar can equip ellmer::Chat object retrieve tool enables LLM retreive content store -demand. ragnar_register_tool_retrieve(chat, store).","code":""},{"path":"https://t-kalinowski.github.io/ragnar/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"What the Package Does (One Line, Title Case)","text":"‚Äôs example using ragnar create knowledge store R Data Science (2e) book: store set , can retrieve relevant text chunks.","code":"library(ragnar)  base_url <- \"https://r4ds.hadley.nz\" pages <- ragnar_find_links(base_url)  store_location <- \"r4ds.ragnar.duckdb\" unlink(store_location)  store <- ragnar_store_create(   store_location,   embed = \\(x) ragnar::embed_ollama(x, model = \"all-minilm\") )   for (page in pages) {   message(\"ingesting: \", page)   chunks <- page |>     ragnar_read(frame_by_tags = c(\"h1\", \"h2\", \"h3\")) |>     dplyr::mutate(link = page) |>     ragnar_chunk(boundaries = c(\"paragraph\", \"sentence\")) |>     # add context to chunks     dplyr::mutate(text = glue::glue(r\"---(     # Excerpt from the book \"R for Data Science (2e)\"     link: {link}     chapter: {h1}     section: {h2}     subsection: {h3}     content: {text}      )---\"))    ragnar_store_insert(store, chunks) } #> ingesting: https://r4ds.hadley.nz/arrow.html #> ingesting: https://r4ds.hadley.nz/base-R.html #> ingesting: https://r4ds.hadley.nz/communicate.html #> ingesting: https://r4ds.hadley.nz/communication.html #> ingesting: https://r4ds.hadley.nz/data-import.html #> ingesting: https://r4ds.hadley.nz/data-tidy.html #> ingesting: https://r4ds.hadley.nz/data-transform.html #> ingesting: https://r4ds.hadley.nz/data-visualize.html #> ingesting: https://r4ds.hadley.nz/databases.html #> ingesting: https://r4ds.hadley.nz/datetimes.html #> ingesting: https://r4ds.hadley.nz/EDA.html #> ingesting: https://r4ds.hadley.nz/factors.html #> ingesting: https://r4ds.hadley.nz/functions.html #> ingesting: https://r4ds.hadley.nz/import.html #> ingesting: https://r4ds.hadley.nz/intro.html #> ingesting: https://r4ds.hadley.nz/iteration.html #> ingesting: https://r4ds.hadley.nz/joins.html #> ingesting: https://r4ds.hadley.nz/layers.html #> ingesting: https://r4ds.hadley.nz/logicals.html #> ingesting: https://r4ds.hadley.nz/missing-values.html #> ingesting: https://r4ds.hadley.nz/numbers.html #> ingesting: https://r4ds.hadley.nz/preface-2e.html #> ingesting: https://r4ds.hadley.nz/program.html #> ingesting: https://r4ds.hadley.nz/quarto-formats.html #> ingesting: https://r4ds.hadley.nz/quarto.html #> ingesting: https://r4ds.hadley.nz/rectangling.html #> ingesting: https://r4ds.hadley.nz/regexps.html #> ingesting: https://r4ds.hadley.nz/spreadsheets.html #> ingesting: https://r4ds.hadley.nz/strings.html #> ingesting: https://r4ds.hadley.nz/transform.html #> ingesting: https://r4ds.hadley.nz/visualize.html #> ingesting: https://r4ds.hadley.nz/webscraping.html #> ingesting: https://r4ds.hadley.nz/whole-game.html #> ingesting: https://r4ds.hadley.nz/workflow-basics.html #> ingesting: https://r4ds.hadley.nz/workflow-help.html #> ingesting: https://r4ds.hadley.nz/workflow-scripts.html #> ingesting: https://r4ds.hadley.nz/workflow-style.html   ragnar_store_build_index(store) #' ## Retrieving Chunks  library(ragnar) store_location <- \"r4ds.ragnar.duckdb\" store <- ragnar_store_connect(store_location, read_only = TRUE)  text <- \"How can I subset a dataframe with a logical vector?\"   ## Retrieving Chunks # Once the store is set up, retrieve the most relevant text chunks like this  embedding_near_chunks <- ragnar_retrieve_vss(store, text, top_k = 3) embedding_near_chunks #> # A tibble: 3 √ó 3 #>      id l2sq_distance text                                                       #>   <int>         <dbl> <chr>                                                      #> 1    31         0.920 \"# Excerpt from the book \\\"R for Data Science (2e)\\\"\\nlin‚Ä¶ #> 2   625         0.941 \"# Excerpt from the book \\\"R for Data Science (2e)\\\"\\nlin‚Ä¶ #> 3   639         0.943 \"# Excerpt from the book \\\"R for Data Science (2e)\\\"\\nlin‚Ä¶ embedding_near_chunks$text[1] |> cat(sep = \"\\n~~~~~~~~\\n\") #> # Excerpt from the book \"R for Data Science (2e)\" #> link: https://r4ds.hadley.nz/base-R.html #> chapter: # 27¬† A field guide to base R #> section: ## 27.2 Selecting multiple elements with `[` #> subsection: ### 27.2.2 Subsetting data frames #> content: There are quite a few different ways[1](#fn1) that you can use `[` with a data frame, but the most important way is to select rows and columns independently with `df[rows, cols]`. Here `rows` and `cols` are vectors as described above. For example, `df[rows, ]` and `df[, cols]` select just rows or just columns, using the empty subset to preserve the other dimension. #>  #> Here are a couple of examples: #>  #> ``` #> df <- tibble( #>   x = 1:3, #>   y = c(\"a\", \"e\", \"f\"), #>   z = runif(3) #> ) #>  #> # Select first row and second column #> df[1, 2] #> #> # A tibble: 1 √ó 1 #> #>   y #> #>   <chr> #> #> 1 a #>  #> # Select all rows and columns x and y #> df[, c(\"x\" , \"y\")] #> #> # A tibble: 3 √ó 2 #> #>       x y #> #>   <int> <chr> #> #> 1     1 a #> #> 2     2 e #> #> 3     3 f #>  #> # Select rows where `x` is greater than 1 and all columns #> df[df$x > 1, ] #> #> # A tibble: 2 √ó 3 #> #>       x y         z #> #>   <int> <chr> <dbl> #> #> 1     2 e     0.834 #> #> 2     3 f     0.601 #> ``` #>  #> We‚Äôll come back to `$` shortly, but you should be able to guess what `df$x` does from the context: it extracts the `x` variable from `df`. We need to use it here because `[` doesn‚Äôt use tidy evaluation, so you need to be explicit about the source of the `x` variable. bm25_near_chunks <- ragnar_retrieve_bm25(store, text, top_k = 3) bm25_near_chunks #> # A tibble: 3 √ó 3 #>      id bm25_score text                                                          #>   <int>      <dbl> <chr>                                                         #> 1    29       5.62 \"# Excerpt from the book \\\"R for Data Science (2e)\\\"\\nlink: ‚Ä¶ #> 2   645       5.54 \"# Excerpt from the book \\\"R for Data Science (2e)\\\"\\nlink: ‚Ä¶ #> 3   624       5.07 \"# Excerpt from the book \\\"R for Data Science (2e)\\\"\\nlink: ‚Ä¶ bm25_near_chunks$text[1] |> cat(sep = \"\\n~~~~~~~~\\n\") #> # Excerpt from the book \"R for Data Science (2e)\" #> link: https://r4ds.hadley.nz/base-R.html #> chapter: # 27¬† A field guide to base R #> section: ## 27.2 Selecting multiple elements with `[` #> subsection: ### 27.2.1 Subsetting vectors #> content: There are five main types of things that you can subset a vector with, i.e., that can be the `i` in `x[i]`: #>  #> 1. **A vector of positive integers**. Subsetting with positive integers keeps the elements at those positions: #>  #>    ``` #>    x <- c(\"one\", \"two\", \"three\", \"four\", \"five\") #>    x[c(3, 2, 5)] #>    #> [1] \"three\" \"two\"   \"five\" #>    ``` #>  #>    By repeating a position, you can actually make a longer output than input, making the term ‚Äúsubsetting‚Äù a bit of a misnomer. #>  #>    ``` #>    x[c(1, 1, 5, 5, 5, 2)] #>    #> [1] \"one\"  \"one\"  \"five\" \"five\" \"five\" \"two\" #>    ``` #> 2. **A vector of negative integers**. Negative values drop the elements at the specified positions: #>  #>    ``` #>    x[c(-1, -3, -5)] #>    #> [1] \"two\"  \"four\" #>    ``` #> 3. **A logical vector**. Subsetting with a logical vector keeps all values corresponding to a `TRUE` value. This is most often useful in conjunction with the comparison functions. #>  #>    ``` #>    x <- c(10, 3, NA, 5, 8, 1, NA) #>  #>    # All non-missing values of x #>    x[!is.na(x)] #>    #> [1] 10  3  5  8  1 #>  #>    # All even (or missing!) values of x #>    x[x %% 2 == 0] #>    #> [1] 10 NA  8 NA #>    ``` #>  #>    Unlike `[filter()](https://dplyr.tidyverse.org/reference/filter.html)`, `NA` indices will be included in the output as `NA`s. #> 4. **A character vector**. If you have a named vector, you can subset it with a character vector: #>  #>    ``` #>    x <- c(abc = 1, def = 2, xyz = 5) #>    x[c(\"xyz\", \"def\")] #>    #> xyz def #>    #>   5   2 #>    ``` # get both vss and bm26 relevant_chunks <- ragnar_retrieve(   store, text, top_k = 3,   methods = c(\"vss\", \"bm25\") ) relevant_chunks #> # A tibble: 6 √ó 4 #>      id l2sq_distance bm25_score text                                            #>   <int>         <dbl>      <dbl> <chr>                                           #> 1    31         0.920       2.91 \"# Excerpt from the book \\\"R for Data Science ‚Ä¶ #> 2   625         0.941       3.58 \"# Excerpt from the book \\\"R for Data Science ‚Ä¶ #> 3   639         0.943       2.58 \"# Excerpt from the book \\\"R for Data Science ‚Ä¶ #> 4    29         0.980       5.62 \"# Excerpt from the book \\\"R for Data Science ‚Ä¶ #> 5   645         0.971       5.54 \"# Excerpt from the book \\\"R for Data Science ‚Ä¶ #> 6   624         1.22        5.07 \"# Excerpt from the book \\\"R for Data Science ‚Ä¶  # Register ellmer tool ## You can register an ellmer tool to retrieve chunks as well. ## This enables the LLM model to make tool calls to retreive chunks. system_prompt <- stringr::str_squish(r\"--(     You are an expert R programmer and mentor.     You often respond by first direct quoting material from book or documentation,     then adding your own additional context and interpertation. )--\") chat <- ellmer::chat_openai(system_prompt, model = \"gpt-4o\") # chat <- ellmer::chat_ollama(system_prompt, model = \"llama3.2:1b\")  ragnar_register_tool_retrieve(chat, store)  chat$chat(\"How can I subset a dataframe?\") #> To subset a dataframe in R, you can use multiple methods depending on your  #> needs. A common way to do this is with the square bracket `[` operator, which  #> allows you to select rows and columns separately using a matrix-style indexing. #> Here are some basic ways to subset a dataframe: #>  #> 1. **Select Specific Rows and Columns:** #>    You can select specific rows and columns by specifying their indices inside  #> the square brackets `df[rows, cols]`. Here's an example: #>  #>    ```r #>    df <- data.frame(x = 1:3, y = c(\"a\", \"e\", \"f\"), z = runif(3)) #>  #>    df[1, 2]  # Selects the first row and second column. #>    df[, c(\"x\", \"y\")]  # Select all rows for columns x and y. #>    df[df$x > 1, ]  # Select rows where x is greater than 1 with all columns. #>    ``` #>  #> 2. **Handling Tibbles vs. Data Frames:** #>    It's important to understand the difference in behavior between tibbles and  #> base data frames: #>  #>    ```r #>    df1 <- data.frame(x = 1:3) #>    df1[, \"x\"]  # Returns a vector. #>  #>    df2 <- tibble(x = 1:3) #>    df2[, \"x\"]  # Always returns a tibble. #>  #>    # To avoid ambiguity in data.frames and ensure a dataframe output: #>    df1[, \"x\", drop = FALSE] #>    ``` #>  #> 3. **Logical Vectors:** #>    Logical vectors are often used for conditional subsetting: #>  #>    ```r #>    x <- c(10, 3, NA, 5, 8, 1, NA) #>    x[!is.na(x)]  # All non-missing values. #>    x[x %% 2 == 0]  # All even values, including NA. #>    ``` #>  #> Each method has its specific use case and can be chosen based on the context of #> what you're trying to achieve with your dataset. Understanding these subsetting #> techniques provides flexibility in how you manipulate and analyze data frames."},{"path":"https://t-kalinowski.github.io/ragnar/reference/embed_ollama.html","id":null,"dir":"Reference","previous_headings":"","what":"Embedd Text ‚Äî embed_ollama","title":"Embedd Text ‚Äî embed_ollama","text":"Embedd Text","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/embed_ollama.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Embedd Text ‚Äî embed_ollama","text":"","code":"embed_ollama(   x,   base_url = \"http://localhost:11434\",   model = \"all-minilm\",   batch_size = 10L )  embed_openai(   x,   model = \"text-embedding-3-small\",   base_url = \"https://api.openai.com/v1\",   api_key = get_envvar(\"OPENAI_API_KEY\"),   dims = NULL,   user = get_ragnar_username(),   batch_size = 20L )"},{"path":"https://t-kalinowski.github.io/ragnar/reference/embed_ollama.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Embedd Text ‚Äî embed_ollama","text":"x x can : character vector, case matrix embeddings returned. data frame column named text, case dataframe returned additional column named embedding. Missing NULL, case function returned can called get embeddings. convenient way partial additional arguments like model, convenient way produce function can passed embed argument ragnar_store_create(). base_url string, url service available. model string; model name batch_size split x batches embedding. Integer, limit strings include single request. api_key resolved using env var OPENAI_API_KEY dims integer, can used truncate embedding specific size. user User name passed via API.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/embed_ollama.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Embedd Text ‚Äî embed_ollama","text":"x character vector, numeric matrix returned, nrow = length(x) ncol = <model-embedding-size>. x data.frame, new embedding matrix \"column\" added, containing matrix described previous sentence. matrix embeddings 1 row per input string, dataframe 'embedding' column.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/embed_ollama.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Embedd Text ‚Äî embed_ollama","text":"","code":"text <- c(\"a chunk of text\", \"another chunk of text\", \"one more chunk of text\") if (FALSE) { # \\dontrun{ text |>   embed_ollama() |>   str()  text |>   embed_openai() |>   str() } # }"},{"path":"https://t-kalinowski.github.io/ragnar/reference/markdown_segment.html","id":null,"dir":"Reference","previous_headings":"","what":"Segment markdown text ‚Äî markdown_segment","title":"Segment markdown text ‚Äî markdown_segment","text":"Segment markdown text","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/markdown_segment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segment markdown text ‚Äî markdown_segment","text":"","code":"markdown_segment(   text,   tags = c(\"h1\", \"h2\", \"h3\", \"h4\"),   trim = FALSE,   omit_empty = FALSE )"},{"path":"https://t-kalinowski.github.io/ragnar/reference/markdown_segment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segment markdown text ‚Äî markdown_segment","text":"text Markdown string tags character vector html tag names, e.g., c(\"h1\", \"h2\", \"h3\", \"pre\") trim logical, trim whitespace segments omit_empty logical, whether remove empty segments","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/markdown_segment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Segment markdown text ‚Äî markdown_segment","text":"named character vector. Names correspond tags, \"\" content inbetween tags.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/markdown_segment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Segment markdown text ‚Äî markdown_segment","text":"","code":"md <- r\"---(  # Sample Markdown File  ## Introduction  This is a sample **Markdown** file for testing.  ### Features  - Simple **bold** text - _Italicized_ text - `Inline code` - A [link](https://example.com) - ‚ÄòCurly quotes are 3 bytes chars.‚Äô Non-ascii text is fine.  This is a paragraph with <p> tag.  This next segment with code has a <pre> tag  ```r hello_world <- function() {   cat(\"Hello, World!\\n\") } ```  A table <table>:    | Name  | Age | City      |   |-------|----:|----------|   | Alice |  25 | New York |   | Bob   |  30 | London   |   ## Conclusion  Common tags:  - h1, h2, h3, h4, h5, h6: section headings - p: paragraph (prose) - pre: pre-formatted text, meant to be displayed with monospace font. Typically code or code output - blockquote: A blockquote - table: A table - ul: Unordered list - ol: Ordered list - li: Individual list item in a <ul> or <ol>   )---\" markdown_segment(md) |> tibble::enframe() #> # A tibble: 9 √ó 2 #>   name  value                                                                    #>   <chr> <chr>                                                                    #> 1 \"\"    \"\\n\\n\"                                                                   #> 2 \"h1\"  \"# Sample Markdown File\"                                                 #> 3 \"\"    \"\\n\\n\"                                                                   #> 4 \"h2\"  \"## Introduction\"                                                        #> 5 \"\"    \"\\n\\nThis is a sample **Markdown** file for testing.\\n\\n\"                #> 6 \"h3\"  \"### Features\"                                                           #> 7 \"\"    \"\\n\\n- Simple **bold** text\\n- _Italicized_ text\\n- `Inline code`\\n- A ‚Ä¶ #> 8 \"h2\"  \"## Conclusion\"                                                          #> 9 \"\"    \"\\n\\nCommon tags:\\n\\n- h1, h2, h3, h4, h5, h6: section headings\\n- p: p‚Ä¶ markdown_segment(md |> trimws()) |> tibble::enframe() #> # A tibble: 8 √ó 2 #>   name  value                                                                    #>   <chr> <chr>                                                                    #> 1 \"h1\"  \"# Sample Markdown File\"                                                 #> 2 \"\"    \"\\n\\n\"                                                                   #> 3 \"h2\"  \"## Introduction\"                                                        #> 4 \"\"    \"\\n\\nThis is a sample **Markdown** file for testing.\\n\\n\"                #> 5 \"h3\"  \"### Features\"                                                           #> 6 \"\"    \"\\n\\n- Simple **bold** text\\n- _Italicized_ text\\n- `Inline code`\\n- A ‚Ä¶ #> 7 \"h2\"  \"## Conclusion\"                                                          #> 8 \"\"    \"\\n\\nCommon tags:\\n\\n- h1, h2, h3, h4, h5, h6: section headings\\n- p: p‚Ä¶ markdown_segment(md, c(\"li\"), trim = TRUE, omit_empty = TRUE) |> tibble::enframe() #> # A tibble: 15 √ó 2 #>    name  value                                                                   #>    <chr> <chr>                                                                   #>  1 \"\"    \"# Sample Markdown File\\n\\n## Introduction\\n\\nThis is a sample **Markd‚Ä¶ #>  2 \"li\"  \"- Simple **bold** text\"                                                #>  3 \"li\"  \"- _Italicized_ text\"                                                   #>  4 \"li\"  \"- `Inline code`\"                                                       #>  5 \"li\"  \"- A [link](https://example.com)\"                                       #>  6 \"li\"  \"- ‚ÄòCurly quotes are 3 bytes chars.‚Äô Non-ascii text is fine.\"           #>  7 \"\"    \"This is a paragraph with <p> tag.\\n\\nThis next segment with code has ‚Ä¶ #>  8 \"li\"  \"- h1, h2, h3, h4, h5, h6: section headings\"                            #>  9 \"li\"  \"- p: paragraph (prose)\"                                                #> 10 \"li\"  \"- pre: pre-formatted text, meant to be displayed with monospace font.‚Ä¶ #> 11 \"li\"  \"- blockquote: A blockquote\"                                            #> 12 \"li\"  \"- table: A table\"                                                      #> 13 \"li\"  \"- ul: Unordered list\"                                                  #> 14 \"li\"  \"- ol: Ordered list\"                                                    #> 15 \"li\"  \"- li: Individual list item in a <ul> or <ol>\"                          markdown_segment(md, c(\"table\"), trim = TRUE, omit_empty = TRUE) |> tibble::enframe() #> # A tibble: 3 √ó 2 #>   name    value                                                                  #>   <chr>   <chr>                                                                  #> 1 \"\"      \"# Sample Markdown File\\n\\n## Introduction\\n\\nThis is a sample **Mark‚Ä¶ #> 2 \"table\" \"| Name  | Age | City      |\\n  |-------|----:|----------|\\n  | Alice‚Ä¶ #> 3 \"\"      \"## Conclusion\\n\\nCommon tags:\\n\\n- h1, h2, h3, h4, h5, h6: section h‚Ä¶ markdown_segment(md, c(\"ul\"), trim = TRUE, omit_empty = TRUE) |> tibble::enframe() #> # A tibble: 4 √ó 2 #>   name  value                                                                    #>   <chr> <chr>                                                                    #> 1 \"\"    \"# Sample Markdown File\\n\\n## Introduction\\n\\nThis is a sample **Markdo‚Ä¶ #> 2 \"ul\"  \"- Simple **bold** text\\n- _Italicized_ text\\n- `Inline code`\\n- A [lin‚Ä¶ #> 3 \"\"    \"This is a paragraph with <p> tag.\\n\\nThis next segment with code has a‚Ä¶ #> 4 \"ul\"  \"- h1, h2, h3, h4, h5, h6: section headings\\n- p: paragraph (prose)\\n- ‚Ä¶"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ragnar: What the Package Does (One Line, Title Case) ‚Äî ragnar-package","title":"ragnar: What the Package Does (One Line, Title Case) ‚Äî ragnar-package","text":"package (one paragraph).","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ragnar: What the Package Does (One Line, Title Case) ‚Äî ragnar-package","text":"Maintainer: Tomasz Kalinowski tomasz@posit.co","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_chunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Chunk text ‚Äî ragnar_chunk","title":"Chunk text ‚Äî ragnar_chunk","text":"Functions chunking text smaller pieces preserving meaningful semantics. functions provide flexible ways split text based various boundaries (sentences, words, etc.) controlling chunk sizes overlap.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_chunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chunk text ‚Äî ragnar_chunk","text":"","code":"ragnar_chunk(   x,   max_size = 1600L,   boundaries = c(\"paragraph\", \"sentence\", \"line_break\", \"word\", \"character\"),   ...,   trim = TRUE,   simplify = TRUE )  ragnar_segment(x, boundaries = \"sentence\", ..., trim = FALSE, simplify = TRUE)  ragnar_chunk_segments(x, max_size = 1600L, ..., simplify = TRUE, trim = TRUE)"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_chunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chunk text ‚Äî ragnar_chunk","text":"x character vector, list character vectors, data frame containing text column. max_size Integer. maximum number characters chunk. Defaults 1600, typically approximately 400 tokens, 1 page text. boundaries sequence boundary types use order max_size satisfied. Valid values \"sentence\", \"word\", \"line_break\", \"character\", \"paragraph\", stringr_pattern object like stringr::fixed(). ... Additional arguments passed internal functions. tokenizer use tokens instead characters count (fully implemented yet) trim logical, whether trim leading trailing whitespace strings. Default TRUE. simplify Logical. TRUE, output simplified. FALSE, returns vector length x. TRUE, character strings unlist()ed, dataframes tidyr::unchop()ed.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_chunk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chunk text ‚Äî ragnar_chunk","text":"character input simplify = FALSE: list character vectors character input simplify = TRUE: character vector chunks data frame input simplify = FALSE: data frame number rows input, text column transformed list chararacter vectors. data frame input simplify = TRUE: data frame input simplify=FALSE, text column expanded tidyr::unchop()","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_chunk.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chunk text ‚Äî ragnar_chunk","text":"Chunking combination two fundamental operations: identifying boundaries: finding character positions makes sense split string. extracting slices: extracting substrings using candidate boundaries produce chunks match requested chunk_size chunk_overlap ragnar_chunk() higher-level function , identifies boundaries extracts slices. need lower-level control, can alternatively use lower-level functions ragnar_segment() combination ragnar_chunk_segments(). ragnar_segment(): Splits text semantic boundaries. ragnar_chunk_segments(): Combines text segments chunks. usecases, two equivalent:   working data frames, functions preserve columns use tidyr::unchop() handle resulting list-columns simplify = TRUE.","code":"x |> ragnar_chunk() x |> ragnar_segment() |> ragnar_chunk_segments()"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_chunk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chunk text ‚Äî ragnar_chunk","text":"","code":"# Basic chunking with max size text <- \"This is a long piece of text. It has multiple sentences.          We want to split it into chunks. Here's another sentence.\" ragnar_chunk(text, max_size = 40) # splits at sentences #> [1] \"This is a long piece of text.\"    \"It has multiple sentences.\"       #> [3] \"We want to split it into chunks.\" \"Here's another sentence.\"          # smaller chunk size: first splits at sentence boundaries, then word boundaries ragnar_chunk(text, max_size = 20) #> [1] \"This is a long piece\" \"of text.\"             \"It has multiple\"      #> [4] \"sentences.\"           \"We want to split it\"  \"into chunks.\"         #> [7] \"Here's another\"       \"sentence.\"             # only split at sentence boundaries. Note, some chunks are oversized ragnar_chunk(text, max_size = 20, boundaries = c(\"sentence\")) #> [1] \"This is a long piece of text.\"    \"It has multiple sentences.\"       #> [3] \"We want to split it into chunks.\" \"Here's another sentence.\"          # only consider word boundaries when splitting: ragnar_chunk(text, max_size = 20, boundaries = c(\"word\")) #> [1] \"This is a long piece\" \"of text. It has\"      \"multiple sentences.\"  #> [4] \"We want to\"           \"split it into chunks\" \"s. Here's another\"    #> [7] \"sentence.\"             # first split at sentence boundaries, then word boundaries, # as needed to satisfy `max_chunk` ragnar_chunk(text, max_size = 20, boundaries = c(\"sentence\", \"word\")) #> [1] \"This is a long piece\" \"of text.\"             \"It has multiple\"      #> [4] \"sentences.\"           \"We want to split it\"  \"into chunks.\"         #> [7] \"Here's another\"       \"sentence.\"             # Use a stringr pattern to find semantic boundaries ragnar_chunk(text, max_size = 10, boundaries = stringr::fixed(\". \")) #> [1] \"This is a long piece of text.\"                                         #> [2] \"It has multiple sentences.\\n         We want to split it into chunks.\" #> [3] \"Here's another sentence.\"                                              ragnar_chunk(text, max_size = 10, boundaries = list(stringr::fixed(\". \"), \"word\")) #>  [1] \"This is a\"  \"long piece\" \"e of text.\" \"It has\"     \"multiple\"   #>  [6] \"sentences.\" \".\"          \"We want to\" \"o split it\" \"into\"       #> [11] \"chunks.\"    \"Here's\"     \"another\"    \"sentence.\"    # Working with data frames df <- data.frame(   id = 1:2,   text = c(\"First sentence. Second sentence.\", \"Another sentence here.\") ) ragnar_chunk(df, max_size = 20, boundaries = \"sentence\") #>   id                   text #> 1  1        First sentence. #> 2  1       Second sentence. #> 3  2 Another sentence here. ragnar_chunk(df$text, max_size = 20, boundaries = \"sentence\") #> [1] \"First sentence.\"        \"Second sentence.\"       \"Another sentence here.\"  # Chunking pre-segmented text segments <- c(\"First segment. \", \"Second segment. \", \"Third segment. \", \"Fourth segment. \") ragnar_chunk_segments(segments, max_size = 20) #> [1] \"First segment.\"  \"Second segment.\" \"Third segment.\"  \"Fourth segment.\" ragnar_chunk_segments(segments, max_size = 40) #> [1] \"First segment. Second segment.\" \"Third segment. Fourth segment.\" ragnar_chunk_segments(segments, max_size = 60) #> [1] \"First segment. Second segment. Third segment.\" #> [2] \"Fourth segment.\""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_find_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Find links on a page ‚Äî ragnar_find_links","title":"Find links on a page ‚Äî ragnar_find_links","text":"Find links page","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_find_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find links on a page ‚Äî ragnar_find_links","text":"","code":"ragnar_find_links(x, depth = 0L, children_only = TRUE, progress = TRUE)"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_find_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find links on a page ‚Äî ragnar_find_links","text":"x URL, HTML file path, XML document. Markdown, convert HTML using commonmark::markdown_html() first. depth Integer specifying many levels deep crawl links. depth > 0, function follow child links (links x prefix) collect links pages well. children_only Logical string. TRUE, returns child links (x prefix). FALSE, returns links found page. Note regardless setting, child links followed depth > 0. progress Logical, draw progress bar depth > 0. separate progress bar drawn per recursion level.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_find_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find links on a page ‚Äî ragnar_find_links","text":"character vector links page.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_find_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find links on a page ‚Äî ragnar_find_links","text":"","code":"ragnar_find_links(\"https://r4ds.hadley.nz/base-R.html\") #>  [1] \"https://r4ds.hadley.nz/EDA.html\"              #>  [2] \"https://r4ds.hadley.nz/arrow.html\"            #>  [3] \"https://r4ds.hadley.nz/base-R.html\"           #>  [4] \"https://r4ds.hadley.nz/communicate.html\"      #>  [5] \"https://r4ds.hadley.nz/communication.html\"    #>  [6] \"https://r4ds.hadley.nz/data-import.html\"      #>  [7] \"https://r4ds.hadley.nz/data-tidy.html\"        #>  [8] \"https://r4ds.hadley.nz/data-transform.html\"   #>  [9] \"https://r4ds.hadley.nz/data-visualize.html\"   #> [10] \"https://r4ds.hadley.nz/databases.html\"        #> [11] \"https://r4ds.hadley.nz/datetimes.html\"        #> [12] \"https://r4ds.hadley.nz/factors.html\"          #> [13] \"https://r4ds.hadley.nz/functions.html\"        #> [14] \"https://r4ds.hadley.nz/import.html\"           #> [15] \"https://r4ds.hadley.nz/intro.html\"            #> [16] \"https://r4ds.hadley.nz/iteration.html\"        #> [17] \"https://r4ds.hadley.nz/joins.html\"            #> [18] \"https://r4ds.hadley.nz/layers.html\"           #> [19] \"https://r4ds.hadley.nz/logicals.html\"         #> [20] \"https://r4ds.hadley.nz/missing-values.html\"   #> [21] \"https://r4ds.hadley.nz/numbers.html\"          #> [22] \"https://r4ds.hadley.nz/preface-2e.html\"       #> [23] \"https://r4ds.hadley.nz/program.html\"          #> [24] \"https://r4ds.hadley.nz/quarto-formats.html\"   #> [25] \"https://r4ds.hadley.nz/quarto.html\"           #> [26] \"https://r4ds.hadley.nz/rectangling.html\"      #> [27] \"https://r4ds.hadley.nz/regexps.html\"          #> [28] \"https://r4ds.hadley.nz/spreadsheets.html\"     #> [29] \"https://r4ds.hadley.nz/strings.html\"          #> [30] \"https://r4ds.hadley.nz/transform.html\"        #> [31] \"https://r4ds.hadley.nz/visualize.html\"        #> [32] \"https://r4ds.hadley.nz/webscraping.html\"      #> [33] \"https://r4ds.hadley.nz/whole-game.html\"       #> [34] \"https://r4ds.hadley.nz/workflow-basics.html\"  #> [35] \"https://r4ds.hadley.nz/workflow-help.html\"    #> [36] \"https://r4ds.hadley.nz/workflow-scripts.html\" #> [37] \"https://r4ds.hadley.nz/workflow-style.html\"   ragnar_find_links(\"https://ellmer.tidyverse.org/\") #>  [1] \"https://ellmer.tidyverse.org/LICENSE-text.html\"                  #>  [2] \"https://ellmer.tidyverse.org/LICENSE.html\"                       #>  [3] \"https://ellmer.tidyverse.org/articles/ellmer.html\"               #>  [4] \"https://ellmer.tidyverse.org/articles/prompt-design.html\"        #>  [5] \"https://ellmer.tidyverse.org/articles/streaming-async.html\"      #>  [6] \"https://ellmer.tidyverse.org/articles/structured-data.html\"      #>  [7] \"https://ellmer.tidyverse.org/articles/tool-calling.html\"         #>  [8] \"https://ellmer.tidyverse.org/authors.html\"                       #>  [9] \"https://ellmer.tidyverse.org/index.html\"                         #> [10] \"https://ellmer.tidyverse.org/news/index.html\"                    #> [11] \"https://ellmer.tidyverse.org/reference/chat_azure.html\"          #> [12] \"https://ellmer.tidyverse.org/reference/chat_bedrock.html\"        #> [13] \"https://ellmer.tidyverse.org/reference/chat_claude.html\"         #> [14] \"https://ellmer.tidyverse.org/reference/chat_cortex_analyst.html\" #> [15] \"https://ellmer.tidyverse.org/reference/chat_databricks.html\"     #> [16] \"https://ellmer.tidyverse.org/reference/chat_deepseek.html\"       #> [17] \"https://ellmer.tidyverse.org/reference/chat_gemini.html\"         #> [18] \"https://ellmer.tidyverse.org/reference/chat_github.html\"         #> [19] \"https://ellmer.tidyverse.org/reference/chat_groq.html\"           #> [20] \"https://ellmer.tidyverse.org/reference/chat_ollama.html\"         #> [21] \"https://ellmer.tidyverse.org/reference/chat_openai.html\"         #> [22] \"https://ellmer.tidyverse.org/reference/chat_openrouter.html\"     #> [23] \"https://ellmer.tidyverse.org/reference/chat_perplexity.html\"     #> [24] \"https://ellmer.tidyverse.org/reference/chat_snowflake.html\"      #> [25] \"https://ellmer.tidyverse.org/reference/chat_vllm.html\"           #> [26] \"https://ellmer.tidyverse.org/reference/content_image_url.html\"   #> [27] \"https://ellmer.tidyverse.org/reference/index.html\"               #> [28] \"https://ellmer.tidyverse.org/reference/live_console.html\"        ragnar_find_links(\"https://ellmer.tidyverse.org/\", depth = 2) #>  [1] \"https://ellmer.tidyverse.org/LICENSE-text.html\"                  #>  [2] \"https://ellmer.tidyverse.org/LICENSE.html\"                       #>  [3] \"https://ellmer.tidyverse.org/articles/ellmer.html\"               #>  [4] \"https://ellmer.tidyverse.org/articles/prompt-design.html\"        #>  [5] \"https://ellmer.tidyverse.org/articles/streaming-async.html\"      #>  [6] \"https://ellmer.tidyverse.org/articles/structured-data.html\"      #>  [7] \"https://ellmer.tidyverse.org/articles/tool-calling.html\"         #>  [8] \"https://ellmer.tidyverse.org/authors.html\"                       #>  [9] \"https://ellmer.tidyverse.org/index.html\"                         #> [10] \"https://ellmer.tidyverse.org/news/index.html\"                    #> [11] \"https://ellmer.tidyverse.org/reference/Chat.html\"                #> [12] \"https://ellmer.tidyverse.org/reference/Content.html\"             #> [13] \"https://ellmer.tidyverse.org/reference/Provider.html\"            #> [14] \"https://ellmer.tidyverse.org/reference/Turn.html\"                #> [15] \"https://ellmer.tidyverse.org/reference/Type.html\"                #> [16] \"https://ellmer.tidyverse.org/reference/chat_azure.html\"          #> [17] \"https://ellmer.tidyverse.org/reference/chat_bedrock.html\"        #> [18] \"https://ellmer.tidyverse.org/reference/chat_claude.html\"         #> [19] \"https://ellmer.tidyverse.org/reference/chat_cortex.html\"         #> [20] \"https://ellmer.tidyverse.org/reference/chat_cortex_analyst.html\" #> [21] \"https://ellmer.tidyverse.org/reference/chat_databricks.html\"     #> [22] \"https://ellmer.tidyverse.org/reference/chat_deepseek.html\"       #> [23] \"https://ellmer.tidyverse.org/reference/chat_gemini.html\"         #> [24] \"https://ellmer.tidyverse.org/reference/chat_github.html\"         #> [25] \"https://ellmer.tidyverse.org/reference/chat_groq.html\"           #> [26] \"https://ellmer.tidyverse.org/reference/chat_ollama.html\"         #> [27] \"https://ellmer.tidyverse.org/reference/chat_openai.html\"         #> [28] \"https://ellmer.tidyverse.org/reference/chat_openrouter.html\"     #> [29] \"https://ellmer.tidyverse.org/reference/chat_perplexity.html\"     #> [30] \"https://ellmer.tidyverse.org/reference/chat_snowflake.html\"      #> [31] \"https://ellmer.tidyverse.org/reference/chat_vllm.html\"           #> [32] \"https://ellmer.tidyverse.org/reference/content_image_url.html\"   #> [33] \"https://ellmer.tidyverse.org/reference/content_pdf_file.html\"    #> [34] \"https://ellmer.tidyverse.org/reference/contents_text.html\"       #> [35] \"https://ellmer.tidyverse.org/reference/create_tool_def.html\"     #> [36] \"https://ellmer.tidyverse.org/reference/gemini_upload.html\"       #> [37] \"https://ellmer.tidyverse.org/reference/index.html\"               #> [38] \"https://ellmer.tidyverse.org/reference/interpolate.html\"         #> [39] \"https://ellmer.tidyverse.org/reference/live_console.html\"        #> [40] \"https://ellmer.tidyverse.org/reference/token_usage.html\"         #> [41] \"https://ellmer.tidyverse.org/reference/tool.html\"                #> [42] \"https://ellmer.tidyverse.org/reference/type_boolean.html\"        ragnar_find_links(\"https://ellmer.tidyverse.org/\", depth = 2, children_only = FALSE) #>   [1] \"http://tiktokenizer.vercel.app\"                                                                              #>   [2] \"https://ai.google.dev/gemini-api/docs/prompting-intro\"                                                       #>   [3] \"https://ai.google.dev/gemini-api/terms\"                                                                      #>   [4] \"https://aistudio.google.com/app/apikey\"                                                                      #>   [5] \"https://api-docs.deepseek.com/guides/function_calling\"                                                       #>   [6] \"https://aws.amazon.com/bedrock\"                                                                              #>   [7] \"https://aws.amazon.com/bedrock/claude\"                                                                       #>   [8] \"https://aws.amazon.com/blogs/machine-learning/getting-started-with-cross-region-inference-in-amazon-bedrock\" #>   [9] \"https://azure.microsoft.com/en-us/products/ai-services/openai-service\"                                       #>  [10] \"https://bsky.app/profile/daviddiviny.com/post/3lb6kjaen4c2u\"                                                 #>  [11] \"https://cdn.openai.com/spec/model-spec-2024-05-08.html\"                                                      #>  [12] \"https://chat.openai.com\"                                                                                     #>  [13] \"https://cli.r-lib.org/reference/cli_abort.html\"                                                              #>  [14] \"https://cloud.r-project.org/package=ellmer\"                                                                  #>  [15] \"https://console.anthropic.com\"                                                                               #>  [16] \"https://console.anthropic.com/account/keys\"                                                                  #>  [17] \"https://coro.r-lib.org\"                                                                                      #>  [18] \"https://coro.r-lib.org/articles/generator.html\"                                                              #>  [19] \"https://coro.r-lib.org/reference/async.html\"                                                                 #>  [20] \"https://coro.r-lib.org/reference/async_generator.html\"                                                       #>  [21] \"https://coro.r-lib.org/reference/collect.html\"                                                               #>  [22] \"https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/overview\"                            #>  [23] \"https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/prompt-generator\"                    #>  [24] \"https://docs.anthropic.com/en/release-notes/system-prompts\"                                                  #>  [25] \"https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html\"                           #>  [26] \"https://docs.databricks.com/en/dev-tools/auth/unified-auth.html\"                                             #>  [27] \"https://docs.databricks.com/en/machine-learning/model-serving/score-foundation-models.html\"                  #>  [28] \"https://docs.posit.co/connect/user/oauth-integrations\"                                                       #>  [29] \"https://docs.posit.co/ide/server-pro/user/posit-workbench/managed-credentials/managed-credentials.html\"      #>  [30] \"https://docs.ropensci.org/commonmark/reference/commonmark.html\"                                              #>  [31] \"https://docs.snowflake.com/en/user-guide/admin-account-identifier\"                                           #>  [32] \"https://docs.snowflake.com/en/user-guide/snowflake-cortex/cortex-analyst\"                                    #>  [33] \"https://docs.snowflake.com/en/user-guide/snowflake-cortex/cortex-llm-rest-api\"                               #>  [34] \"https://docs.vllm.ai/en/latest\"                                                                              #>  [35] \"https://ellmer.tidyverse.org\"                                                                                #>  [36] \"https://ellmer.tidyverse.org/LICENSE-text.html\"                                                              #>  [37] \"https://ellmer.tidyverse.org/LICENSE.html\"                                                                   #>  [38] \"https://ellmer.tidyverse.org/articles/ellmer.html\"                                                           #>  [39] \"https://ellmer.tidyverse.org/articles/prompt-design.html\"                                                    #>  [40] \"https://ellmer.tidyverse.org/articles/streaming-async.html\"                                                  #>  [41] \"https://ellmer.tidyverse.org/articles/structured-data.html\"                                                  #>  [42] \"https://ellmer.tidyverse.org/articles/tool-calling.html\"                                                     #>  [43] \"https://ellmer.tidyverse.org/authors.html\"                                                                   #>  [44] \"https://ellmer.tidyverse.org/index.html\"                                                                     #>  [45] \"https://ellmer.tidyverse.org/news/index.html\"                                                                #>  [46] \"https://ellmer.tidyverse.org/reference/Chat.html\"                                                            #>  [47] \"https://ellmer.tidyverse.org/reference/Content.html\"                                                         #>  [48] \"https://ellmer.tidyverse.org/reference/Provider.html\"                                                        #>  [49] \"https://ellmer.tidyverse.org/reference/Turn.html\"                                                            #>  [50] \"https://ellmer.tidyverse.org/reference/Type.html\"                                                            #>  [51] \"https://ellmer.tidyverse.org/reference/chat_azure.html\"                                                      #>  [52] \"https://ellmer.tidyverse.org/reference/chat_bedrock.html\"                                                    #>  [53] \"https://ellmer.tidyverse.org/reference/chat_claude.html\"                                                     #>  [54] \"https://ellmer.tidyverse.org/reference/chat_cortex.html\"                                                     #>  [55] \"https://ellmer.tidyverse.org/reference/chat_cortex_analyst.html\"                                             #>  [56] \"https://ellmer.tidyverse.org/reference/chat_databricks.html\"                                                 #>  [57] \"https://ellmer.tidyverse.org/reference/chat_deepseek.html\"                                                   #>  [58] \"https://ellmer.tidyverse.org/reference/chat_gemini.html\"                                                     #>  [59] \"https://ellmer.tidyverse.org/reference/chat_github.html\"                                                     #>  [60] \"https://ellmer.tidyverse.org/reference/chat_groq.html\"                                                       #>  [61] \"https://ellmer.tidyverse.org/reference/chat_ollama.html\"                                                     #>  [62] \"https://ellmer.tidyverse.org/reference/chat_openai.html\"                                                     #>  [63] \"https://ellmer.tidyverse.org/reference/chat_openrouter.html\"                                                 #>  [64] \"https://ellmer.tidyverse.org/reference/chat_perplexity.html\"                                                 #>  [65] \"https://ellmer.tidyverse.org/reference/chat_snowflake.html\"                                                  #>  [66] \"https://ellmer.tidyverse.org/reference/chat_vllm.html\"                                                       #>  [67] \"https://ellmer.tidyverse.org/reference/content_image_url.html\"                                               #>  [68] \"https://ellmer.tidyverse.org/reference/content_pdf_file.html\"                                                #>  [69] \"https://ellmer.tidyverse.org/reference/contents_text.html\"                                                   #>  [70] \"https://ellmer.tidyverse.org/reference/create_tool_def.html\"                                                 #>  [71] \"https://ellmer.tidyverse.org/reference/gemini_upload.html\"                                                   #>  [72] \"https://ellmer.tidyverse.org/reference/index.html\"                                                           #>  [73] \"https://ellmer.tidyverse.org/reference/interpolate.html\"                                                     #>  [74] \"https://ellmer.tidyverse.org/reference/live_console.html\"                                                    #>  [75] \"https://ellmer.tidyverse.org/reference/token_usage.html\"                                                     #>  [76] \"https://ellmer.tidyverse.org/reference/tool.html\"                                                            #>  [77] \"https://ellmer.tidyverse.org/reference/type_boolean.html\"                                                    #>  [78] \"https://gh.r-lib.org\"                                                                                        #>  [79] \"https://gist.github.com/dannguyen/faaa56cebf30ad51108a9fe4f8db36d8\"                                          #>  [80] \"https://gist.github.com/hadley/7688b4dd1e5e97b800c6d7d79e437b48\"                                             #>  [81] \"https://github.com/andrie\"                                                                                   #>  [82] \"https://github.com/anthropics/anthropic-cookbook/blob/main/tool_use/extracting_structured_json.ipynb\"        #>  [83] \"https://github.com/atheriel\"                                                                                 #>  [84] \"https://github.com/billsanto\"                                                                                #>  [85] \"https://github.com/cpsievert/aidea\"                                                                          #>  [86] \"https://github.com/cpsievert/aidea/blob/main/inst/app/prompt.md\"                                             #>  [87] \"https://github.com/jcheng5/elmer-assistant\"                                                                  #>  [88] \"https://github.com/jcheng5/py-sidebot/blob/main/prompt.md\"                                                   #>  [89] \"https://github.com/jcheng5/shinychat\"                                                                        #>  [90] \"https://github.com/marketplace/models\"                                                                       #>  [91] \"https://github.com/posit-dev/chatlas\"                                                                        #>  [92] \"https://github.com/posit-dev/shiny-assistant/blob/main/shinyapp/app_prompt.md\"                               #>  [93] \"https://github.com/posit-dev/shiny-assistant/blob/main/shinyapp/app_prompt_python.md\"                        #>  [94] \"https://github.com/posit-dev/shiny-assistant/blob/main/shinyapp/app_prompt_r.md\"                             #>  [95] \"https://github.com/simonpcouch/pal/tree/main/inst/prompts\"                                                   #>  [96] \"https://github.com/tidyverse/ellmer\"                                                                         #>  [97] \"https://github.com/tidyverse/ellmer/blob/main/DESCRIPTION\"                                                   #>  [98] \"https://github.com/tidyverse/ellmer/blob/main/LICENSE.md\"                                                    #>  [99] \"https://github.com/tidyverse/ellmer/blob/main/NEWS.md\"                                                       #> [100] \"https://github.com/tidyverse/ellmer/blob/main/R/chat.R\"                                                      #> [101] \"https://github.com/tidyverse/ellmer/blob/main/R/content-image.R\"                                             #> [102] \"https://github.com/tidyverse/ellmer/blob/main/R/content-pdf.R\"                                               #> [103] \"https://github.com/tidyverse/ellmer/blob/main/R/content.R\"                                                   #> [104] \"https://github.com/tidyverse/ellmer/blob/main/R/interpolate.R\"                                               #> [105] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-azure.R\"                                            #> [106] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-bedrock.R\"                                          #> [107] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-claude.R\"                                           #> [108] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-cortex.R\"                                           #> [109] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-databricks.R\"                                       #> [110] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-deepseek.R\"                                         #> [111] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-gemini-upload.R\"                                    #> [112] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-gemini.R\"                                           #> [113] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-github.R\"                                           #> [114] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-groq.R\"                                             #> [115] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-ollama.R\"                                           #> [116] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-openai.R\"                                           #> [117] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-openrouter.R\"                                       #> [118] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-perplexity.R\"                                       #> [119] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-snowflake.R\"                                        #> [120] \"https://github.com/tidyverse/ellmer/blob/main/R/provider-vllm.R\"                                             #> [121] \"https://github.com/tidyverse/ellmer/blob/main/R/provider.R\"                                                  #> [122] \"https://github.com/tidyverse/ellmer/blob/main/R/shiny.R\"                                                     #> [123] \"https://github.com/tidyverse/ellmer/blob/main/R/tokens.R\"                                                    #> [124] \"https://github.com/tidyverse/ellmer/blob/main/R/tools-def-auto.R\"                                            #> [125] \"https://github.com/tidyverse/ellmer/blob/main/R/tools-def.R\"                                                 #> [126] \"https://github.com/tidyverse/ellmer/blob/main/R/turns.R\"                                                     #> [127] \"https://github.com/tidyverse/ellmer/blob/main/R/types.R\"                                                     #> [128] \"https://github.com/tidyverse/ellmer/blob/main/vignettes/ellmer.Rmd\"                                          #> [129] \"https://github.com/tidyverse/ellmer/blob/main/vignettes/prompt-design.Rmd\"                                   #> [130] \"https://github.com/tidyverse/ellmer/blob/main/vignettes/streaming-async.Rmd\"                                 #> [131] \"https://github.com/tidyverse/ellmer/blob/main/vignettes/structured-data.Rmd\"                                 #> [132] \"https://github.com/tidyverse/ellmer/blob/main/vignettes/tool-calling.Rmd\"                                    #> [133] \"https://github.com/tidyverse/ellmer/issues\"                                                                  #> [134] \"https://github.com/tidyverse/ellmer/issues/110\"                                                              #> [135] \"https://github.com/tidyverse/ellmer/issues/115\"                                                              #> [136] \"https://github.com/tidyverse/ellmer/issues/117\"                                                              #> [137] \"https://github.com/tidyverse/ellmer/issues/140\"                                                              #> [138] \"https://github.com/tidyverse/ellmer/issues/143\"                                                              #> [139] \"https://github.com/tidyverse/ellmer/issues/152\"                                                              #> [140] \"https://github.com/tidyverse/ellmer/issues/157\"                                                              #> [141] \"https://github.com/tidyverse/ellmer/issues/212\"                                                              #> [142] \"https://github.com/tidyverse/ellmer/issues/213\"                                                              #> [143] \"https://github.com/tidyverse/ellmer/issues/242\"                                                              #> [144] \"https://github.com/tidyverse/ellmer/issues/246\"                                                              #> [145] \"https://github.com/tidyverse/ellmer/issues/248\"                                                              #> [146] \"https://github.com/tidyverse/ellmer/issues/252\"                                                              #> [147] \"https://github.com/tidyverse/ellmer/issues/254\"                                                              #> [148] \"https://github.com/tidyverse/ellmer/issues/257\"                                                              #> [149] \"https://github.com/tidyverse/ellmer/issues/258\"                                                              #> [150] \"https://github.com/tidyverse/ellmer/issues/261\"                                                              #> [151] \"https://github.com/tidyverse/ellmer/issues/263\"                                                              #> [152] \"https://github.com/tidyverse/ellmer/issues/265\"                                                              #> [153] \"https://github.com/tidyverse/ellmer/issues/269\"                                                              #> [154] \"https://github.com/tidyverse/ellmer/issues/271\"                                                              #> [155] \"https://github.com/tidyverse/ellmer/issues/273\"                                                              #> [156] \"https://github.com/tidyverse/ellmer/issues/275\"                                                              #> [157] \"https://github.com/tidyverse/ellmer/issues/285\"                                                              #> [158] \"https://github.com/tidyverse/ellmer/issues/295\"                                                              #> [159] \"https://github.com/tidyverse/ellmer/issues/299\"                                                              #> [160] \"https://github.com/tidyverse/ellmer/issues/300\"                                                              #> [161] \"https://github.com/tidyverse/ellmer/issues/31\"                                                               #> [162] \"https://github.com/tidyverse/ellmer/issues/310\"                                                              #> [163] \"https://github.com/tidyverse/ellmer/issues/317\"                                                              #> [164] \"https://github.com/tidyverse/ellmer/issues/32\"                                                               #> [165] \"https://github.com/tidyverse/ellmer/issues/320\"                                                              #> [166] \"https://github.com/tidyverse/ellmer/issues/50\"                                                               #> [167] \"https://github.com/tidyverse/ellmer/issues/56\"                                                               #> [168] \"https://github.com/walkerke\"                                                                                 #> [169] \"https://glue.tidyverse.org\"                                                                                  #> [170] \"https://glue.tidyverse.org/articles/wrappers.html\"                                                           #> [171] \"https://groq.com\"                                                                                            #> [172] \"https://hadley.nz\"                                                                                           #> [173] \"https://hauselin.github.io/ollama-r\"                                                                         #> [174] \"https://httr2.r-lib.org/reference/req_headers.html\"                                                          #> [175] \"https://httr2.r-lib.org/reference/with_verbosity.html\"                                                       #> [176] \"https://json-schema.org\"                                                                                     #> [177] \"https://lifecycle.r-lib.org/articles/stages.html\"                                                            #> [178] \"https://ollama.com\"                                                                                          #> [179] \"https://openai.com\"                                                                                          #> [180] \"https://openrouter.ai\"                                                                                       #> [181] \"https://openrouter.ai/models\"                                                                                #> [182] \"https://opensource.org/licenses/mit-license.php\"                                                             #> [183] \"https://orcid.org/0000-0003-4757-117X\"                                                                       #> [184] \"https://pkgdown.r-lib.org\"                                                                                   #> [185] \"https://platform.deepseek.com\"                                                                               #> [186] \"https://platform.openai.com\"                                                                                 #> [187] \"https://platform.openai.com/account/api-keys\"                                                                #> [188] \"https://platform.openai.com/docs/guides/prompt-engineering\"                                                  #> [189] \"https://platform.openai.com/docs/guides/vision/low-or-high-fidelity-image-understanding\"                     #> [190] \"https://posit-dev.github.io/brand-yml/articles/llm-brand-yml-prompt\"                                         #> [191] \"https://r-lib.github.io/later/reference/later_fd.html\"                                                       #> [192] \"https://r6.r-lib.org\"                                                                                        #> [193] \"https://rdrr.io/r/base/AsIs.html\"                                                                            #> [194] \"https://rdrr.io/r/base/Paren.html\"                                                                           #> [195] \"https://rdrr.io/r/base/Sys.time.html\"                                                                        #> [196] \"https://rdrr.io/r/base/c.html\"                                                                               #> [197] \"https://rdrr.io/r/base/cat.html\"                                                                             #> [198] \"https://rdrr.io/r/base/character.html\"                                                                       #> [199] \"https://rdrr.io/r/base/chartr.html\"                                                                          #> [200] \"https://rdrr.io/r/base/do.call.html\"                                                                         #> [201] \"https://rdrr.io/r/base/format.html\"                                                                          #> [202] \"https://rdrr.io/r/base/interactive.html\"                                                                     #> [203] \"https://rdrr.io/r/base/lapply.html\"                                                                          #> [204] \"https://rdrr.io/r/base/library.html\"                                                                         #> [205] \"https://rdrr.io/r/base/list.html\"                                                                            #> [206] \"https://rdrr.io/r/base/print.html\"                                                                           #> [207] \"https://rdrr.io/r/base/readLines.html\"                                                                       #> [208] \"https://rdrr.io/r/base/stop.html\"                                                                            #> [209] \"https://rdrr.io/r/base/sys.parent.html\"                                                                      #> [210] \"https://rdrr.io/r/base/system.file.html\"                                                                     #> [211] \"https://rdrr.io/r/graphics/plot.default.html\"                                                                #> [212] \"https://rdrr.io/r/stats/Normal.html\"                                                                         #> [213] \"https://rdrr.io/r/utils/install.packages.html\"                                                               #> [214] \"https://rdrr.io/r/utils/str.html\"                                                                            #> [215] \"https://rlang.r-lib.org/reference/is_installed.html\"                                                         #> [216] \"https://roxygen2.r-lib.org\"                                                                                  #> [217] \"https://rstudio.github.io/promises\"                                                                          #> [218] \"https://rstudio.github.io/promises/reference/pipes.html\"                                                     #> [219] \"https://shiny.posit.co/blog/posts/shiny-assistant\"                                                           #> [220] \"https://simonpcouch.github.io/pal\"                                                                           #> [221] \"https://usethis.r-lib.org/articles/git-credentials.html\"                                                     #> [222] \"https://www.anthropic.com\"                                                                                   #> [223] \"https://www.anthropic.com/claude\"                                                                            #> [224] \"https://www.oneusefulthing.org/p/getting-started-with-ai-good-enough\"                                        #> [225] \"https://www.paws-r-sdk.com\"                                                                                  #> [226] \"https://www.perplexity.ai\"                                                                                   #> [227] \"https://www.posit.co\"                                                                                        #> [228] \"https://www.youtube.com/watch?v=sYliwvml9Es\"                                                                 #> [229] \"https://www.youtube.com/watch?v=zduSFxRajkE\"                                                                 ragnar_find_links(   \"https://github.com/Snowflake-Labs/sfquickstarts/tree/master/site/sfguides/src/build_a_custom_model_for_anomaly_detection\",   children_only = \"https://github.com/Snowflake-Labs/sfquickstarts\",   depth = 1 ) #>  [1] \"https://github.com/Snowflake-Labs/sfquickstarts\"                                                                                                                        #>  [2] \"https://github.com/Snowflake-Labs/sfquickstarts/actions\"                                                                                                                #>  [3] \"https://github.com/Snowflake-Labs/sfquickstarts/blob/master/site/sfguides/src/build_a_custom_model_for_anomaly_detection/assets/external_access.gif\"                    #>  [4] \"https://github.com/Snowflake-Labs/sfquickstarts/blob/master/site/sfguides/src/build_a_custom_model_for_anomaly_detection/build_a_custom_model_for_anomaly_detection.md\" #>  [5] \"https://github.com/Snowflake-Labs/sfquickstarts/commits/master/site/sfguides/src/build_a_custom_model_for_anomaly_detection\"                                            #>  [6] \"https://github.com/Snowflake-Labs/sfquickstarts/commits/master/site/sfguides/src/build_a_custom_model_for_anomaly_detection/assets\"                                     #>  [7] \"https://github.com/Snowflake-Labs/sfquickstarts/issues\"                                                                                                                 #>  [8] \"https://github.com/Snowflake-Labs/sfquickstarts/projects\"                                                                                                               #>  [9] \"https://github.com/Snowflake-Labs/sfquickstarts/pulls\"                                                                                                                  #> [10] \"https://github.com/Snowflake-Labs/sfquickstarts/pulse\"                                                                                                                  #> [11] \"https://github.com/Snowflake-Labs/sfquickstarts/security\"                                                                                                               #> [12] \"https://github.com/Snowflake-Labs/sfquickstarts/tree/master\"                                                                                                            #> [13] \"https://github.com/Snowflake-Labs/sfquickstarts/tree/master/site\"                                                                                                       #> [14] \"https://github.com/Snowflake-Labs/sfquickstarts/tree/master/site/sfguides\"                                                                                              #> [15] \"https://github.com/Snowflake-Labs/sfquickstarts/tree/master/site/sfguides/src\"                                                                                          #> [16] \"https://github.com/Snowflake-Labs/sfquickstarts/tree/master/site/sfguides/src/build_a_custom_model_for_anomaly_detection\"                                               #> [17] \"https://github.com/Snowflake-Labs/sfquickstarts/tree/master/site/sfguides/src/build_a_custom_model_for_anomaly_detection/assets\""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a document as Markdown ‚Äî ragnar_read","title":"Read a document as Markdown ‚Äî ragnar_read","text":"ragnar_read() uses markitdown convert document markdown. frame_by_tags split_by_tags provided, converted markdown content split converted data frame, otherwise, markdown returned string.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a document as Markdown ‚Äî ragnar_read","text":"","code":"ragnar_read(x, ..., split_by_tags = NULL, frame_by_tags = NULL)"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a document as Markdown ‚Äî ragnar_read","text":"x file path url. ... passed markitdown.convert. split_by_tags character vector html tag names used split returned text frame_by_tags character vector html tag names used create dataframe returned content","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a document as Markdown ‚Äî ragnar_read","text":"frame_by_tags NULL, data frame returned, column names c(\"frame_by_tags\", \"text\"). frame_by_tags NULL split_by_tags NULL, named character vector returned. frame_by_tags split_by_tags NULL, string (length-1 character vector) returned.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a document as Markdown ‚Äî ragnar_read","text":"","code":"file <- tempfile(fileext = \".html\") download.file(\"https://r4ds.hadley.nz/base-R.html\", file, quiet = TRUE)  # with no arguments, returns a single string of the text. file |> ragnar_read() |> str() #>  'glue' chr \"1. [Program](./program.html)\\n2. [27¬† A field guide to base R](./base-R.html)\\n\\n[R for Data Science (2e)](./)\\\"| __truncated__  # use `split_by_tags` to get a named character vector of length > 1 file |>   ragnar_read(split_by_tags = c(\"h1\", \"h2\", \"h3\")) |>   tibble::enframe(\"tag\", \"text\") #> # A tibble: 36 √ó 2 #>    tag   text                                                                    #>    <chr> <chr>                                                                   #>  1 \"\"    \"1. [Program](./program.html)\\n2. [27¬† A field guide to base R](./base‚Ä¶ #>  2 \"h2\"  \"## Table of contents\"                                                  #>  3 \"\"    \"* [27.1 Introduction](#introduction)\\n  + [27.1.1 Prerequisites](#pre‚Ä¶ #>  4 \"h1\"  \"# 27¬† A field guide to base R\"                                         #>  5 \"h2\"  \"## 27.1 Introduction\"                                                  #>  6 \"\"    \"To finish off the programming section, we‚Äôre going to give you a quic‚Ä¶ #>  7 \"h3\"  \"### 27.1.1 Prerequisites\"                                              #>  8 \"\"    \"This package focuses on base R so doesn‚Äôt have any real prerequisites‚Ä¶ #>  9 \"h2\"  \"## 27.2 Selecting multiple elements with `[`\"                          #> 10 \"\"    \"`[` is used to extract sub-components from vectors and data frames, a‚Ä¶ #> # ‚Ñπ 26 more rows  # use `frame_by_tags` to get a dataframe where the # headings associated with each text chunk are easily accessible file |>   ragnar_read(frame_by_tags = c(\"h1\", \"h2\", \"h3\")) #> # A tibble: 18 √ó 5 #>    h1                            h2                            h3    tag   text  #>    <chr>                         <chr>                         <chr> <chr> <chr> #>  1 NA                            NA                            NA    \"\"    \"1. ‚Ä¶ #>  2 NA                            ## Table of contents          NA    \"\"    \"* [‚Ä¶ #>  3 # 27¬† A field guide to base R ## 27.1 Introduction          NA    \"\"    \"To ‚Ä¶ #>  4 # 27¬† A field guide to base R ## 27.1 Introduction          ### ‚Ä¶ \"\"    \"Thi‚Ä¶ #>  5 # 27¬† A field guide to base R ## 27.2 Selecting multiple e‚Ä¶ NA    \"\"    \"`[`‚Ä¶ #>  6 # 27¬† A field guide to base R ## 27.2 Selecting multiple e‚Ä¶ ### ‚Ä¶ \"\"    \"The‚Ä¶ #>  7 # 27¬† A field guide to base R ## 27.2 Selecting multiple e‚Ä¶ ### ‚Ä¶ \"\"    \"The‚Ä¶ #>  8 # 27¬† A field guide to base R ## 27.2 Selecting multiple e‚Ä¶ ### ‚Ä¶ \"\"    \"Sev‚Ä¶ #>  9 # 27¬† A field guide to base R ## 27.2 Selecting multiple e‚Ä¶ ### ‚Ä¶ \"\"    \"1. ‚Ä¶ #> 10 # 27¬† A field guide to base R ## 27.3 Selecting a single e‚Ä¶ NA    \"\"    \"`[`‚Ä¶ #> 11 # 27¬† A field guide to base R ## 27.3 Selecting a single e‚Ä¶ ### ‚Ä¶ \"\"    \"`[[‚Ä¶ #> 12 # 27¬† A field guide to base R ## 27.3 Selecting a single e‚Ä¶ ### ‚Ä¶ \"\"    \"The‚Ä¶ #> 13 # 27¬† A field guide to base R ## 27.3 Selecting a single e‚Ä¶ ### ‚Ä¶ \"\"    \"`[[‚Ä¶ #> 14 # 27¬† A field guide to base R ## 27.3 Selecting a single e‚Ä¶ ### ‚Ä¶ \"\"    \"1. ‚Ä¶ #> 15 # 27¬† A field guide to base R ## 27.4 Apply family          NA    \"\"    \"In ‚Ä¶ #> 16 # 27¬† A field guide to base R ## 27.5 `for` loops           NA    \"\"    \"`fo‚Ä¶ #> 17 # 27¬† A field guide to base R ## 27.6 Plots                 NA    \"\"    \"Man‚Ä¶ #> 18 # 27¬† A field guide to base R ## 27.7 Summary               NA    \"\"    \"In ‚Ä¶  # use `split_by_tags` and `frame_by_tags` together to further break up `text`. file |>   ragnar_read(     split_by_tags = c(\"p\"),     frame_by_tags = c(\"h1\", \"h2\", \"h3\")   ) #> # A tibble: 163 √ó 5 #>    h1    h2    h3    tag   text                                                  #>    <chr> <chr> <chr> <chr> <chr>                                                 #>  1 NA    NA    NA    \"\"    \"1. [Program](./program.html)\\n2. [27¬† A field guide‚Ä¶ #>  2 NA    NA    NA    \"p\"   \"[R for Data Science (2e)](./)\"                       #>  3 NA    NA    NA    \"\"    \"*\"                                                   #>  4 NA    NA    NA    \"p\"   \"[Welcome](./index.html)\"                             #>  5 NA    NA    NA    \"\"    \"*\"                                                   #>  6 NA    NA    NA    \"p\"   \"[Preface to the second edition](./preface-2e.html)\"  #>  7 NA    NA    NA    \"\"    \"*\"                                                   #>  8 NA    NA    NA    \"p\"   \"[Introduction](./intro.html)\"                        #>  9 NA    NA    NA    \"\"    \"*\"                                                   #> 10 NA    NA    NA    \"p\"   \"[Whole game](./whole-game.html)\"                     #> # ‚Ñπ 153 more rows  # Example workflow adding context to each chunk file |>   ragnar_read(frame_by_tags = c(\"h1\", \"h2\", \"h3\")) |>   glue::glue_data(r\"--(     ## Excerpt from the book \"R for Data Science (2e)\"     chapter: {h1}     section: {h2}     content: {text}      )--\") |>   # inspect   _[6:7] |> cat(sep = \"\\n~~~~~~~~~~~\\n\") #> ## Excerpt from the book \"R for Data Science (2e)\" #> chapter: # 27¬† A field guide to base R #> section: ## 27.2 Selecting multiple elements with `[` #> content: There are five main types of things that you can subset a vector with, i.e., that can be the `i` in `x[i]`: #>  #> 1. **A vector of positive integers**. Subsetting with positive integers keeps the elements at those positions: #>  #>    ``` #>    x <- c(\"one\", \"two\", \"three\", \"four\", \"five\") #>    x[c(3, 2, 5)] #>    #> [1] \"three\" \"two\"   \"five\" #>    ``` #>  #>    By repeating a position, you can actually make a longer output than input, making the term ‚Äúsubsetting‚Äù a bit of a misnomer. #>  #>    ``` #>    x[c(1, 1, 5, 5, 5, 2)] #>    #> [1] \"one\"  \"one\"  \"five\" \"five\" \"five\" \"two\" #>    ``` #> 2. **A vector of negative integers**. Negative values drop the elements at the specified positions: #>  #>    ``` #>    x[c(-1, -3, -5)] #>    #> [1] \"two\"  \"four\" #>    ``` #> 3. **A logical vector**. Subsetting with a logical vector keeps all values corresponding to a `TRUE` value. This is most often useful in conjunction with the comparison functions. #>  #>    ``` #>    x <- c(10, 3, NA, 5, 8, 1, NA) #>  #>    # All non-missing values of x #>    x[!is.na(x)] #>    #> [1] 10  3  5  8  1 #>  #>    # All even (or missing!) values of x #>    x[x %% 2 == 0] #>    #> [1] 10 NA  8 NA #>    ``` #>  #>    Unlike `[filter()](https://dplyr.tidyverse.org/reference/filter.html)`, `NA` indices will be included in the output as `NA`s. #> 4. **A character vector**. If you have a named vector, you can subset it with a character vector: #>  #>    ``` #>    x <- c(abc = 1, def = 2, xyz = 5) #>    x[c(\"xyz\", \"def\")] #>    #> xyz def #>    #>   5   2 #>    ``` #>  #>    As with subsetting with positive integers, you can use a character vector to duplicate individual entries. #> 5. **Nothing**. The final type of subsetting is nothing, `x[]`, which returns the complete `x`. This is not useful for subsetting vectors, but as we‚Äôll see shortly, it is useful when subsetting 2d structures like tibbles. #>  #> ~~~~~~~~~~~ #> ## Excerpt from the book \"R for Data Science (2e)\" #> chapter: # 27¬† A field guide to base R #> section: ## 27.2 Selecting multiple elements with `[` #> content: There are quite a few different ways[1](#fn1) that you can use `[` with a data frame, but the most important way is to select rows and columns independently with `df[rows, cols]`. Here `rows` and `cols` are vectors as described above. For example, `df[rows, ]` and `df[, cols]` select just rows or just columns, using the empty subset to preserve the other dimension. #>  #> Here are a couple of examples: #>  #> ``` #> df <- tibble( #>   x = 1:3, #>   y = c(\"a\", \"e\", \"f\"), #>   z = runif(3) #> ) #>  #> # Select first row and second column #> df[1, 2] #> #> # A tibble: 1 √ó 1 #> #>   y #> #>   <chr> #> #> 1 a #>  #> # Select all rows and columns x and y #> df[, c(\"x\" , \"y\")] #> #> # A tibble: 3 √ó 2 #> #>       x y #> #>   <int> <chr> #> #> 1     1 a #> #> 2     2 e #> #> 3     3 f #>  #> # Select rows where `x` is greater than 1 and all columns #> df[df$x > 1, ] #> #> # A tibble: 2 √ó 3 #> #>       x y         z #> #>   <int> <chr> <dbl> #> #> 1     2 e     0.834 #> #> 2     3 f     0.601 #> ``` #>  #> We‚Äôll come back to `$` shortly, but you should be able to guess what `df$x` does from the context: it extracts the `x` variable from `df`. We need to use it here because `[` doesn‚Äôt use tidy evaluation, so you need to be explicit about the source of the `x` variable. #>  #> There‚Äôs an important difference between tibbles and data frames when it comes to `[`. In this book, we‚Äôve mainly used tibbles, which *are* data frames, but they tweak some behaviors to make your life a little easier. In most places, you can use ‚Äútibble‚Äù and ‚Äúdata frame‚Äù interchangeably, so when we want to draw particular attention to R‚Äôs built-in data frame, we‚Äôll write `data.frame`. If `df` is a `data.frame`, then `df[, cols]` will return a vector if `col` selects a single column and a data frame if it selects more than one column. If `df` is a tibble, then `[` will always return a tibble. #>  #> ``` #> df1 <- data.frame(x = 1:3) #> df1[, \"x\"] #> #> [1] 1 2 3 #>  #> df2 <- tibble(x = 1:3) #> df2[, \"x\"] #> #> # A tibble: 3 √ó 1 #> #>       x #> #>   <int> #> #> 1     1 #> #> 2     2 #> #> 3     3 #> ``` #>  #> One way to avoid this ambiguity with `data.frame`s is to explicitly specify `drop = FALSE`: #>  #> ``` #> df1[, \"x\" , drop = FALSE] #> #>   x #> #> 1 1 #> #> 2 2 #> #> 3 3 #> ``` #>   # Advanced example of postprocessing the output of ragnar_read() # to add language to code blocks, markdown style library(dplyr, warn.conflicts = FALSE) library(stringr) library(rvest) library(xml2) file |>   ragnar_read(frame_by_tags = c(\"h1\", \"h2\", \"h3\"),               split_by_tags = c(\"p\", \"pre\")) |>   mutate(     is_code = tag == \"pre\",     text = ifelse(is_code, str_replace(text, \"```\", \"```r\"), text)   ) |>   group_by(h1, h2, h3) |>   summarise(text = str_flatten(text, \"\\n\\n\"), .groups = \"drop\") |>   glue::glue_data(r\"--(     # Excerpt from the book \"R for Data Science (2e)\"     chapter: {h1}     section: {h2}     content: {text}      )--\") |>   # inspect   _[9:10] |> cat(sep = \"\\n~~~~~~~~~~~\\n\") #> # Excerpt from the book \"R for Data Science (2e)\" #> chapter: # 27¬† A field guide to base R #> section: ## 27.3 Selecting a single element with `$` and `[[` #> content: There are a couple of important differences between tibbles and base `data.frame`s when it comes to `$`. Data frames match the prefix of any variable names (so-called **partial matching**) and don‚Äôt complain if a column doesn‚Äôt exist: #>  #> ```r #> df <- data.frame(x1 = 1) #> df$x #> #> [1] 1 #> df$z #> #> NULL #> ``` #>  #> Tibbles are more strict: they only ever match variable names exactly and they will generate a warning if the column you are trying to access doesn‚Äôt exist: #>  #> ```r #> tb <- tibble(x1 = 1) #>  #> tb$x #> #> Warning: Unknown or uninitialised column: `x`. #> #> NULL #> tb$z #> #> Warning: Unknown or uninitialised column: `z`. #> #> NULL #> ``` #>  #> For this reason we sometimes joke that tibbles are lazy and surly: they do less and complain more. #>  #> ~~~~~~~~~~~ #> # Excerpt from the book \"R for Data Science (2e)\" #> chapter: # 27¬† A field guide to base R #> section: ## 27.3 Selecting a single element with `$` and `[[` #> content: `[[` and `$` are also really important for working with lists, and it‚Äôs important to understand how they differ from `[`. Let‚Äôs illustrate the differences with a list named `l`: #>  #> ```r #> l <- list( #>   a = 1:3, #>   b = \"a string\", #>   c = pi, #>   d = list(-1, -5) #> ) #> ``` #>  #> * #>  #> `[` extracts a sub-list. It doesn‚Äôt matter how many elements you extract, the result will always be a list. #>  #> ```r #>   str(l[1:2]) #>   #> List of 2 #>   #>  $ a: int [1:3] 1 2 3 #>   #>  $ b: chr \"a string\" #>  #>   str(l[1]) #>   #> List of 1 #>   #>  $ a: int [1:3] 1 2 3 #>  #>   str(l[4]) #>   #> List of 1 #>   #>  $ d:List of 2 #>   #>   ..$ : num -1 #>   #>   ..$ : num -5 #>   ``` #>  #> Like with vectors, you can subset with a logical, integer, or character vector. #>  #> * #>  #> `[[` and `$` extract a single component from a list. They remove a level of hierarchy from the list. #>  #> ```r #>   str(l[[1]]) #>   #>  int [1:3] 1 2 3 #>  #>   str(l[[4]]) #>   #> List of 2 #>   #>  $ : num -1 #>   #>  $ : num -5 #>  #>   str(l$a) #>   #>  int [1:3] 1 2 3 #>   ``` #>  #> The difference between `[` and `[[` is particularly important for lists because `[[` drills down into the list while `[` returns a new, smaller list. To help you remember the difference, take a look at the unusual pepper shaker shown in [Figure¬†27.1](#fig-pepper). If this pepper shaker is your list `pepper`, then, `pepper[1]` is a pepper shaker containing a single pepper packet. `pepper[2]` would look the same, but would contain the second packet. `pepper[1:2]` would be a pepper shaker containing two pepper packets. `pepper[[1]]` would extract the pepper packet itself. #>  #> ![Three photos. On the left is a photo of a glass pepper shaker. Instead of  the pepper shaker containing pepper, it contains a single packet of pepper. In the middle is a photo of a single packet of pepper. On the right is a  photo of the contents of a packet of pepper.](diagrams/pepper.png) #>  #> Figure¬†27.1: (Left) A pepper shaker that Hadley once found in his hotel room. (Middle) `pepper[1]`. (Right) `pepper[[1]]` #>  #> This same principle applies when you use 1d `[` with a data frame: `df[\"x\"]` returns a one-column data frame and `df[[\"x\"]]` returns a vector. #>"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_read_document.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an HTML document ‚Äî ragnar_read_document","title":"Read an HTML document ‚Äî ragnar_read_document","text":"Read HTML document","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_read_document.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an HTML document ‚Äî ragnar_read_document","text":"","code":"ragnar_read_document(   x,   ...,   split_by_tags = frame_by_tags,   frame_by_tags = NULL )"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_read_document.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an HTML document ‚Äî ragnar_read_document","text":"x file path url, passed rvest::read_html(), xml_node. ... passed rvest::read_html() split_by_tags character vector html tag names used split returned text frame_by_tags character vector html tag names used create dataframe returned content","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_read_document.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an HTML document ‚Äî ragnar_read_document","text":"frame_by_tags NULL, data frame returned, column names c(\"frame_by_tags\", \"text\"). frame_by_tags NULL split_by_tags NULL, named character vector returned. frame_by_tags split_by_tags NULL, string (length-1 character vector) returned.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_read_document.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an HTML document ‚Äî ragnar_read_document","text":"","code":"file <- tempfile(fileext = \".html\") download.file(\"https://r4ds.hadley.nz/base-R.html\", file, quiet = TRUE)  # with no arguments, returns a single string of the text. file |> ragnar_read_document() |> str() #>  chr \"Program\\n27 A field guide to base R\\nR for Data Science (2e)\\nWelcome\\nPreface to the second edition\\nIntroduct\"| __truncated__  # use `split_by_tags` to get a named character vector of length > 1 file |>   ragnar_read_document(split_by_tags = c(\"h1\", \"h2\", \"h3\")) |>   tibble::enframe(\"tag\", \"text\") #> # A tibble: 36 √ó 2 #>    tag   text                                                                    #>    <chr> <chr>                                                                   #>  1 \"\"    \"Program\\n27 A field guide to base R\\nR for Data Science (2e)\\nWelcome‚Ä¶ #>  2 \"h2\"  \"Table of contents\"                                                     #>  3 \"\"    \"27.1 Introduction\\n27.1.1 Prerequisites\\n27.2 Selecting multiple elem‚Ä¶ #>  4 \"h1\"  \"27 A field guide to base R\"                                            #>  5 \"h2\"  \"27.1 Introduction\"                                                     #>  6 \"\"    \"To finish off the programming section, we‚Äôre going to give you a quic‚Ä¶ #>  7 \"h3\"  \"27.1.1 Prerequisites\"                                                  #>  8 \"\"    \"This package focuses on base R so doesn‚Äôt have any real prerequisites‚Ä¶ #>  9 \"h2\"  \"27.2 Selecting multiple elements with [\"                               #> 10 \"\"    \"[ is used to extract sub-components from vectors and data frames, and‚Ä¶ #> # ‚Ñπ 26 more rows  # use `frame_by_tags` to get a dataframe where the # headings associated with each text chunk are easily accessible file |>   ragnar_read_document(frame_by_tags = c(\"h1\", \"h2\", \"h3\")) #> # A tibble: 18 √ó 4 #>    h1                         h2                                     h3    text  #>    <chr>                      <chr>                                  <chr> <chr> #>  1 NA                         NA                                     NA    \"Pro‚Ä¶ #>  2 NA                         Table of contents                      NA    \"27.‚Ä¶ #>  3 27 A field guide to base R 27.1 Introduction                      NA    \"To ‚Ä¶ #>  4 27 A field guide to base R 27.1 Introduction                      27.1‚Ä¶ \"Thi‚Ä¶ #>  5 27 A field guide to base R 27.2 Selecting multiple elements with‚Ä¶ NA    \"[ i‚Ä¶ #>  6 27 A field guide to base R 27.2 Selecting multiple elements with‚Ä¶ 27.2‚Ä¶ \"The‚Ä¶ #>  7 27 A field guide to base R 27.2 Selecting multiple elements with‚Ä¶ 27.2‚Ä¶ \"The‚Ä¶ #>  8 27 A field guide to base R 27.2 Selecting multiple elements with‚Ä¶ 27.2‚Ä¶ \"Sev‚Ä¶ #>  9 27 A field guide to base R 27.2 Selecting multiple elements with‚Ä¶ 27.2‚Ä¶ \"Cre‚Ä¶ #> 10 27 A field guide to base R 27.3 Selecting a single element with ‚Ä¶ NA    \"[, ‚Ä¶ #> 11 27 A field guide to base R 27.3 Selecting a single element with ‚Ä¶ 27.3‚Ä¶ \"[[ ‚Ä¶ #> 12 27 A field guide to base R 27.3 Selecting a single element with ‚Ä¶ 27.3‚Ä¶ \"The‚Ä¶ #> 13 27 A field guide to base R 27.3 Selecting a single element with ‚Ä¶ 27.3‚Ä¶ \"[[ ‚Ä¶ #> 14 27 A field guide to base R 27.3 Selecting a single element with ‚Ä¶ 27.3‚Ä¶ \"Wha‚Ä¶ #> 15 27 A field guide to base R 27.4 Apply family                      NA    \"In ‚Ä¶ #> 16 27 A field guide to base R 27.5 for loops                         NA    \"for‚Ä¶ #> 17 27 A field guide to base R 27.6 Plots                             NA    \"Man‚Ä¶ #> 18 27 A field guide to base R 27.7 Summary                           NA    \"In ‚Ä¶  # use `split_by_tags` and `frame_by_tags` together to further break up `text`. file |>   ragnar_read_document(     split_by_tags = c(\"p\"),     frame_by_tags = c(\"h1\", \"h2\", \"h3\")   ) #> # A tibble: 117 √ó 5 #>    h1                         h2                               h3    tag   text  #>    <chr>                      <chr>                            <chr> <chr> <chr> #>  1 NA                         NA                               NA    \"\"    \"Pro‚Ä¶ #>  2 NA                         Table of contents                NA    \"\"    \"27.‚Ä¶ #>  3 27 A field guide to base R 27.1 Introduction                NA    \"p\"   \"To ‚Ä¶ #>  4 27 A field guide to base R 27.1 Introduction                NA    \"p\"   \"Thi‚Ä¶ #>  5 27 A field guide to base R 27.1 Introduction                NA    \"p\"   \"Aft‚Ä¶ #>  6 27 A field guide to base R 27.1 Introduction                NA    \"p\"   \"In ‚Ä¶ #>  7 27 A field guide to base R 27.1 Introduction                27.1‚Ä¶ \"p\"   \"Thi‚Ä¶ #>  8 27 A field guide to base R 27.1 Introduction                27.1‚Ä¶ \"\"    \"lib‚Ä¶ #>  9 27 A field guide to base R 27.2 Selecting multiple element‚Ä¶ NA    \"p\"   \"[ i‚Ä¶ #> 10 27 A field guide to base R 27.2 Selecting multiple element‚Ä¶ 27.2‚Ä¶ \"p\"   \"The‚Ä¶ #> # ‚Ñπ 107 more rows  # Example workflow adding context to each chunk file |>   ragnar_read_document(frame_by_tags = c(\"h1\", \"h2\", \"h3\")) |>   glue::glue_data(r\"--(     ## Excerpt from the book \"R for Data Science (2e)\"     chapter: {h1}     section: {h2}     content: {text}      )--\") |>     # inspect     _[6:7] |> cat(sep = \"\\n~~~~~~~~~~~\\n\") #> ## Excerpt from the book \"R for Data Science (2e)\" #> chapter: 27 A field guide to base R #> section: 27.2 Selecting multiple elements with [ #> content: There are five main types of things that you can subset a vector with, i.e., that can be the i in x[i]: #>  #> A vector of positive integers. Subsetting with positive integers keeps the elements at those positions: #>  #> x <- c(\"one\", \"two\", \"three\", \"four\", \"five\") #> x[c(3, 2, 5)] #> #> [1] \"three\" \"two\"   \"five\" #>  #> By repeating a position, you can actually make a longer output than input, making the term ‚Äúsubsetting‚Äù a bit of a misnomer. #>  #> x[c(1, 1, 5, 5, 5, 2)] #> #> [1] \"one\"  \"one\"  \"five\" \"five\" \"five\" \"two\" #>  #> A vector of negative integers. Negative values drop the elements at the specified positions: #>  #> x[c(-1, -3, -5)] #> #> [1] \"two\"  \"four\" #>  #> A logical vector. Subsetting with a logical vector keeps all values corresponding to a TRUE value. This is most often useful in conjunction with the comparison functions. #>  #> x <- c(10, 3, NA, 5, 8, 1, NA) #>  #> # All non-missing values of x #> x[!is.na(x)] #> #> [1] 10  3  5  8  1 #>  #> # All even (or missing!) values of x #> x[x %% 2 == 0] #> #> [1] 10 NA  8 NA #>  #> Unlike filter(), NA indices will be included in the output as NAs. #>  #> A character vector. If you have a named vector, you can subset it with a character vector: #>  #> x <- c(abc = 1, def = 2, xyz = 5) #> x[c(\"xyz\", \"def\")] #> #> xyz def  #> #>   5   2 #>  #> As with subsetting with positive integers, you can use a character vector to duplicate individual entries. #>  #> Nothing. The final type of subsetting is nothing, x[], which returns the complete x. This is not useful for subsetting vectors, but as we‚Äôll see shortly, it is useful when subsetting 2d structures like tibbles. #>  #> ~~~~~~~~~~~ #> ## Excerpt from the book \"R for Data Science (2e)\" #> chapter: 27 A field guide to base R #> section: 27.2 Selecting multiple elements with [ #> content: There are quite a few different ways1 that you can use [ with a data frame, but the most important way is to select rows and columns independently with df[rows, cols]. Here rows and cols are vectors as described above. For example, df[rows, ] and df[, cols] select just rows or just columns, using the empty subset to preserve the other dimension. #>  #> Here are a couple of examples: #>  #> df <- tibble( #>   x = 1:3,  #>   y = c(\"a\", \"e\", \"f\"),  #>   z = runif(3) #> ) #>  #> # Select first row and second column #> df[1, 2] #> #> # A tibble: 1 √ó 1 #> #>   y     #> #>   <chr> #> #> 1 a #>  #> # Select all rows and columns x and y #> df[, c(\"x\" , \"y\")] #> #> # A tibble: 3 √ó 2 #> #>       x y     #> #>   <int> <chr> #> #> 1     1 a     #> #> 2     2 e     #> #> 3     3 f #>  #> # Select rows where `x` is greater than 1 and all columns #> df[df$x > 1, ] #> #> # A tibble: 2 √ó 3 #> #>       x y         z #> #>   <int> <chr> <dbl> #> #> 1     2 e     0.834 #> #> 2     3 f     0.601 #>  #> We‚Äôll come back to $ shortly, but you should be able to guess what df$x does from the context: it extracts the x variable from df. We need to use it here because [ doesn‚Äôt use tidy evaluation, so you need to be explicit about the source of the x variable. #>  #> There‚Äôs an important difference between tibbles and data frames when it comes to [. In this book, we‚Äôve mainly used tibbles, which are data frames, but they tweak some behaviors to make your life a little easier. In most places, you can use ‚Äútibble‚Äù and ‚Äúdata frame‚Äù interchangeably, so when we want to draw particular attention to R‚Äôs built-in data frame, we‚Äôll write data.frame. If df is a data.frame, then df[, cols] will return a vector if col selects a single column and a data frame if it selects more than one column. If df is a tibble, then [ will always return a tibble. #>  #> df1 <- data.frame(x = 1:3) #> df1[, \"x\"] #> #> [1] 1 2 3 #>  #> df2 <- tibble(x = 1:3) #> df2[, \"x\"] #> #> # A tibble: 3 √ó 1 #> #>       x #> #>   <int> #> #> 1     1 #> #> 2     2 #> #> 3     3 #>  #> One way to avoid this ambiguity with data.frames is to explicitly specify drop = FALSE: #>  #> df1[, \"x\" , drop = FALSE] #> #>   x #> #> 1 1 #> #> 2 2 #> #> 3 3 #>   # Advanced example of postprocessing the output of ragnar_read_document() # to wrap code blocks in backticks, markdown style library(dplyr, warn.conflicts = FALSE) library(stringr) library(rvest) library(xml2) file |>   ragnar_read_document(frame_by_tags = c(\"h1\", \"h2\", \"h3\"),                        split_by_tags = c(\"p\", \"pre\")) |>   mutate(     is_code = tag == \"pre\",     text = ifelse(is_code,                   str_c(\"```\", text, \"```\", sep = \"\\n\"),                   text)) |>   group_by(h1, h2, h3) |>   summarise(text = str_flatten(text, \"\\n\"), .groups = \"drop\") |>   glue::glue_data(r\"--(     # Excerpt from the book \"R for Data Science (2e)\"     chapter: {h1}     section: {h2}     content: {text}      )--\") |>     # inspect     _[9:10] |> cat(sep = \"\\n~~~~~~~~~~~\\n\") #> # Excerpt from the book \"R for Data Science (2e)\" #> chapter: 27 A field guide to base R #> section: 27.3 Selecting a single element with $ and [[ #> content: There are a couple of important differences between tibbles and base data.frames when it comes to $. Data frames match the prefix of any variable names (so-called partial matching) and don‚Äôt complain if a column doesn‚Äôt exist: #> ``` #> df <- data.frame(x1 = 1) #> df$x #> #> [1] 1 #> df$z #> #> NULL #> ``` #> Tibbles are more strict: they only ever match variable names exactly and they will generate a warning if the column you are trying to access doesn‚Äôt exist: #> ``` #> tb <- tibble(x1 = 1) #>  #> tb$x #> #> Warning: Unknown or uninitialised column: `x`. #> #> NULL #> tb$z #> #> Warning: Unknown or uninitialised column: `z`. #> #> NULL #> ``` #> For this reason we sometimes joke that tibbles are lazy and surly: they do less and complain more. #>  #> ~~~~~~~~~~~ #> # Excerpt from the book \"R for Data Science (2e)\" #> chapter: 27 A field guide to base R #> section: 27.3 Selecting a single element with $ and [[ #> content: [[ and $ are also really important for working with lists, and it‚Äôs important to understand how they differ from [. Let‚Äôs illustrate the differences with a list named l: #> ``` #> l <- list( #>   a = 1:3,  #>   b = \"a string\",  #>   c = pi,  #>   d = list(-1, -5) #> ) #> ``` #> [ extracts a sub-list. It doesn‚Äôt matter how many elements you extract, the result will always be a list. #> ``` #> str(l[1:2]) #> #> List of 2 #> #>  $ a: int [1:3] 1 2 3 #> #>  $ b: chr \"a string\" #>  #> str(l[1]) #> #> List of 1 #> #>  $ a: int [1:3] 1 2 3 #>  #> str(l[4]) #> #> List of 1 #> #>  $ d:List of 2 #> #>   ..$ : num -1 #> #>   ..$ : num -5 #> ``` #> Like with vectors, you can subset with a logical, integer, or character vector. #> [[ and $ extract a single component from a list. They remove a level of hierarchy from the list. #> ``` #> str(l[[1]]) #> #>  int [1:3] 1 2 3 #>  #> str(l[[4]]) #> #> List of 2 #> #>  $ : num -1 #> #>  $ : num -5 #>  #> str(l$a) #> #>  int [1:3] 1 2 3 #> ``` #> The difference between [ and [[ is particularly important for lists because [[ drills down into the list while [ returns a new, smaller list. To help you remember the difference, take a look at the unusual pepper shaker shown in Figure 27.1. If this pepper shaker is your list pepper, then, pepper[1] is a pepper shaker containing a single pepper packet. pepper[2] would look the same, but would contain the second packet. pepper[1:2] would be a pepper shaker containing two pepper packets. pepper[[1]] would extract the pepper packet itself. #> Figure 27.1: (Left) A pepper shaker that Hadley once found in his hotel room. (Middle) pepper[1]. (Right) pepper[[1]] #> This same principle applies when you use 1d [ with a data frame: df[\"x\"] returns a one-column data frame and df[[\"x\"]] returns a vector. #>   # Example of preprocessing the input to ragnar_read_document() # to wrap code in backticks, markdown style # same outcome as above, except via pre processing instead of post processing. file |>   read_html() |>   (\\(doc) {     # fence preformatted code with triple backticks     for (node in html_elements(doc, \"pre\")) {       xml_add_child(node, \"code\", \"```\\n\", .where = 0)       xml_add_child(node, \"code\", \"\\n```\")     }     # wrap inline code with single backticks     for (node in html_elements(doc, \"code\")) {       if (!\"pre\" %in% xml_name(xml_parents(node))) {         xml_text(node) <- str_c(\"`\", xml_text(node), \"`\")       }     }     doc   })() |>   ragnar_read_document(frame_by_tags = c(\"h1\", \"h2\", \"h3\")) |>   glue::glue_data(r\"--(     # Excerpt from the book \"R for Data Science (2e)\"     chapter: {h1}     section: {h2}     content: {text}      )--\") |> _[6] #> # Excerpt from the book \"R for Data Science (2e)\" #> chapter: 27 A field guide to base R #> section: 27.2 Selecting multiple elements with `[` #> content: There are five main types of things that you can subset a vector with, i.e., that can be the `i` in `x[i]`: #>  #> A vector of positive integers. Subsetting with positive integers keeps the elements at those positions: #>  #> ``` #> x <- c(\"one\", \"two\", \"three\", \"four\", \"five\") #> x[c(3, 2, 5)] #> #> [1] \"three\" \"two\"   \"five\" #> ``` #>  #> By repeating a position, you can actually make a longer output than input, making the term ‚Äúsubsetting‚Äù a bit of a misnomer. #>  #> ``` #> x[c(1, 1, 5, 5, 5, 2)] #> #> [1] \"one\"  \"one\"  \"five\" \"five\" \"five\" \"two\" #> ``` #>  #> A vector of negative integers. Negative values drop the elements at the specified positions: #>  #> ``` #> x[c(-1, -3, -5)] #> #> [1] \"two\"  \"four\" #> ``` #>  #> A logical vector. Subsetting with a logical vector keeps all values corresponding to a `TRUE` value. This is most often useful in conjunction with the comparison functions. #>  #> ``` #> x <- c(10, 3, NA, 5, 8, 1, NA) #>  #> # All non-missing values of x #> x[!is.na(x)] #> #> [1] 10  3  5  8  1 #>  #> # All even (or missing!) values of x #> x[x %% 2 == 0] #> #> [1] 10 NA  8 NA #> ``` #>  #> Unlike `filter()`, `NA` indices will be included in the output as `NA`s. #>  #> A character vector. If you have a named vector, you can subset it with a character vector: #>  #> ``` #> x <- c(abc = 1, def = 2, xyz = 5) #> x[c(\"xyz\", \"def\")] #> #> xyz def  #> #>   5   2 #> ``` #>  #> As with subsetting with positive integers, you can use a character vector to duplicate individual entries. #>  #> Nothing. The final type of subsetting is nothing, `x[]`, which returns the complete `x`. This is not useful for subsetting vectors, but as we‚Äôll see shortly, it is useful when subsetting 2d structures like tibbles. #>"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_register_tool_retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a 'retrieve' tool with ellmer ‚Äî ragnar_register_tool_retrieve","title":"Register a 'retrieve' tool with ellmer ‚Äî ragnar_register_tool_retrieve","text":"Register 'retrieve' tool ellmer","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_register_tool_retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a 'retrieve' tool with ellmer ‚Äî ragnar_register_tool_retrieve","text":"","code":"ragnar_register_tool_retrieve(   chat,   store,   store_description = \"the knowledge store\",   ... )"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_register_tool_retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a 'retrieve' tool with ellmer ‚Äî ragnar_register_tool_retrieve","text":"chat ellmer:::Chat object. store string store location, RagnarStore object. store_description Optional string, used composing tool description. ... arguments passed ragnar_retrieve().","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_register_tool_retrieve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register a 'retrieve' tool with ellmer ‚Äî ragnar_register_tool_retrieve","text":"chat, invisibly.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_register_tool_retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register a 'retrieve' tool with ellmer ‚Äî ragnar_register_tool_retrieve","text":"","code":"if (FALSE) { # (file.exists(\"r4ds.ragnar.duckdb\") && Sys.getenv(\"OPENAI_API_KEY\") != \"\") } if (FALSE) { # file.exists(\"r4ds.ragnar.duckdb\") && Sys.getenv(\"OPENAI_API_KEY\") != \"\"  system_prompt <- stringr::str_squish(\"   You are an expert assistant in R programming.   When responding, you first quote relevant material from books or documentation,   provide links to the sources, and then add your own context and interpretation. \") chat <- ellmer::chat_openai(system_prompt, model = \"gpt-4o\")  store <- ragnar_store_connect(\"r4ds.ragnar.duckdb\", read_only = TRUE) ragnar_register_tool_retrieve(chat, store) chat$chat(\"How can I subset a dataframe?\") }"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve chunks from a RagnarStore ‚Äî ragnar_retrieve_vss","title":"Retrieve chunks from a RagnarStore ‚Äî ragnar_retrieve_vss","text":"Retrieve chunks RagnarStore","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve chunks from a RagnarStore ‚Äî ragnar_retrieve_vss","text":"","code":"ragnar_retrieve_vss(store, text, top_k = 3L)  ragnar_retrieve_bm25(store, text, top_k = 3L)  ragnar_retrieve(store, text, top_k = 3L, methods = c(\"vss\", \"bm25\"))"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve chunks from a RagnarStore ‚Äî ragnar_retrieve_vss","text":"store RagnarStore object. text string find nearest match top_k Integer, number nearest entries find per method. methods character vector methods. vss bm25 implemented.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_retrieve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve chunks from a RagnarStore ‚Äî ragnar_retrieve_vss","text":"dataframe retrieved chunks. row corresponds individual chunk store, last column dataframe always named 'text', contains chunks.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_store_build_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Ragnar Store index ‚Äî ragnar_store_build_index","title":"Build a Ragnar Store index ‚Äî ragnar_store_build_index","text":"search index must built calling ragnar_retrieve(). additional entries added store ragnar_store_insert(), ragnar_store_build_index() must called rebuild index.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_store_build_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Ragnar Store index ‚Äî ragnar_store_build_index","text":"","code":"ragnar_store_build_index(store, type = c(\"vss\", \"fts\"))"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_store_build_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Ragnar Store index ‚Äî ragnar_store_build_index","text":"store RagnarStore object type retrieval search type build index .","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_store_build_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Ragnar Store index ‚Äî ragnar_store_build_index","text":"store, invisibly.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_store_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and connect to a vector store ‚Äî ragnar_store_create","title":"Create and connect to a vector store ‚Äî ragnar_store_create","text":"Create connect vector store","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_store_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and connect to a vector store ‚Äî ragnar_store_create","text":"","code":"ragnar_store_create(   location = \":memory:\",   embed = embed_ollama(),   embedding_size = ncol(embed(\"foo\")),   overwrite = FALSE )"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_store_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and connect to a vector store ‚Äî ragnar_store_create","text":"location filepath, :memory: embed function called character vector returns matrix embeddings. Note function serialized deserialized new R sessions, reference objects global parent environments. Make sure namespace function calls ::. additional R objects must available function, can optionally supply carrier::crate() packaged data. embedding_size integer overwrite logical, location already exists","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_store_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and connect to a vector store ‚Äî ragnar_store_create","text":"DuckDBRagnarStore object","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_store_insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert chunks into a RagnarStore ‚Äî ragnar_store_insert","title":"Insert chunks into a RagnarStore ‚Äî ragnar_store_insert","text":"Insert chunks RagnarStore","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_store_insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert chunks into a RagnarStore ‚Äî ragnar_store_insert","text":"","code":"ragnar_store_insert(store, chunks)"},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_store_insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert chunks into a RagnarStore ‚Äî ragnar_store_insert","text":"store RagnarStore object chunks character vector dataframe text column, optionally, pre-computed embedding matrix column. embedding present, store@embed() used. chunks can also character vector.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/ragnar_store_insert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert chunks into a RagnarStore ‚Äî ragnar_store_insert","text":"store, invisibly.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/rangar_store_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to RagnarStore ‚Äî ragnar_store_connect","title":"Connect to RagnarStore ‚Äî ragnar_store_connect","text":"Connect RagnarStore","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/rangar_store_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to RagnarStore ‚Äî ragnar_store_connect","text":"","code":"ragnar_store_connect(   location = \":memory:\",   ...,   read_only = FALSE,   build_index = FALSE )"},{"path":"https://t-kalinowski.github.io/ragnar/reference/rangar_store_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to RagnarStore ‚Äî ragnar_store_connect","text":"location string, filepath location. ... unused; must empty. read_only logical, whether returned connection can used modify store. build_index logical, whether call ragnar_store_build_index() creating connection","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/rangar_store_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to RagnarStore ‚Äî ragnar_store_connect","text":"RagnarStore object.","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/read_as_markdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert files to markdown ‚Äî read_as_markdown","title":"Convert files to markdown ‚Äî read_as_markdown","text":"Convert files markdown","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/read_as_markdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert files to markdown ‚Äî read_as_markdown","text":"","code":"read_as_markdown(x, ..., canonical = FALSE)"},{"path":"https://t-kalinowski.github.io/ragnar/reference/read_as_markdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert files to markdown ‚Äî read_as_markdown","text":"x filepath url ... dots future extensions must empty. canonical logical, whether postprocess output MarkItDown commonmark::markdown_commonmark().","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/read_as_markdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert files to markdown ‚Äî read_as_markdown","text":"single string markdown","code":""},{"path":"https://t-kalinowski.github.io/ragnar/reference/read_as_markdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert files to markdown ‚Äî read_as_markdown","text":"","code":"# convert html read_as_markdown(\"https://r4ds.hadley.nz/base-R.html\") |>   substr(1, 5000) |> cat() #> 1. [Program](./program.html) #> 2. [27¬† A field guide to base R](./base-R.html) #>  #> [R for Data Science (2e)](./) #>  #> * [Welcome](./index.html) #> * [Preface to the second edition](./preface-2e.html) #> * [Introduction](./intro.html) #> * [Whole game](./whole-game.html) #>  #>   + [1¬† Data visualization](./data-visualize.html) #>   + [2¬† Workflow: basics](./workflow-basics.html) #>   + [3¬† Data transformation](./data-transform.html) #>   + [4¬† Workflow: code style](./workflow-style.html) #>   + [5¬† Data tidying](./data-tidy.html) #>   + [6¬† Workflow: scripts and projects](./workflow-scripts.html) #>   + [7¬† Data import](./data-import.html) #>   + [8¬† Workflow: getting help](./workflow-help.html) #> * [Visualize](./visualize.html) #>  #>   + [9¬† Layers](./layers.html) #>   + [10¬† Exploratory data analysis](./EDA.html) #>   + [11¬† Communication](./communication.html) #> * [Transform](./transform.html) #>  #>   + [12¬† Logical vectors](./logicals.html) #>   + [13¬† Numbers](./numbers.html) #>   + [14¬† Strings](./strings.html) #>   + [15¬† Regular expressions](./regexps.html) #>   + [16¬† Factors](./factors.html) #>   + [17¬† Dates and times](./datetimes.html) #>   + [18¬† Missing values](./missing-values.html) #>   + [19¬† Joins](./joins.html) #> * [Import](./import.html) #>  #>   + [20¬† Spreadsheets](./spreadsheets.html) #>   + [21¬† Databases](./databases.html) #>   + [22¬† Arrow](./arrow.html) #>   + [23¬† Hierarchical data](./rectangling.html) #>   + [24¬† Web scraping](./webscraping.html) #> * [Program](./program.html) #>  #>   + [25¬† Functions](./functions.html) #>   + [26¬† Iteration](./iteration.html) #>   + [27¬† A field guide to base R](./base-R.html) #> * [Communicate](./communicate.html) #>  #>   + [28¬† Quarto](./quarto.html) #>   + [29¬† Quarto formats](./quarto-formats.html) #>  #> ## Table of contents #>  #> * [27.1 Introduction](#introduction) #>   + [27.1.1 Prerequisites](#prerequisites) #> * [27.2 Selecting multiple elements with `[`](#sec-subset-many) #>   + [27.2.1 Subsetting vectors](#subsetting-vectors) #>   + [27.2.2 Subsetting data frames](#subsetting-data-frames) #>   + [27.2.3 dplyr equivalents](#dplyr-equivalents) #>   + [27.2.4 Exercises](#exercises) #> * [27.3 Selecting a single element with `$` and `[[`](#sec-subset-one) #>   + [27.3.1 Data frames](#data-frames) #>   + [27.3.2 Tibbles](#tibbles) #>   + [27.3.3 Lists](#lists) #>   + [27.3.4 Exercises](#exercises-1) #> * [27.4 Apply family](#apply-family) #> * [27.5 `for` loops](#for-loops) #> * [27.6 Plots](#plots) #> * [27.7 Summary](#summary) #>  #> * [Edit this page](https://github.com/hadley/r4ds/edit/main/base-R.qmd) #> * [Report an issue](https://github.com/hadley/r4ds/issues/new) #>  #> 1. [Program](./program.html) #> 2. [27¬† A field guide to base R](./base-R.html) #> # 27¬† A field guide to base R #>  #> ## 27.1 Introduction #>  #> To finish off the programming section, we‚Äôre going to give you a quick tour of the most important base R functions that we don‚Äôt otherwise discuss in the book. These tools are particularly useful as you do more programming and will help you read code you‚Äôll encounter in the wild. #>  #> This is a good place to remind you that the tidyverse is not the only way to solve data science problems. We teach the tidyverse in this book because tidyverse packages share a common design philosophy, increasing the consistency across functions, and making each new function or package a little easier to learn and use. It‚Äôs not possible to use the tidyverse without using base R, so we‚Äôve actually already taught you a **lot** of base R functions: from `[library()](https://rdrr.io/r/base/library.html)` to load packages, to `[sum()](https://rdrr.io/r/base/sum.html)` and `[mean()](https://rdrr.io/r/base/mean.html)` for numeric summaries, to the factor, date, and POSIXct data types, and of course all the basic operators like `+`, `-`, `/`, `*`, `|`, `&`, and `!`. What we haven‚Äôt focused on so far is base R workflows, so we will highlight a few of those in this chapter. #>  #> After you read this book, you‚Äôll learn other approaches to the same problems using base R, data.table, and other packages. You‚Äôll undoubtedly encounter these other approaches when you start reading R code written by others, particularly if you‚Äôre using StackOverflow. It‚Äôs 100% okay to write code that uses a mix of approaches, and don‚Äôt let anyone tell you otherwise! #>  #> In this chapter, we‚Äôll focus on four big topics: subsetting with `[`, subsetting with `[[` and `$`, the apply family of functions, and `for` loops. To finish off, we‚Äôll briefly discuss two essential plotting functions. #>  #> ### 27.1.1 Prerequisites #>  #> This package focuses on base R so doesn‚Äôt have any real prerequisites, but we‚Äôll load the tidyverse in order to explain some of the differences. #>  #> ``` #> library(tidyverse) #> ``` #>  #> ## 27.2 Selecting multiple elements with `[` #>  #> `[` is used to extract sub-components from vectors and data frames, and is called like `x[i]` or `x[i, j]`. In this section, we‚Äôll introduce you to the power of `[`, first showing you how you can use it with vectors, then how the same principles extend in a straightforward way to two-dimensional (2d) structures like data frames. We‚Äôll then help you cement that knowledge by sho  read_as_markdown(\"https://r4ds.hadley.nz/base-R.html\", canonical = TRUE) |>   substr(1, 5000) |> cat() #> 1.  [Program](./program.html) #> 2.  [27¬† A field guide to base R](./base-R.html) #>  #> [R for Data Science (2e)](./) #>  #>   - [Welcome](./index.html) #>  #>   - [Preface to the second edition](./preface-2e.html) #>  #>   - [Introduction](./intro.html) #>  #>   - [Whole game](./whole-game.html) #>      #>       - [1¬† Data visualization](./data-visualize.html) #>       - [2¬† Workflow: basics](./workflow-basics.html) #>       - [3¬† Data transformation](./data-transform.html) #>       - [4¬† Workflow: code style](./workflow-style.html) #>       - [5¬† Data tidying](./data-tidy.html) #>       - [6¬† Workflow: scripts and projects](./workflow-scripts.html) #>       - [7¬† Data import](./data-import.html) #>       - [8¬† Workflow: getting help](./workflow-help.html) #>  #>   - [Visualize](./visualize.html) #>      #>       - [9¬† Layers](./layers.html) #>       - [10¬† Exploratory data analysis](./EDA.html) #>       - [11¬† Communication](./communication.html) #>  #>   - [Transform](./transform.html) #>      #>       - [12¬† Logical vectors](./logicals.html) #>       - [13¬† Numbers](./numbers.html) #>       - [14¬† Strings](./strings.html) #>       - [15¬† Regular expressions](./regexps.html) #>       - [16¬† Factors](./factors.html) #>       - [17¬† Dates and times](./datetimes.html) #>       - [18¬† Missing values](./missing-values.html) #>       - [19¬† Joins](./joins.html) #>  #>   - [Import](./import.html) #>      #>       - [20¬† Spreadsheets](./spreadsheets.html) #>       - [21¬† Databases](./databases.html) #>       - [22¬† Arrow](./arrow.html) #>       - [23¬† Hierarchical data](./rectangling.html) #>       - [24¬† Web scraping](./webscraping.html) #>  #>   - [Program](./program.html) #>      #>       - [25¬† Functions](./functions.html) #>       - [26¬† Iteration](./iteration.html) #>       - [27¬† A field guide to base R](./base-R.html) #>  #>   - [Communicate](./communicate.html) #>      #>       - [28¬† Quarto](./quarto.html) #>       - [29¬† Quarto formats](./quarto-formats.html) #>  #> ## Table of contents #>  #>   - [27.1 Introduction](#introduction) #>      #>       - [27.1.1 Prerequisites](#prerequisites) #>  #>   - [27.2 Selecting multiple elements with `[`](#sec-subset-many) #>      #>       - [27.2.1 Subsetting vectors](#subsetting-vectors) #>       - [27.2.2 Subsetting data frames](#subsetting-data-frames) #>       - [27.2.3 dplyr equivalents](#dplyr-equivalents) #>       - [27.2.4 Exercises](#exercises) #>  #>   - [27.3 Selecting a single element with `$` and `[[`](#sec-subset-one) #>      #>       - [27.3.1 Data frames](#data-frames) #>       - [27.3.2 Tibbles](#tibbles) #>       - [27.3.3 Lists](#lists) #>       - [27.3.4 Exercises](#exercises-1) #>  #>   - [27.4 Apply family](#apply-family) #>  #>   - [27.5 `for` loops](#for-loops) #>  #>   - [27.6 Plots](#plots) #>  #>   - [27.7 Summary](#summary) #>  #>   - [Edit this #>     page](https://github.com/hadley/r4ds/edit/main/base-R.qmd) #>  #>   - [Report an issue](https://github.com/hadley/r4ds/issues/new) #>  #> <!-- end list --> #>  #> 1.  [Program](./program.html) #> 2.  [27¬† A field guide to base R](./base-R.html) #>  #> # 27¬† A field guide to base R #>  #> ## 27.1 Introduction #>  #> To finish off the programming section, we‚Äôre going to give you a quick #> tour of the most important base R functions that we don‚Äôt otherwise #> discuss in the book. These tools are particularly useful as you do more #> programming and will help you read code you‚Äôll encounter in the wild. #>  #> This is a good place to remind you that the tidyverse is not the only #> way to solve data science problems. We teach the tidyverse in this book #> because tidyverse packages share a common design philosophy, increasing #> the consistency across functions, and making each new function or #> package a little easier to learn and use. It‚Äôs not possible to use the #> tidyverse without using base R, so we‚Äôve actually already taught you a #> **lot** of base R functions: from #> `[library()](https://rdrr.io/r/base/library.html)` to load packages, to #> `[sum()](https://rdrr.io/r/base/sum.html)` and #> `[mean()](https://rdrr.io/r/base/mean.html)` for numeric summaries, to #> the factor, date, and POSIXct data types, and of course all the basic #> operators like `+`, `-`, `/`, `*`, `|`, `&`, and `!`. What we haven‚Äôt #> focused on so far is base R workflows, so we will highlight a few of #> those in this chapter. #>  #> After you read this book, you‚Äôll learn other approaches to the same #> problems using base R, data.table, and other packages. You‚Äôll #> undoubtedly encounter these other approaches when you start reading R #> code written by others, particularly if you‚Äôre using StackOverflow. #> It‚Äôs 100% okay to write code that uses a mix of approaches, and don‚Äôt #> let anyone tell you otherwise\\! #>  #> In this chapter, we‚Äôll focus on four big topics: subsetting with `[`, #> subsetting with `[[` and `$`, the apply family of functions, and `for` #> loops. To finish off, we‚Äôll briefly discuss two essential plotting #> functions. #>  #> ### 27.1.1 Prerequisites #>  #> This package focuses on base R so doesn‚Äôt have any real prerequisites, #> but we‚Äôll load the tidyverse in order to explain some of the #> differences. #>  #>     library(tidyverse) #>  #> ## 27.2 Selecting multiple elements with `[` #>  #> `[` is used to extract sub-components from vectors and data frames, and #> is called like `x[i]` or `x[i, j]`. In t  # convert pdf pdf <- file.path(R.home(\"doc\"), \"NEWS.pdf\") read_as_markdown(pdf) #> NEWS for R version 4.4.2 (2024-10-31) #>  #> NEWS #>  #> R News #>  #> CHANGES IN R 4.4.2 #>  #> C-LEVEL FACILITIES: #>  #> (cid:136) The S-compatibility macros F77_COM and F77_COMDECL de(cid:28)ned in header #> ‚ÄòR_ext/RS.h‚Äô are deprecated and will be removed shortly. We could (cid:28)nd no record of #> their use. #>  #> BUG FIXES: #>  #> (cid:136) Mathlib function lgammacor(x) no longer warns about under(cid:29)ow to zero for large x. #> (cid:136) Text widths and heights were incorrectly reported by the Quartz device if the drawing #> context didn‚Äôt exist yet (typically when drawing o(cid:27)-screen to a window that is yet to #> appear, see PR#18591). #>  #> (cid:136) The Quartz device could segfault in cases where paths with spaces are used in the #>  #> new glyph drawing API. Thanks to Tomek Gieorgijewski (PR#18758). #>  #> (cid:136) On macOS in R CRAN builds, it is again possible to read little-endian UTF-16 text #> with a BOM from a connection using encoding=\"UTF-16\". Users building R from #> source should avoid using the system libiconv in macOS 14.1 and later. #>  #> (cid:136) methods‚Äô internal .requirePackage() now re-enables primitive method dispatch #> when needed; thanks to Ivan Krylov for demystifying CRAN package check failures #> on the R-devel mailing list. #>  #> CHANGES IN R 4.4.1 #>  #> C-LEVEL FACILITIES: #>  #> (cid:136) Functions R_atof and R_strtod declared in header ‚ÄòR_ext/Utils.h‚Äô are now docu- #>  #> mented in ‚ÄòWriting R Extensions‚Äô and so formally part of the API. #>  #> (cid:136) The non-API entry points Rf_setSVector, Rf_StringFalse, Rf_StringTrue and #>  #> Rf_isBlankString have been added to those reported by R CMD check. #>  #> 1 #>  #>  #>  #> --- #>  #> 2 #>  #> NEWS #>  #> (cid:136) The new function Rf_allocLang is now available. This provides an alternative to the #>  #> idiom of calling Rf_allocList followed by SET_TYPEOF. #>  #> UTILITIES: #>  #> (cid:136) R CMD check now reports as warnings what gfortran calls ‚ÄòFortran 2018 deleted #> features‚Äô, all of which have long been marked as ‚Äòobsolescent‚Äô and some of which were #> deleted in Fortran 2008 or earlier. Fortran compilers are no longer required to support #> these. #>  #> BUG FIXES: #>  #> (cid:136) as.numeric(), scan(), type.convert() and other places which use the internal #> C function R_strtod now require a non-empty digit sequence in a decimal or bi- #> nary exponent. This aligns with the C/POSIX standard for strtod and with #> ?NumericConstants. #>  #> (cid:136) as.data.frame(m, make.names=NA) now works correctly for a matrix m with NA‚Äôs in #>  #> row names. #>  #> (cid:136) The error message from <POSIXlt>[[\"hour\"]] and similar now mentions *[[, #>  #> \"hour\"]], as wished for in PR#17409 and proposed by Michael Chirico. #>  #> (cid:136) qbinom() and potentially qpois(), qnbinom(), no longer sometimes fail accurate #> inversion (of pbinom(), etc), thanks to Christopher Chang‚Äôs report and patch in #> PR#18711. #>  #> (cid:136) The internal help server on Windows can again serve requests sent in quick succession, #>  #> (cid:28)xing a regression in R 4.4.0. #>  #> (cid:136) debugcall(S3Generic()) now also works when a corresponding S4-generic version is #>  #> in the methods cache (PR#18143). #>  #> (cid:136) Package tools‚Äô toTitleCase(ch0) now returns character(0) when ch0 is of zero #>  #> length; (cid:28)xing PR#18724, reported by David Hugh Jones. #>  #> (cid:136) R CMD check is no longer broken (without a check result and no explanation #> in ‚Äò00check.log‚Äô) for a package which declares an invalid VignetteBuilder in #> ‚ÄòDESCRIPTION‚Äô but has no vignettes. #>  #> CHANGES IN R 4.4.0 #>  #> SIGNIFICANT USER-VISIBLE CHANGES: #>  #> (cid:136) Startup banners, R --version, sessionInfo() and R CMD check no longer report #> (64-bit) as part of the platform as this is almost universal (cid:21) the increasingly rare #> 32-bit platforms will still report (32-bit). #> On Windows, ditto for window titles. #>  #> (cid:136) is.atomic(NULL) now returns FALSE, as NULL is not an atomic vector. #> Strict back-compatibility would replace is.atomic(foo) by (is.null(foo) || #> is.atomic(foo)) but should happen only sparingly. #>  #> NEW FEATURES: #>  #> (cid:136) The confint() methods for \"glm\" and \"nls\" objects have been copied to the #> stats package. Previously, they were stubs which called versions in package MASS. #>  #>  #>  #> --- #>  #> NEWS #>  #> 3 #>  #> The MASS namespace is no longer loaded if you invoke (say) confint(glmfit). #> Further, the \"glm\" method for profile() and the plot() and pairs() methods #> for class \"profile\" have been copied from MASS to stats. #> (profile.nls() and #> plot.profile.nls() were already in stats.) #>  #> (cid:136) The confint() and profile methods for \"glm\" objects have gained a possibility to #> do pro(cid:28)ling based on the Rao Score statistic in addition to the default Likelihood #> Ratio. This is controlled by a new test = argument. #>  #> (cid:136) The pairs() method for \"profile\" objects has been extended with a which = argu- #>  #> ment to allow plotting only a subset of the parameters. #>  #> (cid:136) The \"glm\" method for anova() computes test statistics and p-values by default, using #> a chi-squared test or an F test depending on whether the dispersion is (cid:28)xed or free. #> Test statistics can be suppressed by giving argument test a false logical value. #>  #> (cid:136) In setRepositories() the repositories can be set using their names via name = in- #>  #> stead of index ind =. #>  #> (cid:136) methods() and .S3methods() gain a all.names option for the (rare) case where #>  #> functions starting with a ‚Äò.‚Äô should be included. #>  #> (cid:136) Serializations can now be interrupted (e.g., by Ctrl-C on a Unix-alike) if they take #> too long, e.g., from save.image(), thanks to suggestions by Ivan Krylov and others #> on R-devel. #>  #> (cid:136) New startup option ‚Äò--max-connections‚Äô to set the maximum number of simultane- #> ous connections for the session. Defaults to 128 as before: allowed values up to 4096 #> (but resource limits may in practice restrict to smaller values). #>  #> (cid:136) R on Windows (since Windows 10 2004) now uses the new Segment Heap allocator. #>  #> are built, #>  #> (cid:136) When R packages #>  #> This may improve performance of some memory-intensive applications. #> typically by R CMD build <pkg>, #>  #> the new #> --user=<build_user> option overrides the (internally determined) user name, cur- #> rently Sys.info()[\"user\"] or LOGNAME. This is a (modi(cid:28)ed) ful(cid:28)llment of Will Lan- #> dau‚Äôs suggestion in PR#17530. #> (cid:136) tools::testInstalledBasic() #>  #> and #> testSrcdir, e.g., allowing to use it in a builddir != srcdir setup, and in stan- #> dard (cid:16)binary(cid:17) Windows installation if a source ‚Äòtests/‚Äô folder is present. #>  #> gets new optional #>  #> arguments #>  #> outDir #>  #> (cid:136) range(<DT_with_Inf>, finite = TRUE) now work for objects of class \"Date\", #> \"POSIXct\", and \"POSIXlt\" with in(cid:28)nite entries, analogously to range.default(), #> as proposed by Davis Vaughan on R-devel. Other range()-methods can make use of #> new function .rangeNum(). #>  #> (cid:136) New .internalGenerics object complementing .S3PrimitiveGenerics, for docu- #>  #> mentation and low-level book-keeping. #>  #> (cid:136) grid() now invisibly returns the x- and y- coordinates at which the grid-lines were #>  #> drawn. #>  #> (cid:136) norm(., type) now also works for complex matrices. #> (cid:136) kappa(., exact = TRUE, norm = *) now works for all norms and also for complex #> matrices. In symmetric / triangular cases, the new argument uplo = \"U\" | \"L\" allows #> the upper or lower triangular part to be speci(cid:28)ed. #>  #> (cid:136) memDecompress(type = \"unknown\") recognizes compression in the default ‚Äòzlib‚Äô for- #>  #> mat as used by memCompress(type = \"gzip\"). #>  #>  #>  #> --- #>  #> 4 #>  #> NEWS #>  #> (cid:136) memCompress() and memDecompress() will use the libdeflate library (https: #> //github.com/ebiggers/libdeflate) if installed. This uses the same type of com- #> pression for type = \"gzip\" but is 1.5-2x faster than the system libz library on some #> common platforms: the speed-up may depend on the library version. #>  #> (cid:136) diff() for objects of class \"Date\", \"POSIXct\", and \"POSIXlt\" accepts a units ar- #>  #> gument passed via .... #>  #> (cid:136) Dynamic help now does a much better job of rendering package ‚ÄòDESCRIPTION‚Äô meta- #>  #> data. #>  #> (cid:136) Rprof() gains an event argument and support for elapsed (real) time pro(cid:28)ling on #>  #> Unix (PR#18076). #>  #> (cid:136) filled.contour() gains a key.border argument. #> (cid:136) tools::update_pkg_po() gets arguments pot_make and mo_make for not re-making #>  #> the corresponding (cid:28)les, and additionally a verbose argument. #>  #> (cid:136) Hexadecimal string colour speci(cid:28)cations are now accepted in short form, so, for ex- #>  #> ample, we can use \"#123\", which is equivalent to \"#112233\". #> Thanks to MikeFC for the original idea and Ella Kaye, Malcolm Barrett, George #> Stagg, and Hanne Oberman for the patch. #>  #> (cid:136) Plain-text help shows \\var markup by angle brackets. #> (cid:136) The new experimental primitive function declare() is intended to eventually allow #> information about R code to be communicated to the interpreter, compiler, and code #> analysis tools. The syntax for declarations is still being developed. #>  #> (cid:136) Functions psmirnov(), qsmirnov() and rsmirnov() in package stats have had argu- #> ment two.sided renamed to alternative, to take into account that the permutation #> distributions of the one-sided statistics can be di(cid:27)erent in the case of ties. Conse- #> quence of PR#18582. #>  #> (cid:136) sort() is now an implicit S4 generic in methods. #> (cid:136) Formatting and printing, format(z), print(z), of complex vectors z no longer zap #> relatively small real or imaginary parts to zero, (cid:28)xing PR#16752. This is an API #> change, as it was documented previously to round real and imaginary parts together #> on purpose, producing nicer looking output. As mentioned, e.g. in the PR, this change #> is compatible with many other (cid:16)R-like(cid:17) programming environments. #> We have simpli(cid:28)ed the internal code and now basically format the real and imaginary #> parts independently of each other. #>  #> (cid:136) New experimental functions Tailcall() and Exec() to support writing stack-space- #>  #> e(cid:30)cient recursive functions. #>  #> (cid:136) Where characters are attempted to be plotted by pdf(), postscript() and xfig() #> which are not in the selected 8-bit character set (most often Latin-1) and the R session #> is using a UTF-8 locale, the warning messages will show the UTF-8 character rather #> than its bytes and one dot will be substituted per character rather than per byte. #> (Platforms whose iconv() does transliteration silently plot the transliteration.) #> In a UTF-8 locale some transliterations are now done with a warning (e.g., dashes #> and Unicode minus to hyphen, ligatures are expanded, permille (‚Äò(cid:135)‚Äô) is replaced by #> ‚Äòo/oo‚Äô), although the OS may have got there (cid:28)rst. These are warnings as they will #> continue to be replaced by dots in earlier versions of R. #>  #> (cid:136) The matrix multiplication functions crossprod() and tcrossprod() are now also #>  #> primitive and S3 generic, as %*% had become in R 4.3.0. #>  #>  #>  #> --- #>  #> NEWS #>  #> 5 #>  #> (cid:136) source() and example() have a new optional argument catch.aborts which allows #>  #> continued evaluation of the R code after an error. #>  #> (cid:136) The non-Quartz tiff() devices allow additional types of compression if supported #>  #> by the platform‚Äôs ‚Äòlibtiff‚Äô library. #>  #> (cid:136) The #>  #> list of base and recommended package names #>  #> is now provided by #>  #> tools::standard_package_names(). #>  #> (cid:136) cairo_pdf() and cairo_ps() default to onefile = TRUE to closer match pdf() and #>  #> postscript(). #>  #> (cid:136) New option catch.script.errors provides a documented way to catch errors and #>  #> then continue in non-interactive use. #>  #> (cid:136) L %||% R newly in base is an expressive idiom for the phrases if(!is.null(L)) L #>  #> else R or if(is.null(L)) R else L. #>  #> (cid:136) The return value from warnings() now always inherits from \"warnings\" as docu- #> mented, now also in the case of no warnings where it previously returned NULL. #>  #> (cid:136) as.complex(\"1i\") now returns 0 + 1i instead of NA with a warning. #> (cid:136) z <- c(NA, 1i) now keeps the imaginary part Im(z[1]) == 0, no longer coercing to #> NA_complex_. Similarly, cumsum(z) correctly sums real and imaginary parts sepa- #> rately, i.e., without (cid:16)crosstalk(cid:17) in case of NAs. #>  #> (cid:136) On Alpine Linux iconv() now maps \"latin2\", \"latin-2\", \"latin9\" and \"latin-9\" #>  #> to encoding names the OS knows about (case-insensitively). #>  #> (cid:136) iconv(sub = \"Unicode\") now always zero-pads to four (hex) digits, rather than to 4 #> or 8. (This seems to have become the convention once Unicode restricted the number #> of Unicode points to 221 ‚àí 1 and so will never need more than 6 digits.) #>  #> (cid:136) NCOL(NULL) now returns 0 instead of 1, for consistency with cbind(). #> (cid:136) The information for the Euro glyph missing from the Adobe ‚Äò.afm‚Äô (cid:28)les for the #> Courier, Helvetica and Times families has been copied from their URW equivalents (cid:21) #> this will improve vertical centring in the pdf() and postscript() devices. #>  #> (cid:136) The included BLAS sources have been updated to those shipped with LAPACK ver- #>  #> sion 3.12.0. The changes are almost entirely cosmetic. #>  #> (cid:136) The included LAPACK sources have been updated to version 3.12.0 and some further #>  #> double-complex routines added. #>  #> (cid:136) There are new font families for the 2014(cid:21)5 URW 2.0 fonts (see ?pdf) which are #> included in recent versions of Ghostscript. These have font widths for most Greek #> glyphs and a few others which were missing from the original versions (whose font #> families remain available for reproducibility, although Ghostscript-based viewers will #> render using the 2.0 versions). #>  #> (cid:136) Improve the large-n e(cid:30)ciency of as.matrix(<dist>), thanks an R contributors e(cid:27)ort, #>  #> notably by Tim Taylor and Heather Turner, see PR#18660. #>  #> (cid:136) The default and numeric methods of all.equal() get a check.class option. #> (cid:136) zapsmall() gets new optional arguments, function mFUN and min.d, for extra (cid:29)exi- #> bility; ful(cid:28)lls a wish in PR#18199. Also, it is now an implicit S4 generic in package #> methods. #>  #> (cid:136) The Rd (cid:28)lter for aspell() gains an ignore argument. #> (cid:136) New generic function sort_by(), primarily useful for the data.frame method which #>  #> can be used to sort rows of a data frame by one or more columns. #>  #>  #>  #> --- #>  #> 6 #>  #> NEWS #>  #> (cid:136) The licence headers for the RPC code in ‚Äòsrc/extra/xdr‚Äô have been updated to use #>  #> the GPL-compatible licence published by Oracle America in 2010. #>  #> (cid:136) New function pkg2HTML() in tools to create single-page HTML reference manuals for #>  #> R packages. #>  #> (cid:136) The byte code evaluator now uses less C stack space for recursive calls to byte- #> compiled functions. It also makes more of an e(cid:27)ort to avoid allocations for scalar #> return values. #>  #> (cid:136) New completion option backtick (disabled by default) allows non-syntactic comple- #> tions to be wrapped in backquotes. This is currently only useful for Jupyter notebooks #> via the IRkernel package, and may cause problems for other backends. #>  #> (cid:136) The numeric version creators now stop on invalid non-character version speci(cid:28)cations. #>  #> INSTALLATION: #>  #> (cid:136) The parser has been updated to work with bison 3.8.2, which is now used for the pre- #> generated parsers in ‚Äògram.c‚Äô, file.c, and ‚ÄògramRd.c‚Äô. A few parser error messages #> have changed, which may a(cid:27)ect code that relies on exact messages. #>  #> INSTALLATION on a UNIX-ALIKE: #>  #> (cid:136) System valgrind #>  #> to #> ‚Äò--with-valgrind-instrumentation‚Äô with value 1 or 2. #>  #> now required #>  #> headers #>  #> are #>  #> use #>  #> configure #>  #> option #>  #> (cid:136) configure will warn if it encounters a 32-bit build, as that is nowadays almost #>  #> untested. #>  #> (cid:136) Environment variable R_SYSTEM_ABI is no longer used and so no longer recorded in #> ‚Äòetc/Renviron‚Äô (it was not on Windows and was only ever used when preparing #> package tools). #>  #> (cid:136) If the libdeflate library and headers are available, libdeflate rather than libz is #> used to (de)compress R objects in lazy-load databases. Typically tasks spend up to #> 5% of their time on such operations, although creating lazy-data databases is one of #> the exceptions. #> This can be suppressed if the library is available by the configure option #> ‚Äò--without-libdeflate-compression‚Äô. #>  #> (cid:136) configure option ‚Äò--enable-lto=check‚Äô has not worked reliably since 2019 and has #>  #> been removed. #>  #> (cid:136) The minimum autoconf requirement for a maintainer build has been increased to #>  #> autoconf 2.71. #> It is intended to increase this to 2.72 for R 4.5.0: the distributed ‚Äòconfigure‚Äô (cid:28)le was #> generated using 2.72. #>  #> (cid:136) The minimum version requirement for an external LAPACK has been reduced to #>  #> 3.9.0. #>  #> (cid:136) No default C++ compiler is set if no C++17 compiler is detected: there is no longer #>  #> an automatic fallback to C++14 or C++11. #> Compilers from the last (cid:28)ve years should have su(cid:30)cient support: for others macros #> CXX and CXXSTD can be set in (cid:28)le ‚Äòconfig.site‚Äô to provide a fallback if needed. #> The Objective-C++ compiler now by default uses the standard selected by R for C++ #> (currently C++17) rather than the default standard for the C++ compiler (which on #> macOS is still C++98). #>  #>  #>  #> --- #>  #> NEWS #>  #> 7 #>  #> INSTALLATION on macOS: #>  #> (cid:136) A new configure option ‚Äò--with-newAccelerate‚Äô makes use of Apple‚Äôs ‚Äònew‚Äô BLAS #> / LAPACK interfaces in their Accelerate framework. Those interfaces are only avail- #> able in macOS 13.3 or later, and building requires SDK 13.3 or later (from the Com- #> mand Line Tools or Xcode 14.3 or later). #> By default the option uses new Accelerate for BLAS calls: to also use it for LAPACK #> use option ‚Äò--with-newAccelerate=lapack‚Äô. The later interfaces provide LAPACK #> 3.9.1 rather than 3.2.1: 3.9.1 is from 2021-04 and does not include the improved #> algorithms introduced in LAPACK 3.10.0 (including for BLAS calls). #>  #> INSTALLATION on WINDOWS: #>  #> (cid:136) The make(cid:28)les and installer scripts for Windows have been tailored to Rtools44, an #> update of the Rtools43 toolchain. #> It is based on GCC 13 and newer versions of #> MinGW-W64, binutils and libraries (targeting 64-bit Intel CPUs). R-devel can no #> longer be built using Rtools43 without changes. #>  #> (cid:136) Rtools44 has experimental support for 64-bit ARM (aarch64) CPUs via the LLVM #>  #> 17 toolchain using lld, clang/flang-new and libc++. #>  #> UTILITIES: #>  #> (cid:136) R CMD check notes when S4-style exports are used without declaring a strong depen- #>  #> dence on package methods. #>  #> (cid:136) tools::checkRd() (used by R CMD check) detects more problems with \\Sexpr-based #>  #> dynamic content, including bad nesting of \\Sexprs and invalid arguments. #>  #> (cid:136) tools::checkRd() now reports Rd titles #>  #> and section names #>  #> a period; #> _R_CHECK_RD_CHECKRD_MINLEVEL_ is set to -5 or smaller. #>  #> R CMD check unless #>  #> ignored by #>  #> this #>  #> is #>  #> environment #>  #> ending #>  #> in #> variable #>  #> (cid:136) R CMD check now notes Rd (cid:28)les without an \\alias, as long documented in ‚ÄòWriting #> R Extensions‚Äô (cid:159)1.3.1. The check for a missing \\description has been moved from #> tools::checkRd() to tools::checkRdContents(). #>  #> (cid:136) R CMD check now visits ‚Äòinst/NEWS.Rd‚Äô and OS-speci(cid:28)c ‚Äòman‚Äô subdirectories when #>  #> checking Rd (cid:28)les. #>  #> (cid:136) tools::checkDocFiles() and tools::checkRdContents() now also check internal #> Rd (cid:28)les by default, but (cid:16)specially(cid:17) (ignoring missing documentation of arguments). #>  #> (cid:136) R CMD Rdiff gets option ‚Äò--useEx‚Äô. #> (cid:136) R CMD check now warns on non-portable uses of Fortran KIND such as #>  #> INTEGER(KIND=4) and REAL(KIND=8). #> To see the failing lines set environment variable _R_CHECK_FORTRAN_KIND_DETAILS_ #> to a true value. #>  #> (cid:136) When checking Rd (cid:28)les, R CMD check now notes some of the (cid:16)lost braces(cid:17) that #> tools::checkRd() (cid:28)nds. Typical problems are Rd macros missing the initial back- #> ‚Äò{1, 2}‚Äô, where the braces #> slash (e.g., #> in-text set notation (e.g., #> need escaping), and \\itemize lists with \\describe-style entries of the form #> \\item{label}{description}. #>  #> ‚Äòcode{...}‚Äô), #>  #> (cid:136) R CMD INSTALL (and hence check) will compile C++ code with -DR_NO_REMAP if en- #> vironment variable _R_CXX_USE_NO_REMAP_ is set to a true value. It is planned that #> this will in future become the default for compiling C++. #>  #>  #>  #> --- #>  #> 8 #>  #> NEWS #>  #> (cid:136) The new built-in Rd macro \\dontdiff{} can be used to mark example code #> whose output should be ignored when comparing check output to reference out- #> put (‚Äòtests/Examples/pkg-Ex.Rout.save‚Äô). The \\dontdiff tag, like \\donttest, #> is not shown on the rendered help page, so provides a clean alternative to ‚Äò## #> IGNORE_RDIFF_(BEGIN|END)‚Äô comments. #>  #> (cid:136) R CMD build when there #>  #> is no ‚ÄòNAMESPACE‚Äô, now uses #>  #> the #>  #> recommended #>  #> exportPattern(\"^[^.]\"), instead of exporting everything. #>  #> (cid:136) R CMD check now warns about non-ASCII characters in the ‚ÄòNAMESPACE‚Äô (cid:28)le (in ad- #> dition to R (cid:28)les). Such packages are not portable and may fail to install on some #> platforms. #>  #> C-LEVEL FACILITIES: #>  #> (cid:136) Headers ‚ÄòR_ext/Applic.h‚Äô and ‚ÄòR-ext/Linpack.h‚Äô used to include ‚ÄòR_ext/BLAS.h‚Äô #> although this was undocumented and unneeded by their documented entry points. #> They no longer do so. #>  #> (cid:136) New function R_missing(), factored out from do_missing(), used to (cid:28)x PR#18579. #> (cid:136) SEXP type S4SXP has been renamed to OBJSXP to support experimenting with al- #> ternative object systems. The S4SXP value can still be used in C code but is now #> deprecated. Based on contributions from the R Consortium‚Äôs Object-Oriented Pro- #> gramming Working Group. #>  #> (cid:136) New function pow1p(x,y) for accurate (1+x)^y. #> (cid:136) mkCharLenCE was incorrectly documented to take a size_t length but was imple- #>  #> mented with int (and character strings in R are limited to 231 ‚àí 1 bytes). #>  #> DEPRECATED AND DEFUNCT: #>  #> (cid:136) data() no longer handles zipped data from long-defunct #>  #> (since R 2.13.0) #>  #> ‚Äò--use-zip-data‚Äô installations. #>  #> (cid:136) The legacy graphics devices pictex() and xfig() are now deprecated. They do not #> support recent graphics enhancements and their font handling is rudimentary. The #> intention is to retain them for historical interest as long as they remain somewhat #> functional. #>  #> (cid:136) Support for encoding = \"MacRoman\" has been removed from the pdf() and #> postscript() devices (cid:21) this was a legacy encoding supporting classic macOS up #> to 2001 and no longer has universal libiconv support. #>  #> (cid:136) is.R() is deprecated as no other S dialect is known to be in use (and this could only #>  #> identify historical dialects, not future ones). #> Further information on calls can be obtained by setting the environment variable #> _R_DEPRECATED_IS_R_ to ‚Äòerror‚Äô which turns the deprecation warning into an error #> and so by default gives a traceback. (This is done by R CMD check --as-cran.) #> (cid:136) UseMethod() no longer forwards local variables assigned in the generic function into #> method call environments before evaluating the method body. This makes method #> calls behave more like standard function calls and makes method code easier to analyze #> correctly. #>  #> twelve #> via #>  #> _R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_ #>  #> as.data.frame.<class>() methods which were #>  #> (cid:136) The #> deprecated #> and in R CMD check #> only #> --as-cran are formally deprecated now in favour of calling as.data.frame() #> or as.data.frame.vector(). #> The deprecation (cid:16)check(cid:17) now works also when #> as.data.frame() is S4 generic thanks to Ivan Krylov. #>  #>  #>  #> --- #>  #> NEWS #>  #> 9 #>  #> (cid:136) The default method for the directional comparison operators <, >, <=, and >= now #> signals an error when one of the operands is a language object, i.e. a symbol or a #> call. #>  #> (cid:136) For terms.formula(), deprecate abb and neg.out arguments formally in addition #>  #> to just documenting it. #>  #> BUG FIXES: #>  #> (cid:136) The methods package is more robust to not being attached to the search path. More #>  #> work needs to be done. #>  #> (cid:136) pairwise.t.test() misbehaved when subgroups had 0 DF for variance, even with #>  #> pool.sd = TRUE. (PR#18594 by Jack Berry). #>  #> (cid:136) Probability #>  #> distribution #>  #> also #> bessel[IKJY](x, .) now consistently preserve attributes(x) when length(x) == #> 0, e.g., for a 2 √ó 0 matrix, thanks to Karolis Koncevi¬£ius‚Äô report PR#18509. #>  #> [dpq]<distrib>(x, *), #>  #> functions #>  #> but #>  #> (cid:136) Group (cid:16)Summary(cid:17) computations such as sum(1:3, 4, na.rm = 5, NA, 7, na.rm = #> LL) now give an error instead of either 17 or NN for LL true or false, as proposed #> by Ivan Krylov on the R-devel mailing list. (This also means it is now an error to #> specify na.rm more than once.) #>  #> (cid:136) as.complex(x) now returns complex(real = x, imaginary = 0) for all numerical #>  #> and logical x, notably also for NA or NA_integer_. #>  #> (cid:136) Directories #>  #> are now omitted by file.copy(, recursive = FALSE) and in #>  #> file.append() (PR#17337). #>  #> (cid:136) gsub() and sub() are now more robust to integer over(cid:29)ow when reporting errors #>  #> caused by too large input strings (PR#18346). #>  #> (cid:136) Top-level handlers are now more robust to attempts to remove a handler whilst han- #>  #> dlers are running (PR#18508). #>  #> (cid:136) The handling of Alt+F4 in dialogs created on Windows using GraphApp has been #>  #> (cid:28)xed (PR#13870). #>  #> (cid:136) density() more consistently computes grid values for the FFT-based convolution, #> following Robert Schlicht‚Äôs analysis and proposal in PR#18337, correcting density #> values typically by a factor of about 0.999. Argument old.coords = TRUE provides #> back compatibility. #>  #> (cid:136) palette.colors() gains a name argument that defaults to FALSE controlling whether #>  #> the vector of colours that is returned has names (where possible). PR#18529. #>  #> (cid:136) tools::xgettext() no longer extracts the (non-translatable) class names from #>  #> warningCondition and errorCondition calls. #>  #> (cid:136) S3method(<gen>, <class>, <func>) in the ‚ÄòNAMESPACE‚Äô (cid:28)le now works (again) when #>  #> <func> is visible from the namespace, e.g., imported, or in base. #>  #> (cid:136) getParseData(f) now also works for a function de(cid:28)ned in the (cid:28)rst of several #> ‚Äò<pkg>/R/*.R‚Äô source (cid:28)les, thanks to Kirill M(cid:252)ller‚Äôs report and Duncan Murdoch‚Äôs #> patch in PR#16756. #>  #> (cid:136) Rd \\Sexpr macros with nested #ifdef conditionals were not processed. #> (cid:136) A non-blocking connection with non-default encoding (such as a socket) now correctly #> returns from readLines() after new data has arrived also when its EOF had been #> reached previously. Thanks to Peter Meilstrup‚Äôs report on R-devel and Ivan Krylov‚Äôs #> report and patch proposal in PR#18555. #>  #>  #>  #> --- #>  #> 10 #>  #> NEWS #>  #> (cid:136) tools::checkRdContents() failed to detect empty argument descriptions when they #> spanned multiple lines, including those generated by prompt(). These cases are now #> noted by R CMD check. #>  #> (cid:136) Plain-text help no longer outputs spurious colons in the arguments list (for multi-line #>  #> \\item labels in the Rd source). #>  #> (cid:136) kappa() and rcond() work correctly in more cases; kappa(., norm = \"2\") now warns #> that it computes the 1-norm with (default) exact = FALSE; prompted by Mikael Ja- #> gan‚Äôs quite comprehensive PR#18543. #>  #> (cid:136) Rd skeletons generated by prompt() or promptData() now use a dummy title (so #> R CMD build works). tools::checkRdContents() has been updated to detect such #> template leftovers, including from promptPackage(). #>  #> (cid:136) When S4 method dispatch fails because no method was found, the error message now #> includes the signature argument names; thanks to Michael Chirico‚Äôs proposal on the #> R-devel list. #>  #> (cid:136) withAutoprint({ .. }) now preserves srcrefs previously lost, thanks to Andrew #>  #> Simmons‚Äô report plus (cid:28)x in PR#18572. #>  #> (cid:136) transform.data.frame() no longer adjusts names; in particular, untransformed vari- #> ables are kept as-is, including those with syntactically invalid names (PR#17890). #>  #> (cid:136) The keep.source option for Rd \\Sexpr blocks is no longer ignored. #> (cid:136) The formula methods for t.test() and wilcox.test() now catch when paired is #>  #> passed, addressing PR#14359; use Pair(x1, x2) ~ 1 for a paired test. #>  #> (cid:136) The level reported in the browser prompt was often too large. #>  #> It now shows the #>  #> number of browser contexts on the stack. #>  #> (cid:136) For cbind() and rbind(), the optional deparse.level argument is now properly #>  #> passed to methods, thanks to Mikael Jagan‚Äôs PR#18579 and comments there. #>  #> (cid:136) Some error and warning messages for large (‚Äòlong vector‚Äô) matrix(v, nr, nc) #> and dim(m) <- d are now correct about sizes, using long long formatting, (cid:28)xing #> PR#18612 (and more) reported by Mikael Jagan. #>  #> (cid:136) readChar(useBytes = TRUE) now terminates strings even when the underlying con- #> nection uses extra spaces in the input bu(cid:27)er. This (cid:28)xes problems with extra garbage #> seen with gzip connections, PR#18605. #>  #> (cid:136) Named capture in PCRE regular expressions now works also with more than 127 #>  #> named groups (PR#18588). #>  #> (cid:136) Datetime functions are now robust against long jumps when dealing with internal time #> zone changes. This avoids confusing warnings about an invalid time zone, previously #> triggered by turning warnings into errors or handling them via tryCatch (PR#17966, #> PR#17780). #>  #> (cid:136) Datetime functions now restore even an empty TZ environment variable after internal #> time zone changes (PR#17724). This makes results of datetime functions with this #> (typically unintentional) setting more predictable. #>  #> (cid:136) drop.terms(*) now drops response as by default, keep.response = FALSE, (cid:28)xing #>  #> PR#18564 thanks to Mikael Jagan. #>  #> (cid:136) dummy.coef(.) now also works for lm()-models with character categorical predictor #> variables rather than factor ones, (cid:28)xing PR#18635 reported by Jinsong Zhao. #> (cid:136) formals(f) <- formals(f) now also works for a function w/o arguments and atomic #>  #> constant body(f). #>  #>  #>  #> --- #>  #> NEWS #>  #> 11 #>  #> (cid:136) Correct as.function(<invalid list>, .)‚Äôs error message. #> (cid:136) removeSource() is yet more thorough in (cid:28)nding and removing \"srcref\" and the #> other source references from parsed R language chunks, (cid:28)xing PR#18638 thanks to #> Andrew Simmons. #>  #> (cid:136) dgeom() is more accurate now, notably when its result is very small, (cid:28)xing PR#18642 #> thanks to the proposal of Morten Welinder, also improving other instances where C #> level binom_raw(x, n, ..) has x == 0 or x== n. #>  #> (cid:136) warning() with options(warn = 1) has improved output for multi-line messages. #> (cid:136) axis.Date() and axis.POSIXct() now respect the par(\"lab\") setting for the num- #>  #> ber of pretty() intervals. #>  #> (cid:136) Comparisons for language objects (which are based on deparsing) are now more careful #>  #> about using accurate deparsed results (PR#18676). #>  #> (cid:136) Plain-text help (Rd2txt) now correctly preserves blank lines following single-line #>  #> \\dontrun code. #>  #> (cid:136) <POSIXlt>[*] no longer sets wrong \"balanced\" attribute, (cid:28)xing PR#18681 thanks #>  #> to Mikael Jagan. #>  #> (cid:136) str(<classed-call>) now deparses the call as expected, (cid:28)xing PR#18684, reported #>  #> by Dave Slager. #>  #> (cid:136) In Rd examples, code following the closing brace of a \\dontrun, \\dontshow or #> \\donttest tag on the same line is no longer skipped when R CMD check runs the #> examples. #>  #> (cid:136) as.data.frame(matrix(*, ncol=0)) now gets valid names() and colnames(); re- #>  #> ported by Davis Vaughan on the R-devel list. #>  #> (cid:136) Internal Mathlib function stirlerr(n) is now almost fully (52-bit) accurate for all #> n >= 5.9 and more accurate also in the range 1 ‚àí ‚àí5.9. This entails small ((cid:16)after #> 12th decimal(cid:17)) changes in density functions, e.g., dgamma() in some regions of their #> support. The (cid:28)x was partly prompted by Morten Welinder‚Äôs PR#18640. #>  #> (cid:136) Numbers like 9876543.2 are now considered non-integer by Mathlib internal #>  #> R_nonint(), amending original (cid:28)x of PR#15734. #>  #> (cid:136) Rd comment lines no longer cause broken paragraphs in the rendered PDF and plain- #> text help. In code blocks, pure comment lines (starting with ‚Äò%‚Äô) no longer produce #> an empty line. #>  #> (cid:136) xtabs(Freq ~ .) now consistently defaults to na.action = na.pass, using na.rm = #>  #> FALSE (added as an argument) when summing over Freq (PR#17770). #>  #> (cid:136) tools::testInstalledPackage() is no longer silent about failures from running ex- #> amples or tests and its return code no longer ignores failures from checking vignettes. #>  #> CHANGES IN R 4.3.3 #>  #> NEW FEATURES: #>  #> (cid:136) iconv() now (cid:28)xes up variant encoding names such as \"utf8\" case-insensitively. #>  #> DEPRECATED AND DEFUNCT: #>  #> (cid:136) The legacy encoding = \"MacRoman\" is deprecated in pdf() and postscript(): sup- #>  #> port was incomplete in earlier versions of R. #>  #>  #>  #> --- #>  #> 12 #>  #> BUG FIXES: #>  #> NEWS #>  #> (cid:136) Arguments are now properly forwarded to methods on S4 generics with . . . in the #> middle of their formal arguments. This was broken for the case when a method #> introduced an argument but did not include . . . in its own formals. Thanks to Herv√ò #> Pag≈Ås for the report PR#18538. #>  #> (cid:136) Some invalid file arguments to pictex(), postscript() and xfig() opened a (cid:28)le #> called ‚ÄòNA‚Äô rather than throw an error. These included postscript(NULL) (which #> some people expected to work like pdf(NULL)). #>  #> (cid:136) Passing filename = NA to svg(), cairo_pdf(), cairo_ps() or the Cairo-based #>  #> bitmap devices opened a (cid:28)le called ‚ÄòNA‚Äô: it now throws an error. #>  #> (cid:136) quartz(file = NA) opened a (cid:28)le called ‚ÄòNA‚Äô, including when used as a Quartz-based #>  #> bitmap device. It now gives an error. #>  #> (cid:136) rank(<long vector>) now works, (cid:28)xing PR#18617, thanks to Ilia Kats. #> (cid:136) seq.int() did not adequately check its length.out argument. #> (cid:136) match(<POSIXct>, .) is correct again for di(cid:27)ering time zones, ditto for \"POSIXlt\", #>  #> (cid:28)xing PR#18618 reported by Bastian Klein. #>  #> (cid:136) drop.terms(*, dropx = <0-length>) now works, (cid:28)xing PR#18563 as proposed by #>  #> Mikael Jagan. #>  #> (cid:136) drop.terms(*) keeps + offset(.) terms when it #>  #> and #> drop.terms() no longer makes up a response, PR#18566, (cid:28)xing both bugs thanks #> to Mikael Jagan. #>  #> should, PR#18565, #>  #> (cid:136) getS3method(\"t\", \"test\") no longer (cid:28)nds the t.test() function, (cid:28)xing PR#18627. #> (cid:136) pdf() and postscript() support for the documented Adobe encodings \"Greek\" and #> \"Cyrilllic\" was missing (although the corresponding Windows‚Äô codepages could be #> used). #>  #> (cid:136) Computations of glyph metric information for pdf() and postscript() did not take #> into account that transliteration could replace one character by two or more (only #> seen on macOS 14) and typically warned that the information was not known. #>  #> (cid:136) rank(x) no longer over(cid:29)ows during integer addition, when computing rank average #>  #> for largish but not-yet long vector x, (cid:28)xing PR#18630, thanks to Ilia Kats. #>  #> (cid:136) list.files() on Windows now returns also (cid:28)les with names longer that 260 bytes #> (the Windows limit is 260 characters). Previously, some (cid:28)le names particularly with #> ‚ÄòEast Asian‚Äô characters were omitted. #>  #> (cid:136) cov2cor(<0 x 0>) now works, (cid:28)xing PR#18423 thanks to Mikael Jagan and Elin #>  #> Waring. #>  #> (cid:136) cov2cor(<negative diagonal>) and similar now give one warning instead of two, #>  #> with better wording, (cid:28)xing PR#18424 thanks to Mikael Jagan. #>  #> (cid:136) tools:: startDynamicHelp() now ensures port is in proper range, (cid:28)xing PR#18645. #> (cid:136) pbeta(x, a,b) is correct now for x=0 or 1 in the boundary cases where a or b or #>  #> both are 0, (cid:28)xing PR#18672 thanks to Michael Fay. #>  #> (cid:136) pmatch(x, table) for large table, also called for data frame row selection, dfrm[nm, #>  #> ], is now interruptible, (cid:28)xing PR#18656. #>  #> (cid:136) predict(<rank-deficient lm>, newdata=*) (cid:28)x computing of nbasis, see Russ #>  #> Lenth‚Äôs comment 29 in PR#16158. #>  #> (cid:136) Added a work-around for a bug in macOS 14.3.1 and higher which prevents R plots #>  #> in the Quartz Cocoa device from updating on screen. #>  #>  #>  #> --- #>  #> NEWS #>  #> 13 #>  #> CHANGES IN R 4.3.2 #>  #> NEW FEATURES: #>  #> (cid:136) The default initialization of the \"repos\" option from the ‚Äòrepositories‚Äô (cid:28)le at #> startup can be skipped by setting environment variable R_REPOSITORIES to NULL #> such that getOption(\"repos\") is empty if not set elsewhere. #>  #> (cid:136) qr.X() is now an implicit S4 generic in methods. #> (cid:136) iconv(to = \"ASCII//TRANSLIT\") is emulated using substitution on platforms which #> do not support it (notably Alpine Linux). This should give a human-readable con- #> version in ASCII on all platforms (rather than NA_character_). #>  #> (cid:136) trans3d() gains options continuous and verbose addressing the problem of possible #> (cid:16)wrap around(cid:17) when projecting too long curves, as reported by Achim Zeileis in #> PR#18537. #>  #> (cid:136) tools::showNonASCII() has been rewritten to work better on macOS 14 (which has #>  #> a changed implementation of iconv()). #>  #> (cid:136) tiff(type = \"quartz\") (the default on macOS) now warns if compression is spec- #>  #> i(cid:28)ed: it continues to be ignored. #>  #> INSTALLATION on a UNIX-ALIKE: #>  #> (cid:136) There is some support for building with Intel‚Äôs LLVM-based compilers on ‚Äòx86_64‚Äô #>  #> Linux, such as (C) icx, (C++) ipcx and (Fortran) ifx from oneAPI 2023.x.y. #>  #> (cid:136) There is support for using LLVM‚Äôs flang-new as the Fortran compiler from LLVM #>  #> 16.0.x (preferably 17.0.0 or later). #>  #> UTILITIES: #>  #> (cid:136) R CMD check reports #>  #> the use of #>  #> the Fortran 90 random number generator #>  #> RANDOM_NUMBER() and the subroutines to initialize it. #> ‚ÄòWriting R Extensions‚Äô has example code to use R‚Äôs RNGs from Fortran. #>  #> BUG FIXES: #>  #> (cid:136) substr(x, n, L) <- cc now works (more) correctly for multibyte UTF-8 strings x #>  #> when L > nchar(x), thanks to a report and patch by ‚ÄòArchitect 95‚Äô. #>  #> (cid:136) contrib.url(character()) now returns 0-length character() as documented, #> which also avoids spurious warnings from available.packages() et al. in the edge #> case of an empty vector of repository URLs. #>  #> (cid:136) readChar(., 4e8) no longer fails, thanks to Kodi Arfer‚Äôs report (PR#18557). #> (cid:136) lapply(<list>, as.data.frame) no longer warns falsely for some base vector com- #>  #> ponents. #>  #> (cid:136) Communication between parent and child processes in the multicore part of #> parallel could fail on platforms that do not support an arbitrarily large payload #> in system functions read()/write() on pipes (seen on macOS where a restriction #> to INT_MAX bytes is documented, without doing a partial read unlike Linux). The #> payload is now split into 1Gb chunks to avoid that problem. (PR#18571) #>  #> (cid:136) qqplot(x,y, conf.level=.) gives better con(cid:28)dence bounds when length(x) != #> length(y), thanks to Alexander Ploner‚Äôs report and patch proposal (PR#18557). #>  #>  #>  #> --- #>  #> 14 #>  #> NEWS #>  #> (cid:136) norm(<0-length>, \"2\") now gives zero instead of an error, as all the other norm #>  #> types, thanks to Mikael Jagan‚Äôs PR#18542. #>  #> (cid:136) Build-stage Rd macros \\packageAuthor and \\packageMaintainer now process #> ‚ÄòAuthors@R‚Äô, (cid:28)xing ‚ÄòNA‚Äô results when the package ‚ÄòDESCRIPTION‚Äô omits ‚ÄòAuthor‚Äô and #> ‚ÄòMaintainer‚Äô (cid:28)elds. #>  #> (cid:136) Formatting and printing complex numbers could give things like ‚Äò0.1683-0i‚Äô because #>  #> of rounding error: ‚Äò-0i‚Äô is now replaced by ‚Äò+0i‚Äô. #>  #> (cid:136) postscript() refused to accept a title comment containing the letter (cid:16)W(cid:17) #>  #> (PR#18599). #>  #> (cid:136) isoreg(c(1,Inf)) signals an error instead of segfaulting, (cid:28)xing PR#18603. #> (cid:136) tiff(type = \"Xlib\") was only outputting the last page of multi-page plots. #> (cid:136) tools::latexToUtf8() again knows about ‚Äò\\~{n}‚Äô and other letters with tilde, (cid:28)xing #> a regression in R 4.3.0, and about ‚Äò\\^{i}‚Äô as an alternative to ‚Äò\\^{\\i}‚Äô (similarly with #> other accents). Furthermore, LATEX codes for accented I letters are now correctly #> converted, also (cid:28)xing related mistakes in tools::encoded_text_to_latex(). #>  #> (cid:136) tar(*, tar = \"internal\") no longer creates out-of-spec tar (cid:28)les in the very rare case #> of user or group names longer than 32 bytes, (cid:28)xing PR#17871 with thanks to Ivan #> Krylov. #>  #> (cid:136) When using the (cid:16)internal(cid:17) timezone datetime code, adding a fraction of a second no #>  #> longer adds one second, (cid:28)xing PR#16856 from a patch by Ivan Krylov. #>  #> (cid:136) tools::checkRd() no longer produces spurious notes about (cid:16)unnecessary braces(cid:17) #>  #> from multi-line Rd results of \\Sexpr macros. #>  #> CHANGES IN R 4.3.1 #>  #> C-LEVEL FACILITIES: #>  #> (cid:136) The C-level API version of R‚Äôs integrate(), Rdqags() in ‚ÄòApplic.h‚Äô, now returns #> the correct number of integrand evaluations neval, (cid:28)xing PR#18515 reported and #> diagnosed by Stephen Wade. #>  #> (cid:136) The C prototypes for LAPACK calls dspgv and dtptrs in ‚ÄòR_ext/Lapack.h‚Äô had one #> too many and one too few character length arguments (cid:22) but this has not caused any #> known issues. To get the corrected prototypes, include #>  #> #include <Rconfig.h> // for PR18534fixed #> #ifdef PR18534fixed #> # define usePR18534fix 1 #>  #> #endif #>  #> #include <R_ext/Lapack.h> #>  #> in your C/C++ code (PR#18534). #>  #> INSTALLATION: #>  #> (cid:136) Many of the checks of esoteric Internet operations and those using unreliable external #> sites have been moved to a new target that is not run by default and primarily #> intended for the core developers. To run them use #>  #> cd tests; make test-Internet-dev #>  #>  #>  #> --- #>  #> NEWS #>  #> BUG FIXES: #>  #> 15 #>  #> (cid:136) .S3methods(), typically called from methods(), again marks methods from package #>  #> base as visible. #> Also, the visibility of non-base methods is again determined by the method‚Äôs presence #> in search(). #>  #> (cid:136) tools::Rdiff() is now more robust against invalid strings, (cid:28)xing installation tests #>  #> on Windows without Rtools installed (PR#18530). #>  #> (cid:136) Fix (new) bug in hcl.colors(2, *), by Achim Zeileis (PR#18523). #> (cid:136) head(., <illegal>) and tail(..) now produce more useful \"Error in ....\" error #>  #> messages, (cid:28)xing PR#18362. #>  #> (cid:136) Package code syntax on Windows is checked in UTF-8 when UTF-8 is the native #>  #> encoding. #>  #> (cid:136) na.contiguous(x) now also returns the (cid:28)rst run, when it is at the beginning and #> there is a later one of the same length; reported to R-devel, including a (cid:28)x, by Georgi #> Boshnakov. Further, by default, it modi(cid:28)es only an existing attr(*,\"tsp\") but #> otherwise no longer sets one. #>  #> (cid:136) chol(<not pos.def>, pivot = <T|F>) now gives a correct error or warning message #>  #> (depending on pivot), thanks to Mikael Jagan‚Äôs (PR#18541). #>  #> CHANGES IN R 4.3.0 #>  #> SIGNIFICANT USER-VISIBLE CHANGES: #>  #> (cid:136) Calling && or || with LHS or (if evaluated) RHS of length greater than one is now #>  #> always an error, with a report of the form #>  #> ‚Äôlength = 4‚Äô in coercion to ‚Äôlogical(1)‚Äô #>  #> Environment variable _R_CHECK_LENGTH_1_LOGIC2_ no longer has any e(cid:27)ect. #>  #> NEW FEATURES: #>  #> (cid:136) The included BLAS sources have been updated to those shipped with LAPACK ver- #> sion 3.10.1. (This caused some platform-dependent changes to package check output.) #> And then to the sources from LAPACK version 3.11.0 (with changes only to double #> complex subroutines). #>  #> (cid:136) The included LAPACK sources have been updated to include the four Fortran 90 #> routines rather than their Fortran 77 predecessors. This may give some di(cid:27)erent #> signs in SVDs or eigendecompositions.. (This completes the transition to LAPACK #> 3.10.x begun in R 4.2.0.) #>  #> (cid:136) The LAPACK sources have been updated to version 3.11.0. (No new subroutines have #> been added, so this almost entirely bug (cid:28)xes: Those (cid:28)xes do a(cid:27)ect some computations #> with NaNs, including R‚Äôs NA.) #>  #> (cid:136) The parser now signals classed errors, notably in case of the pipe operator |>. The #> error object and message now give line and column numbers, mostly as proposed and #> provided by Duncan Murdoch in PR#18328. #>  #> (cid:136) toeplitz() is now generalized for asymmetric cases, with a toeplitz2() variant. #>  #>  #>  #> --- #>  #> 16 #>  #> NEWS #>  #> (cid:136) xy.coords() and xyz.coords() and consequently, e.g., plot(x,y, log = \"y\") now #> signal a classed warning about negative values of y (where log(.) is NA). Such a #> warning can be speci(cid:28)cally suppressed or caught otherwise. #>  #> (cid:136) Regular expression functions now check more thoroughly whether their inputs are #>  #> valid strings (in their encoding, e.g. in UTF-8). #>  #> (cid:136) The performance of grep(), sub(), gsub() and strsplit() has been improved, #> particularly with perl = TRUE and fixed = TRUE. Use of useBytes = TRUE for perfor- #> mance reasons should no longer be needed and is discouraged: it may lead to incorrect #> results. #>  #> (cid:136) apropos() gains an argument dot_internals which is used by the completion #>  #> (help(rcompgen)) engine to also see base internals such as .POSIXct(). #>  #> (cid:136) Support in tools::Rdiff() for comparing uncompressed PDF (cid:28)les is further reduced #>  #> (cid:21) see its help page. #>  #> (cid:136) qqplot(x, y, ...) gains conf.level and conf.args arguments for computing and #> plotting a con(cid:28)dence band for the treatment function transforming the distribution #> of x into the distribution of y (Switzer, 1976, Biometrika). Contributed by Torsten #> Hothorn. #>  #> (cid:136) Performance of package_dependencies() has been improved for cases when the #>  #> number of dependencies is large. #>  #> (cid:136) Strings newly created by gsub(), sub() and strsplit(), when any of the inputs is #> marked as \"bytes\", are also marked as \"bytes\". This reduces the risk of creating #> invalid strings and accidental substitution of bytes deemed invalid. #>  #> (cid:136) Support for readLines(encoding = \"bytes\") has been added to allow processing #>  #> special text (cid:28)les byte-by-byte, without creating invalid strings. #>  #> (cid:136) iconv(from = \"\") now takes into account any declared encoding of the input elements #> and uses it in preference to the native encoding. This reduces the risk of accidental #> creation of invalid strings, particularly when di(cid:27)erent elements of the input have #> di(cid:27)erent encoding (including \"bytes\"). #>  #> (cid:136) Package #>  #> repositories #>  #> in getOption(\"repos\") are now initialized from the #> ‚Äòrepositories‚Äô (cid:28)le when utils is loaded (if not already set, e.g., in ‚Äò.Rprofile‚Äô). #> (From a report and patch proposal by Gabriel Becker in PR#18405.) #>  #> (cid:136) compactPDF() gets a verbose option. #> (cid:136) type.convert() and hence read.table() get new option tryLogical = TRUE with #> back compatible default. When set to false, converts \"F\" or \"T\" columns to character. #> (cid:136) Added new unit pre(cid:28)xes \"R\" and \"Q\" for abbreviating (unrealistically large) sizes #>  #> beyond 1027 in standard = \"SI\", thanks to Henrik Bengtsson‚Äôs PR#18435. #>  #> (cid:136) as.data.frame()‚Äôs default method now also works (cid:28)ne with atomic objects inheriting #> from classes such as \"roman\", \"octmode\" and \"hexmode\", thus ful(cid:28)lling the wish of #> PR#18421, by Benjamin Feakins. #>  #> (cid:136) The as.data.frame.vector() utility now errors for wrong-length row.names. #>  #> It #>  #> warned for almost six years, with (cid:16)Will be an error!(cid:17). #>  #> (cid:136) sessionInfo() now also contains La_version() and reports codepage and timezone #> when relevant, in both print() and toLatex() methods which also get new option #> tzone for displaying timezone information when locale = FALSE. #>  #> (cid:136) New function R_compiled_by() reports the C and Fortran compilers used to build #>  #> R, if known. #>  #>  #>  #> --- #>  #> NEWS #>  #> 17 #>  #> (cid:136) predict(<lm>, newdata = *) no longer unnecessarily creates an offset of all 0s. #> (cid:136) solve() for complex inputs now uses argument tol and by default checks for ‚Äòcom- #>  #> putational singularity‚Äô (as it long has done for numeric inputs). #>  #> (cid:136) predict(<rank-deficient lm>, newdata=*) #>  #> new argument #> rankdeficient, with new default \"warnif\", warning only if there are non-estimable #> cases in newdata. Other options include rankdeficient = \"NA\", predicting NA for #> non-estimable newdata cases. This addresses PR#15072 by Russ Lenth and is based #> on his original proposal and discussions in PR#16158 also by David Firth and Elin #> Waring. Still somewhat experimental. #>  #> now obeys #>  #> a #>  #> (cid:136) Rgui console implementation now works better with the NVDA screen reader when the #> full blinking cursor is selected. The underlying improvements in cursor handling may #> help also other screen readers on Windows. #>  #> (cid:136) The drop-(cid:28)eld control in GraphApp can now be left with the TAB key and all controls #> can be navigated in the reverse order using the Shift+TAB key, improving accessibility #> of the Rgui con(cid:28)guration editor. #>  #> (cid:136) qnorm(<very large negative>, log.p=TRUE) is now fully accurate (instead of to #>  #> (cid:16)only(cid:17) minimally (cid:28)ve digits). #>  #> (cid:136) demo(error.catching) now also shows o(cid:27) withWarnings() and tryCatchWEMs(). #> (cid:136) As an experimental feature the placeholder _ can now also be used in the rhs of #> a forward pipe |> expression as the (cid:28)rst argument in an extraction call, such as #> _$coef. More generally, it can be used as the head of a chain of extractions, such as #> _$coef[[2]]. #>  #> (cid:136) Spaces in the environment variable used to choose the R session‚Äôs temporary directory #> (TMPDIR, TMP and TEMP are tried in turn) are now fatal. (On Windows the ‚Äòshort path‚Äô #> version of the path is tried and used if that does not contain a space.) #>  #> (cid:136) all.equal.numeric() gets a new optional switch giveErr to return the numeric #> error as attribute. Relatedly, stopifnot(all.equal<some>(a, b, ..)) is as (cid:16)smart(cid:17) #> now, as stopifnot(all.equal(....)) has been already, thus allowing customized #> all.equal<Some>() wrappers. #>  #> (cid:136) R on Windows is now able to work with path names longer than 260 characters #> when these are enabled in the system (requires at least Windows 10 version 1607). #> Packages should be updated to work with long paths as well, instead of assum- #> ing PATH_MAX to be the maximum length. Custom front-ends and applications #> embedding R need to update their manifests if they wish to allow this feature. #> See https://blog.r-project.org/2023/03/07/path-length-limit-on-windows #> for more information. #>  #> (cid:136) ‚ÄòObject not found‚Äô and ‚ÄòMissing argument‚Äô errors now give a more accurate error #>  #> context. Patch provided by Lionel Henry in PR#18241. #>  #> (cid:136) The @ operator is now an S3 generic. Based on contributions by Tomasz Kalinowski #>  #> in PR#18482. #>  #> (cid:136) New generic chooseOpsMethod() provides a mechanism for objects to resolve cases #> where two suitable methods are found for an Ops Group Generic. This supports #> experimenting with alternative object systems. Based on contributions by Tomasz #> Kalinowski in PR#18484. #>  #> (cid:136) inherits(x, what) now accepts values other than a simple character vector for ar- #> gument what. A new generic, nameOfClass(), is called to resolve the class name #>  #>  #>  #> --- #>  #> 18 #>  #> NEWS #>  #> from what. This supports experimenting with alternative object systems. Based on #> contributions by Tomasz Kalinowski in PR#18485. #>  #> (cid:136) Detection of BLAS/LAPACK in use (sessionInfo()) with FlexiBLAS now reports #>  #> the current backend. #>  #> (cid:136) The \"data.frame\" method for subset() now warns about extraneous arguments, #>  #> typically catching the use of ‚Äò=‚Äô instead of ‚Äò==‚Äô in the subset expression. #>  #> (cid:136) Calling a:b when numeric a or b is longer than one may now be made into an error #> by setting environment variable _R_CHECK_LENGTH_COLON_ to a true value, along the #> proposal in PR#18419 by Henrik Bengtsson. #>  #> (cid:136) density(x, weights = *) now warns if automatic bandwidth selection happens with- #> out using weights; new optional warnWbw may suppress the warning. Prompted by #> Christoph Dalitz‚Äô PR#18490 and its discussants. #>  #> (cid:136) rm(list = *) is faster and more readable thanks to Kevin Ushey‚Äôs PR#18492. #> (cid:136) The plot.lm() function no longer produces a normal Q-Q plot for GLMs. Instead #> it plots a half-normal Q-Q plot of the absolute value of the standardized deviance #> residuals. #>  #> (cid:136) The print() method for class \"summary.glm\" no longer shows summary statistics #> for the deviance residuals by default. Its optional argument show.residuals can be #> used to show them if required. #>  #> (cid:136) The tapply() function now accepts a data frame as its X argument, and allows #> INDEX to be a formula in that case. by.data.frame() similarly allows INDICES to be #> a formula. #>  #> (cid:136) The performance of df[j] <- value (including for missing j) and write.table(df) #> has been improved for data frames df with a large number of columns. (Thanks to #> Gabriel Becker‚Äôs PR#18500, PR#18503 and discussants, prompted by a report from #> Toby Dylan Hocking on the R-devel mailing list.) #>  #> (cid:136) The matrix multiply operator %*% is now an S3 generic, belonging to new group #>  #> generic matrixOps. From Tomasz Kalinowski‚Äôs contribution in PR#18483. #>  #> (cid:136) New function array2DF() to convert arrays to data frames, particularly useful for #>  #> the list arrays created by tapply(). #>  #> DATES and TIMES: #>  #> (cid:136) On platforms where (non-UTC) datetimes before 1902 (or before 1900 as with system #> functions on recent macOS) are guessed by extrapolating time zones from 1902-2037, #> there is a warning at the (cid:28)rst use of extrapolation in a session. (As all time zones #> post 2037 are extrapolation, we do not warn on those.) #>  #> (cid:136) (Platforms using ‚Äò--with-internal-tzone‚Äô, including Windows and by default ma- #> cOS). How years are printed in dates or date-times can be controlled by environment #> variable R_PAD_YEARS_BY_ZERO. The default remains to pad to 4 digits by zeroes, but #> setting value ‚Äòno‚Äô gives no padding (as used by default by glibc). #>  #> (cid:136) strftime() tries harder to determine the o(cid:27)set for the \"%z\" format, and succeeds on #>  #> the mainstream R platforms. #>  #> (cid:136) strftime() has a limit of 2048 bytes on the string produced (cid:21) attempting to exceed #>  #> this is an error. (Previously it silently truncated at 255 bytes.) #>  #> (cid:136) sessionInfo() records (and by default prints) the system time zone as part of the #> locale information. Also, the source (system/internal) of the date-time conversion #> and printing functions. #>  #>  #>  #> --- #>  #> NEWS #>  #> 19 #>  #> (cid:136) Objects of class \"POSIXlt\" created in this version of R always have 11 components: #> component zone is always set, and component gmtoff is set for times in UTC and #> usually set on the (almost all) platforms which have C-level support, otherwise is NA. #> (cid:136) There are comprehensive validity checks on the structure of objects of class \"POSIXlt\" #> when converting (including formatting and printing). (This avoids mis-conversions of #> hand-crafted objects.) #>  #> (cid:136) There is some support for using the native date-time routines on macOS: this is only #> viable on recent versions (e.g. 12.6 and 13) and does get wrong some historical changes #> (before 1900, during WWII). Use of ‚Äò--with-internal-tzone‚Äô remains the default. #> (cid:136) as.POSIXct(<numeric>) and as.POSIXlt(.) (without specifying origin) now work. #>  #> So does as.Date(<numeric>). #>  #> (cid:136) as.Date.POSIXct(., tz) now treats several tz values, notably \"GMT\" as equivalent #> to \"UTC\", proposed and improved by Michael Chirico and Joshua Ulrich in PR#17674. #> (cid:136) Experimental balancePOSIXlt() utility allows using (cid:16)ragged(cid:17) and or out-of-range #> \"POSIXlt\" objects more correctly, e.g., in subsetting and subassignments. Such ob- #> jects are now documented. Complemented by the low-level unCfillPOSIXlt() utility. #> More experimentally, a \"POSIXlt\" object may have an attribute \"balanced\" indi- #> cating if it is known to be (cid:28)lled or fully balanced. #>  #> (cid:136) Functions axis.Date() and axis.POSIXct() are rewritten to gain better default #> tick locations and better default formats via the corresponding pretty() methods. #> Thanks to Swetlana Herbrandt. #>  #> (cid:136) The mapping of Windows‚Äô names for time zones to IANA‚Äôs ‚ÄòOlson‚Äô names has been #> updated. When ICU is available (it is by default), it is used to get a mapping for the #> current region set in Windows. This can be overridden by setting environment variable #> TZ to the desired Olson name (cid:22) see OlsonNames() for those currently available. #>  #> GRAPHICS: #>  #> (cid:136) The graphics engine version, R_GE_version, has been bumped to 16 and so packages #>  #> that provide graphics devices should be reinstalled. #>  #> (cid:136) The grDevices and grid packages have new functions for rendering typeset glyphs, #>  #> primarily: grDevices::glyphInfo() and grid::grid.glyph(). #> Rendering of typeset glyphs is only supported so far on the Cairo-based graphics #> devices and on the pdf() and quartz() devices. #>  #> (cid:136) The de(cid:28)ned behaviour for \"clear\" and \"source\" compositing operators (via #> grid::grid.group()) has been changed (to align better with simple interpretation #> of original Porter-Du(cid:27) de(cid:28)nitions). #>  #> (cid:136) Support for gradients, patterns, clipping paths, masks, groups, compositing operators, #>  #> and a(cid:30)ne transformations has been added to the quartz() device. #>  #> INSTALLATION on a UNIX-ALIKE: #>  #> (cid:136) A system installation of generic LAPACK 3.10.0 or later will be preferred to the #>  #> version in the R sources. #> configure option ‚Äò--with-lapack=no‚Äô (equivalently ‚Äò--without-lapack‚Äô) forces #> compilation of the internal LAPACK sources. #> If ‚Äò--with-lapack‚Äô is not speci(cid:28)ed, a system liblapack is looked for and used if it #> reports version 3.10.0 or later and does not contain BLAS routines. #> Packages using LAPACK will need to be reinstalled if this changes to using an external #> library. #>  #>  #>  #> --- #>  #> 20 #>  #> NEWS #>  #> (cid:136) On ‚Äòaarch64‚Äô Linux platforms using GCC, configure now defaults to ‚Äò-fPIC‚Äô (instead #>  #> of ‚Äò-fpic‚Äô), as desired in PR#18326. #>  #> (cid:136) configure now checks conversion of datetimes between POSIXlt and POSIXct around #>  #> year 2020. Failure (which has been seen on platforms missing tzdata) is fatal. #>  #> (cid:136) If configure option ‚Äò--with-valgrind-instrumentation‚Äô is given value 1 or 2, #> option ‚Äò--with-system-valgrind-headers‚Äô is now the default and ignored (with a #> warning). It is highly recommended that the system headers are installed alongside #> valgrind: they are part of its packaging on some Linux distributions and packaged #> separately (e.g. in the ‚Äòvalgrind-devel‚Äô RPM) on others. configure will give a #> warning if they are not found. #> The system headers will be required in a future release of R to build with valgrind #> instrumentation. #>  #> (cid:136) libcurl 8.x is now accepted by configure: despite a change in major version number #>  #> it changes neither API nor ABI. #>  #> INSTALLATION on WINDOWS: #>  #> (cid:136) The make(cid:28)les and installer scripts for Windows have been tailored to Rtools43, an #> update of the Rtools42 toolchain. #> It is based on GCC 12 and newer versions of #> MinGW-W64, binutils and libraries. At this time R-devel can still be built using #> Rtools42 without changes, but when R-devel is installed via the installer, it will by #> default look for Rtools43. #>  #> (cid:136) Old make targets rsync-extsoft and 32-bit ones that are no longer needed have #>  #> been removed. #>  #> (cid:136) Default builds (including for packages) no longer select C99. Thus the C standard #> used is the default for the compiler, which for the toolchain in ‚ÄòRtools43‚Äô is C17. #> (This is consistent with Unix builds.) #>  #> PACKAGE INSTALLATION: #>  #> (cid:136) The default C++ standard has been changed to C++17 where available (which it #> is on all currently checked platforms): if not C++14 or C++11 is used if available #> otherwise C++ is not supported. #>  #> (cid:136) USE_FC_LEN_T is the default: this uses the correct (compiler-dependent) prototypes #> for Fortran BLAS/LAPACK routines called from C/C++, and requires adjustment #> of many such calls (cid:21) see ‚ÄòWriting R Extensions‚Äô (cid:159)6.6.1. #>  #> (cid:136) There is initial support for C++23 as several compilers are now supporting #> -std=c++23 or -std=c++2b or similar. As for C++20, there no additional configure #> checks for C++23 features beyond a check that the compiler reports a __cplusplus #> value greater than that in the C++20 standard. C++ feature tests should be used. #> (cid:136) There is support for a package to indicate the version of the C standard which should #> In most cases R #> be used to compile it, and for the installing user to specify this. #> defaults to the C compiler‚Äôs default standard which is C17 (a ‚Äòbug-(cid:28)x‚Äô of C11) (cid:21) #> earlier versions of R or compilers may have defaulted to C99. #> Current options are: #> USE_C17 Use a standard that is at most C17. The intention is to allow legacy #> packages to still be installed when later C standards become the default, in- #> cluding packages using new keywords as identi(cid:28)ers or with K&R-style function #> declarations. This will use C17 if available, falling back to C11. #>  #>  #>  #> --- #>  #> NEWS #>  #> 21 #>  #> USE_C90 Use the C90 (aka C89) standard. #>  #> (As that standard did not require #> compilers to identify that version, all we can verify is that the compiler does not #> It may accept C99 features (cid:21) for example #> claim to be using a later standard. #> clang accepts // to make comments.) #>  #> USE_C99 Use the C99 standard. This should be rarely needed (cid:21) it avoids the few #> new features of C11/C17 which can be useful if a package assumes them if C17 #> is speci(cid:28)ed and they are not implemented. #>  #> USE_C23 Use C23 (or in future, later). Compiler/library support for C23 is still #> being implemented, but LLVM clang from 15.0.0 and GCC from 13 have quite #> extensive support. #>  #> These can be speci(cid:28)ed as part of the ‚ÄòSystemRequirements‚Äô (cid:28)eld in the package‚Äôs #> ‚ÄòDESCRIPTION‚Äô (cid:28)le or via options ‚Äò--use-C17‚Äô and so on of R CMD INSTALL and R CMD #> SHLIB. #> For further details see (cid:16)Writing R Extensions(cid:17) (cid:159)1.2.5. #>  #> (cid:136) (Windows) A ‚Äòsrc/Makefile.ucrt‚Äô or ‚Äòsrc/Makefile.win‚Äô (cid:28)le is now included after #> ‚ÄòR_HOME/etcR_ARCH /Makeconf‚Äô and so no longer needs to include that (cid:28)le it- #> self. Installation of a package with such a (cid:28)le now uses a site ‚ÄòMakevars‚Äô (cid:28)le in the #> same way as a package with a ‚Äòsrc/Makevars.win‚Äô (cid:28)le would. #>  #> (cid:136) configure is now passed crucial variables such as CC and CFLAGS in its environment, #> as many packages were not setting them (as documented in ‚ÄòWriting R Extensions‚Äô #> (cid:159)1.2). #> This has most e(cid:27)ect where configure is used to compile parts of the package (cid:21) most #> often by cmake or libtool which obfuscate the actual compile commands used. #> Also used for configure.win and configure.ucrt on Windows. #>  #> FORTRAN FLAGS: #>  #> (cid:136) The (cid:29)ag ‚Äò-fno-optimize-sibling-calls‚Äô is no longer forced for gfortran 7 and #> later. It should no longer be needed now using ‚Äòhidden‚Äô character-length arguments #> when calling BLAS/LAPACK routines from C/C++ is the default even for packages. #> (Unless perhaps packages call Fortran code from C/C++ without using R‚Äôs headers #> and without allowing for these arguments.) #>  #> C-LEVEL FACILITIES: #>  #> (cid:136) The deprecated S-compatibility macros DOUBLE_* in ‚ÄòR_ext/Constants.h‚Äô (included #>  #> by ‚ÄòR.h‚Äô) have been removed. #>  #> (cid:136) The deprecated legacy typedefs of Sint and Sfloat in header ‚ÄòR.h‚Äô are no longer #> de(cid:28)ned, and that header no longer includes header ‚Äòlimits.h‚Äô from C nor ‚Äòclimits‚Äô #> from C++. #>  #> (cid:136) New macro CAD5R() is provided in ‚ÄòRinternals.h‚Äô and used in a few places in the R #>  #> sources. #>  #> (cid:136) ALTREP now supports VECSXP vectors. Contributed by Gabor Csardi in PR#17620. #> (cid:136) The Rcomplex de(cid:28)nition (in header ‚ÄòR_ext/Complex.h‚Äô) has been extended to pre- #> vent possible mis-compilation when interfacing with Fortran (PR#18430). The new #> de(cid:28)nition causes compiler warnings with static initializers such as {1, 2}, which can #> be changed to {.r=1,.i=2}. #> Using the new de(cid:28)nition from C++ depends on compiler extensions supporting C #> features that have not been incorporated into the C++ standards but are available #>  #>  #>  #> --- #>  #> 22 #>  #> NEWS #>  #> in g++ and clang++: this may result in C++ compiler warnings but these have been #> worked around for recent versions of common compilers (GCC, Apple/LLVM clang, #> Intel). #> It is intended to change the inclusion of header ‚ÄòR_ext/Complex.h‚Äô by other R head- #> ers, so C/C++ code (cid:28)les which make use of Rcomplex should include that header #> explicitly. #>  #> UTILITIES: #>  #> (cid:136) R CMD check does more checking of package ‚Äò.Rd‚Äô (cid:28)les, warning about invalid email #> addresses and (some) invalid URIs and noting empty ‚Äò\\item‚Äô labels in description #> lists. #>  #> (cid:136) R CMD check now also reports problems when reading package news in md ((cid:28)le #>  #> ‚ÄòNEWS.md‚Äô) and (optionally) plain text ((cid:28)le ‚ÄòNEWS‚Äô) formats. #>  #> (cid:136) _R_CHECK_TIMINGS_ defaults to a value from the environment even for R CMD check #>  #> --as-cran; this allows for exceptionally fast or slow platforms. #> It now applies to checking PDF and HTML versions of the manuals, and ‚Äòchecking #> CRAN incoming feasibility‚Äô. #>  #> (cid:136) R CMD check can optionally (but included in ‚Äò--as-cran‚Äô) check whether HTML math #>  #> rendering via KaTeX works for the package ‚Äò.Rd‚Äô (cid:28)les. #>  #> (cid:136) Non-interactive debugger invocations can be trapped by setting the environment vari- #> able _R_CHECK_BROWSER_NONINTERACTIVE_ to a true value. This is enabled by R CMD #> check --as-cran to detect the use of leftover browser() statements in the package. #> (cid:136) The use of sprintf and vsprintf from C/C++ has been deprecated in macOS 13 #> and is a known security risk. R CMD check now reports (on all platforms) if their use #> is found in compiled code: replace by snprintf or vsnprintf respectively. #> [NB: #> whether such calls get compiled into the package is platform-dependent.] #>  #> (cid:136) Where recorded at installation, R CMD check reports the C and Fortran compilers #>  #> used to build R. #> It reports the OS in use (if known, as given by osVersion) as well as that R was built #> for. #> It notes if a C++ standard was speci(cid:28)ed which is older than the current default: #> many packages have used C++11 to mean ‚Äònot C++98‚Äô (cid:22) as C++11 is the minimum #> supported since R 4.0.0, that speci(cid:28)cation can probably be removed. #>  #> (cid:136) R CMD INSTALL reports the compilers (and on macOS, the SDK) used, and this is #>  #> copied to the output of R CMD check. #> Where a C++ standard is speci(cid:28)ed, it is reported. #>  #> (cid:136) R CMD check‚Äôs ‚Äòchecking compilation (cid:29)ags in Makevars‚Äô has been relaxed to accept the #>  #> use of (cid:29)ags such as ‚Äò-std=f2008‚Äô in ‚ÄòPKG_FFLAGS‚Äô. #>  #> (cid:136) tools::buildVignettes() has a new argument skip, which is used by R CMD check #> to skip (and note) vignettes with unavailable ‚Äò\\VignetteDepends‚Äô (PR#18318). #> (cid:136) New generic .AtNames() added to enable class-speci(cid:28)c completions after @. The #> formerly internal function findMatches() is now exported, mainly for use in methods #> for .DollarNames() and .AtNames(). #>  #> DEPRECATED AND DEFUNCT: #>  #> (cid:136) default.stringsAsFactors() is defunct. #>  #>  #>  #> --- #>  #> NEWS #>  #> 23 #>  #> (cid:136) Calling as.data.frame.<class>() directly (for 12 atomic classes) is going to #> be formally deprecated, currently activated by setting the environment variable #> _R_CHECK_AS_DATA_FRAME_EXPLICIT_METHOD_ to non-empty, which also happens in #> R CMD check --as-cran. #>  #> BUG FIXES: #>  #> (cid:136) Hashed environments with sizes less than 5 can now grow. (Reported to R-devel by #>  #> Duncan Garmonsway.) #>  #> (cid:136) as.character(<Rd>, deparse = TRUE) failed to re-escape curly braces in LaTeX-like #>  #> text. (Reported by Hadley Wickham in PR#18324.) #>  #> (cid:136) library() now passes its lib.loc argument when requiring Depends packages; re- #>  #> ported (with (cid:28)x) in PR#18331 by Mikael Jagan. #>  #> (cid:136) R CMD Stangle: improved message about ‚ÄòOutput‚Äô (cid:28)les. #> (cid:136) head(x, n) and tail(x, n) now signal an error if n is not numeric, instead of in- #> cidentally (cid:16)working(cid:17) sometimes returning all of x. Reported and discussed by Colin #> Fay, in PR#18357. #>  #> (cid:136) The \"lm\" method for summary() now gives the correct F-statistic when the model #>  #> contains an o(cid:27)set. Reported in PR#18008. #>  #> (cid:136) C() and ‚Äòcontrasts<-‚Äò() now preserve factor level names when given a function ob- #> ject (as opposed a function name which did preserve names). Reported in PR#17616. #> (cid:136) c(a = 1, 2)[[]] no longer matches 2 but rather signals a classed error. Reported #> and analysed by Davis Vaughan in PR#18367, a duplicate of PR#18004, by Jan Meis #> et al. For consistency, NULL[[]] is also erroneous now. x[[]] <- v gives an error of #> the same class \"MissingSubscriptError\". #>  #> (cid:136) The relist() function of utils now supports NULL elements in the skeleton #>  #> (PR#15854). #>  #> (cid:136) ordered(levels = *) #>  #> analogously #> ordered=TRUE); reported (with (cid:28)x) by Achim Zeileis in PR#18389. #>  #> now works #>  #> (missing #>  #> x) #>  #> to #>  #> factor(, #>  #> (cid:136) User-de(cid:28)ned Rd macro de(cid:28)nitions can now span multiple lines, thanks to a patch #> from Duncan Murdoch. Previously, the Rd parser silently ignored everything after #> the (cid:28)rst line. #>  #> (cid:136) Plain-text help (tools::Rd2txt()) now preserves an initial blank line for text fol- #>  #> lowing description list items. #>  #> (cid:136) tools::Rd2HTML() and tools::Rd2latex() no longer split \\arguments and \\value #>  #> lists at Rd comments. #>  #> (cid:136) tools::Rd2latex() now correctly handles optional text outside \\items of argument #> lists as well as bracketed text at the beginning of sections, e.g., \\value{[NULL]}. #> (cid:136) as.character(<POSIXt>) now behaves more in line with the methods for atomic #> vectors such as numbers, and is no longer in(cid:29)uenced by options(). Ditto for #> as.character(<Date>). The as.character() method gets arguments digits and #> OutDec with defaults not depending on options(). Use of as.character(*, format #> = .) now warns. #>  #> (cid:136) Similarly, the as.character.hexmode() and *.octmode() methods also behave as #>  #> good citizen methods and back compatibility option keepStr = TRUE. #>  #> (cid:136) The as.POSIXlt(<POSIXlt>) and as.POSIXct(<POSIXct>) default methods now do #>  #> obey their tz argument, also in this case. #>  #>  #>  #> --- #>  #> 24 #>  #> NEWS #>  #> (cid:136) as.POSIXlt(<Date>) now does apply a tz (time zone) argument, as does #>  #> as.POSIXct(); partly suggested by Roland Fu(cid:255) on the R-devel mailing list. #>  #> (cid:136) as.Date.POSIXlt(x) now also works when the list components are of unequal length, #>  #> aka (cid:16)partially (cid:28)lled(cid:17) or (cid:16)ragged(cid:17). #>  #> (cid:136) expand.model.frame() looked up variables in the wrong environment when applied #>  #> to models (cid:28)tted without data. Reported in PR#18414. #>  #> (cid:136) time() now (also) uses the ts.eps = getOption(\"ts.eps\") argument and thus by #> default rounds values very close to the start (or end) of a year. Based on a proposal #> by Andre(cid:239) V. Kostyrka on R-help. #>  #> (cid:136) Printing of a factanal() result with just one factor and sort = TRUE now works #> regularly, (cid:28)xing PR#17863 by Timothy Bates, thanks to the ‚ÄòR Contributors‚Äô working #> group. #>  #> (cid:136) Printing 0-length objects of class \"factor\", \"roman\", \"hexmode\", \"octmode\", #> \"person\", \"bibentry\", or \"citation\" now prints something better, one of which #> (cid:28)xes PR#18422, reported by Benjamin Feakins. #>  #> (cid:136) Sys.timezone() queries timedatectl only if systemd is loaded; addressing a report #>  #> by Jan Gorecki in PR#17421. #> of #>  #> formula method #>  #> (cid:136) The #>  #> problems when #> environment(formula) was not the calling environment; reported with a patch #> proposal by Mao Kobayashi in PR#18439. #>  #> cor.test() #>  #> scoping #>  #> had #>  #> (cid:136) attach() of an environment with active bindings now preserves the active bindings. #>  #> Reported by Kevin Ushey in PR#18425. #>  #> (cid:136) BLAS detection now works also with system-provided libraries not available as regular #> (cid:28)les. This (cid:28)xes detection of the Accelerate framework on macOS since Big Sur. #> Reported by David Novgorodsky. #>  #> (cid:136) download.file() gives #>  #> a helpful #>  #> error message #>  #> in case #>  #> of #>  #> an invalid #>  #> download.file.method option, thanks to Colin Fay‚Äôs report in PR#18455. #>  #> (cid:136) Sporadic crashes of Rterm when using completion have been (cid:28)xed. #> (cid:136) Rprof() is now more reliable. A livelock in thread initialization with too short sam- #> pling interval has been (cid:28)xed on macOS. A deadlock in using the C runtime has been #> (cid:28)xed on Windows. A potential deadlock has been prevented on Unix. #>  #> (cid:136) Cursor placement in Rgui now works even after a (cid:28)xed-width font is selected. #> (cid:136) Mandatory options (options()) are now set on startup so that saving and restoring #>  #> them always works (PR#18372). #>  #> (cid:136) Package installation, R CMD INSTALL or install.packages(*), now parses each of the #> ‚Äò<pkg>/R/*.R‚Äô (cid:28)les individually instead of (cid:28)rst concatenating and then parse()ing #> the large resulting (cid:28)le. This allows parser or syntax errors to be diagnosed with correct #> (cid:28)le names and line numbers, thanks to Simon Dedman‚Äôs report and Bill Dunlap‚Äôs #> patch in PR#17859. #> This does require syntactically self contained R source (cid:28)les now, (cid:28)xing another inad- #> vertent bug. #>  #> (cid:136) predict.lm(<model with offset>) now (cid:28)nds the o(cid:27)set in the correct environment, #>  #> thanks to Andr√ò Gillibert‚Äôs report and patch in PR#18456. #>  #> (cid:136) getInitial(<formula>) now (cid:28)nds the selfStart model in the correct environment. #>  #> (Reported by Ivan Krylov in PR#18368.) #>  #>  #>  #> --- #>  #> NEWS #>  #> 25 #>  #> (cid:136) Fix for possible segfault when using recently-added graphics features, such as gradi- #>  #> ents, clipping paths, masks, and groups with pdf(file=NULL). #>  #> (cid:136) class(m) <- class(m) no longer changes a matrix m by adding a class attribute. #> (cid:136) packageDate(pkg) now only warns once if there is no pkg. #> (cid:136) When ts() creates a multivariate time series, \"mts\", it also inherits from \"array\" #>  #> now, and is.mts() is documented and stricter. #>  #> (cid:136) Rd2txt() now preserves line breaks of \\verb Rd content and from duplicated \\cr. #> The former also (cid:28)xes the rendering of verbatim output from Rd \\Sexpr in plain-text #> help. #>  #> (cid:136) uniroot(f, interval) should no longer wrongly converge outside the interval in #> some cases where abs(f(x)) == Inf for an x at the interval boundary, thanks to #> posts by Ben Bolker and Serguei Sokol on R-devel. #>  #> (cid:136) Vectorized alpha handling in palette functions such as in gray(), rainbow(), or #> hcl.colors() works correctly now, thanks to Achim Zeileis‚Äô report and patch in #> PR#18476. #>  #> (cid:136) Formatting and print()ing of bibentry objects has dropped the deprecated #> citation.bibtex.max argument, such that the bibtex argument‚Äôs default for #> print.bibentry() depends directly on the citation.bibtex.max option, whereas #> in format.bibentry() the option no longer applies. #>  #> (cid:136) Attempting to use a character string naming a foreign function entry point in a #> foreign function call in a package will now signal an error if the packages has called #> R_forceSymbols to specify that symbols must be used. #>  #> (cid:136) An error in table() could permanently set options(warn=2) promoting all subse- #>  #> quent warnings to errors. #>  #> (cid:136) The sigma() function gave misleading results for binary GLMs. A new method #> for objects of class \"glm\" returns the square root of the estimate of the dispersion #> parameter using the same calculation as summary.glm(). #>  #> (cid:136) bs() and ns() in the (typical) case of automatic knot construction, when some of the #> supposedly inner knots coincide with boundary knots, now moves them inside (with #> a warning), building on PR#18442 by Ben Bolker. #>  #> (cid:136) R CMD on Windows now skips the site pro(cid:28)le with ‚Äò--no-site-file‚Äô and ‚Äò--vanilla‚Äô #>  #> even when R_PROFILE is set (PR#18512, from Kevin Ushey). #>  #> CHANGES IN R 4.2.3 #>  #> C-LEVEL FACILITIES: #>  #> (cid:136) The de(cid:28)nition of DL_FUNC in ‚ÄòR_ext/Rdynload.h‚Äô has been changed to be fully C- #> compliant. This means that functions loaded via for example R_GetCCallable need #> to be cast to an appropriate type if they have any arguments. #>  #> (cid:136) .Machine has a new element sizeof.time_t to identify old systems with a 32-bit #> type and hence a limited range of date-times (and limited support for dates millions #> of years from present). #>  #> PACKAGE INSTALLATION: #>  #>  #>  #> --- #>  #> 26 #>  #> NEWS #>  #> (cid:136) (Windows) The default C++ standard had accidentally been left at C++11 when it #>  #> was changed to C++14 on Unix. #>  #> BUG FIXES: #>  #> (cid:136) As \"POSIXlt\" objects may be (cid:16)partially (cid:28)lled(cid:17) and their list components meant to be #>  #> recycled, length() now is the length of the longest component. #>  #> (cid:136) as.POSIXlt.Date() could under(cid:29)ow for dates in the far past (more than half a million #>  #> years BCE). #>  #> (cid:136) as.Date.POSIXlt(x) would return \"1970-01-01\" instead of NA in R 4.2.2, e.g., for #>  #> x <- as.POSIXlt(c(\"2019-01-30\",\"2001-1-1\")) #> x$mon <- c(0L, NA); as.Date(x) #>  #> (cid:136) R CMD check failed to apply enabled _R_CHECK_SUGGESTS_ONLY_ to examples and #>  #> vignettes (regression in R 4.2.0). #>  #> (cid:136) R CMD check did not re-build vignettes in separate processes by default (regression in #>  #> R 4.2.0). #>  #> (cid:136) Running examples from HTML documentation now restores previous knitr settings #>  #> and options (PR#18420). #>  #> (cid:136) Quartz: fonts are now located using Core Graphics API instead of deprecated ATS #> which is no longer supported in the macOS 13 SDK (PR#18426). This also addresses #> an issue where the currently used font in the Quartz device context was not correctly #> retained. #>  #> (cid:136) (Windows) Math symbols in text drawing functions are again rendered correctly #> (PR#18440). This (cid:28)xes a regression in R 4.2.1 caused by a (cid:28)x in PR#18382 which #> uncovered an issue in GraphApp due to which the symbol charset was not used with #> TT Symbol font face. #>  #> (cid:136) (Windows) Installing a package with a ‚Äòsrc/Makefile.{win,ucrt}‚Äô (cid:28)le includes #> ‚Äò~/.R/Makevars.win64‚Äô in the search for user makevars, as documented in (cid:16)R Instal- #> lation and Administration(cid:17) and done for packages with a ‚Äòsrc/Makevars.{win,ucrt}‚Äô #> (cid:28)le. #>  #> (cid:136) format(<POSIXlt_w/_unbalanced_sec>, \"....%OS<n>\") with n > 0 no longer acci- #> dentally uses the unbalanced seconds, thanks to Suharto Anggono‚Äôs report (including #> patch) in PR#18448. #>  #> (cid:136) solve.default(a, b) works around issues with some versions of LAPACK when a #>  #> contains NA or NaN values. #>  #> (cid:136) When UseMethod() cannot dispatch, it no longer segfaults producing the error mes- #> sage in case of a long class(), thanks to Joris Vankerschaver‚Äôs report (including #> patch) in PR#18447. #>  #> (cid:136) When example(foo, ..) produces graphics on an interactive device it needs to open #> itself, it now leaves devAskNewPage() unchanged even when it was FALSE, thus (cid:28)xing #> a 14 years old ‚ÄòFIXME‚Äô. #>  #> (cid:136) packageDescription() again catches errors from encoding conversions. This also #> (cid:28)xes broken packageVersion() in C locale on systems where iconv does not support #> transliteration. #>  #> CHANGES IN R 4.2.2 #>  #> NEW FEATURES: #>  #>  #>  #> --- #>  #> NEWS #>  #> 27 #>  #> (cid:136) tools::Rdiff(useDiff = TRUE) checks for the presence of an external diff com- #> mand and switches to useDiff = FALSE if none is found. This allows R CMD Rdiff to #> always work. #>  #> (cid:136) On Windows, environment variable R_LIBCURL_SSL_REVOKE_BEST_EFFORT can be #> used to switch to only ‚Äòbest-e(cid:27)ort‚Äô SSL certi(cid:28)cate revocation checks with the de- #> fault \"libcurl\" download method. This reduces security, but may be needed for #> downloads to work with MITM proxies (PR#18379). #>  #> (cid:136) (macOS) The run-time check for libraries from XQuartz for X11 and Tcl/Tk no longer #>  #> uses otool from the Apple Developer Tools (PR#18400). #>  #> (cid:136) The LATEX style for producing the PDF manuals, ‚ÄòRd.sty‚Äô, now loads the standard #> ‚Äòamsmath‚Äô, ‚Äòamsfonts‚Äô and ‚Äòamssymb‚Äô packages for greater coverage of math commands #> in the Rd \\eqn and \\deqn macros. The \\mathscr LATEX command is also provided #> (via the ‚Äòmathrsfs‚Äô package, if available, or the ‚Äòamsfonts‚Äô bundle otherwise), ful(cid:28)ll- #> ing the wish of PR#18398. #>  #> (cid:136) (Windows) The default format of readClipboard() and writeClipboard() has been #>  #> changed to 13 (CF_UNICODETEXT). #>  #> INSTALLATION on a UNIX-ALIKE: #>  #> (cid:136) The PDF manuals (if built) can be compacted by the new target make compact-pdf #>  #> (at the top level or in directory ‚Äòdoc/manual‚Äô). #>  #> (cid:136) There is now configure support for LLVM clang 15 on Linux, which defaults to #>  #> position-independent (PIE) executables whereas gfortran does not. #>  #> (cid:136) Many small changes to ease compilation (and suppress warnings) with LLVM clang #>  #> 15. #>  #> BUG FIXES: #>  #> (cid:136) Rscript -e would fail if ‚Äòstdin‚Äô were closed (Reported by Henrik Bengtsson.) #> (cid:136) qt(*, log.p=TRUE) in outer tails no longer produces NaN in its (cid:28)nal steps, thus (cid:28)xing #>  #> PR#18360. #>  #> (cid:136) tools::Rd2latex() now escapes hashes and ampersands when writing URLs, (cid:28)xing #>  #> LaTeX errors with such URLs in \\tabular. #>  #> (cid:136) When isGeneric(f, fdef=*) is used with mismatching names, the warning is better #>  #> understandable; reported (with (cid:28)x) in PR#18370 by Gabe Becker. #>  #> (cid:136) poly(x, n) now works again (and is now documented) when x is a \"Date\" or #> \"POSIXct\" object, or of another class while ful(cid:28)lling mode(x) == \"numeric\". This #> also enables poly(x, *, raw=TRUE) for such variables. Reported by Michael Chirico #> to R-devel. #>  #> (cid:136) write.table(), write.csv() and write.csv2() restore their numerical precision #>  #> (internal equivalent of digits = 15) after an interrupt (PR#18384). #> (cid:136) One can now read also byte FF from a clipboard connection (PR#18385). #> (cid:136) source(\"\") and source(character()) now give more helpful error messages. #> (cid:136) R CMD check --as-cran set _R_CHECK_TIMINGS_ too late to have the intended e(cid:27)ect. #> (cid:136) as.POSIXlt(x) now also works with very large dates x, (cid:28)xing PR#18401 reported #>  #> by Hannes M(cid:252)hleisen. #>  #> (cid:136) Files can now be extracted even from very large zip archives (PR#18390, thanks to #>  #> Martin Jakt). #>  #>  #>  #> --- #>  #> 28 #>  #> NEWS #>  #> (cid:136) Non-(cid:28)nite objects of class \"POSIXlt\" are now correctly coerced to classes \"Date\" and #>  #> \"POSIXct\"; following up on the extension to format() them correctly. #>  #> (cid:136) Added methods for is.finite(), is.infinite() and is.nan() for \"POSIXlt\" date- #>  #> time objects. #>  #> BUG FIXES on Windows: #>  #> (cid:136) Non-ASCII characters are now properly displayed on Windows in windows created #> using GraphApp via e.g. winDialogString thanks to a workaround for an at least #> surprising Windows behavior with UTF-8 as the system encoding (PR#18382). #> (cid:136) Find and replace operations work again in the script editor in Rgui on Windows. #> (cid:136) Computation of window size based on requested client size in GraphApp when running #> in a multi-byte locale on Windows has been (cid:28)xed (regression in R 4.2.0 for users of #> systems where R 4.1 used a single-byte locale). Rgui again respects the number of #> console rows and columns given in ‚ÄòRconsole‚Äô (cid:28)le. #>  #> (cid:136) Rterm support for Alt+xxx sequences has been (cid:28)xed to produce the correspond- #> ing character (only) once. This (cid:28)xes pasting text with tilde on Italian keyboard #> (PR#18391). #>  #> CHANGES IN R 4.2.1 #>  #> NEW FEATURES: #>  #> (cid:136) New function utils::findCRANmirror() to (cid:28)nd out if a CRAN mirror has been #> selected, otherwise fallback to the main site. This behaves in the same way as #> tools::CRAN_package_db() and is intended for packages wishing to access CRAN #> for purposes other than installing packages. #> The need for this was shown by a day when the main CRAN website was o(cid:31)ine and #> a dozen or so packages which had its URL hardcoded failed their checks. #>  #> INSTALLATION on a UNIX-ALIKE: #>  #> (cid:136) The libraries searched for by ‚Äò--with-blas‚Äô (without a value) now include BLIS (after #> OpenBLAS but before ATLAS). And on macOS, the Accelerate framework (after #> ATLAS). (This is patterned after the AX_BLAS macro from the Autoconf Archive.) #>  #> (cid:136) The included LAPACK sources have been updated to 3.10.1. #>  #> UTILITIES: #>  #> (cid:136) The (full path to) the command tidy to be used for HTML validation can be set by #>  #> environment variable R_TIDYCMD. #>  #> (cid:136) Setting environment variable _R_CHECK_RD_VALIDATE_RD2HTML_ to a false value will #> override R CMD check --as-cran and turn o(cid:27) HTML validation. This provides a way #> to circumvent a problematic tidy. #> The 2006 version that ships with macOS is always skipped. #>  #> C-LEVEL FACILITIES: #>  #> (cid:136) The undocumented legacy declarations of Sint, Sfloat, SINT_MAX and SINT_MIN in #>  #> header ‚ÄòR.h‚Äô are deprecated. #>  #>  #>  #> --- #>  #> NEWS #>  #> BUG FIXES: #>  #> 29 #>  #> (cid:136) fisher.test(d) no longer segfaults for (cid:16)large(cid:17) d; (cid:28)xing PR#18336 by prevent- #>  #> ing/detecting an integer over(cid:29)ow reliably. #>  #> (cid:136) tar(., files=*) now produces correctly the warning about invalid UID or GID of #>  #> (cid:28)les, (cid:28)xing PR#18344, reported by Martin Morgan. #>  #> (cid:136) tk_choose.files() with multi = FALSE misbehaved on paths containing spaces #>  #> (PR#18334) (regression introduced in R 4.0.0). #>  #> (cid:136) sort(x, partial = ind, *) now works correctly notably for the non-default na.last #>  #> = FALSE or TRUE, (cid:28)xing PR#18335 reported by James Edwards. #>  #> (cid:136) Environment variable _R_CHECK_XREFS_REPOSITORIES_ is only used for checking #> ‚Äò.Rd‚Äô cross-references in R CMD check (as documented) and not for other uses looking #> for a CRAN mirror. #> search #>  #> now uses #> getOption(\"repos\") if that speci(cid:28)es a CRAN mirror, even when it does not #> also specify all three Bioconductor repositories (as was previously required). #>  #> a CRAN mirror when #>  #> packages #>  #> checking #>  #> (cid:136) The #>  #> for #>  #> (cid:136) The html code generated by tools::Rd2HTML() has been improved to pass tidy #>  #> 5.8.0. #>  #> BUG FIXES on Windows: #>  #> (cid:136) Writing to a clipboard connection works again, (cid:28)xing a regression in R 4.2.0 #> (PR#18332). Re-using a closed clipboard connection no longer issues a spurious #> warning about an ignored encoding argument. #>  #> (cid:136) C function getlocale no longer attempts to query an unsupported category from the #> OS, even when requested at R level, which may cause crashes when R 4.2.0 (which #> uses UCRT) is embedded (reported by Kevin Ushey). #>  #> (cid:136) Accent keys now work in GraphApp Unicode windows, which are used by Rgui when- #> ever running in a multibyte locale (so also in UTF-8, hence (cid:28)xing a regression in R #> 4.2.0 for users of systems where R 4.1 used a single-byte locale). #> (cid:136) Completion in Rgui now works also with non-ASCII characters. #> (cid:136) Rgui no longer truncates usage information with ‚Äò--help‚Äô. #> (cid:136) Text injection from external applications via SendInput now works in GraphApp #> Unicode windows, (cid:28)xing a regression in R 4.2.0 for Rgui users of systems where R 4.1 #> used a single-byte locale but R 4.2.0 uses UTF-8. #>  #> (cid:136) Performance of txtProgressBar() in Rgui when running in a multi-byte locale has #> been improved ((cid:28)xing a performance regression in R 4.2.0 for users of systems where #> R 4.1 used a single-byte locale). #>  #> (cid:136) The script editor in Rgui now works also on systems using UTF-8 as the native #> encoding. Users of the script editor have to convert their scripts with non-ASCII #> characters to UTF-8 before reading them in R 4.2.1 or newer (on recent Windows #> where UTF-8 is used). This (cid:28)xes a regression in R 4.2.0, which prevented some #> operations with scripts when they contained non-ASCII characters. #>  #> CHANGES IN R 4.2.0 #>  #> SIGNIFICANT USER-VISIBLE CHANGES: #>  #>  #>  #> --- #>  #> 30 #>  #> NEWS #>  #> (cid:136) The formula method of aggregate() now matches the generic in naming its (cid:28)rst #>  #> argument x (resolving PR#18299 by Thomas Soeiro). #> This means that calling aggregate() with a formula as a named (cid:28)rst argument #> requires name formula in earlier versions of R and name x now, so portable code #> should not name the argument (code in many packages did). #>  #> (cid:136) Calling && or || with either argument of length greater than one now gives a warning #>  #> (which it is intended will become an error). #>  #> (cid:136) Calling if() or while() with a condition of #>  #> gives an error rather than a warning. #> _R_CHECK_LENGTH_1_CONDITION_ no longer has any e(cid:27)ect. #>  #> than one #> Consequently, environment variable #>  #> length greater #>  #> (cid:136) Windows users should consult the WINDOWS section below for some profound #>  #> changes including #>  #> (cid:21) Support for 32-bit builds has been dropped. #> (cid:21) UTF-8 locales are used where available. #> (cid:21) The default locations for the R installation and personal library folder have been #>  #> changed. #>  #> Thanks to Tomas Kalibera for months of work on the Windows port for this release. #>  #> NEW FEATURES: #>  #> (cid:136) matrix(x, n, m) now warns in more cases where length(x) di(cid:27)ers from n * m, as #> suggested by Abby Spurdle and Wolfgang Huber in Feb 2021 on the R-devel mailing #> list. #> This warning can be turned into an error by setting environment variable #> _R_CHECK_MATRIX_DATA_ to ‚ÄòTRUE‚Äô: R CMD check --as-cran does so unless it is al- #> ready set. #>  #> (cid:136) Function file_test() in package utils gains tests for symlinks, readability and #>  #> writability. #>  #> (cid:136) capabilities(\"libxml\") is now false. #>  #> The description of capabilities(\"http/ftp\") now re(cid:29)ects that it refers to the #> default method, no longer the internal one. #>  #> (cid:136) simplify2array() gains an except argument for controlling the exceptions used by #>  #> sapply(). #>  #> (cid:136) Environment variables R_LIBS_USER and R_LIBS_SITE are both now set to the R #> system default if unset or empty, and can be set to NULL to indicate an empty list of #> user or site library directories. #>  #> (cid:136) The warning for axis()(-like) calls in cases of relatively small ranges (typically #> in log-scale situations) is slightly improved and suppressed from explicit calls to #> .axisPars() as has always been the intention. #>  #> (cid:136) The contrasts setter function ‚Äòcontrasts<-‚Äò gains an explicit default how.many = #>  #> NULL rather than just using missing(how.many). #> (cid:136) grid.pretty() gains a new optional argument n = 5. #> (cid:136) There is a new function .pretty() with option bounds as a technical-utility version #> of pretty(). It and pretty() gain a new argument f.min with a better than back- #> compatible default. #>  #> (cid:136) Function grDevices::axisTicks() and related functions such as graphics::axis() #> work better, notably for the log scale; partly because of the pretty() improvements, #> but also because care is taken e.g., when ylim is (cid:28)nite but diff(ylim) is in(cid:28)nite. #>  #>  #>  #> --- #>  #> NEWS #>  #> 31 #>  #> (cid:136) nclass.FD() gains a digits option. #> (cid:136) The R Mathlib internal C function bd0() (called indirectly from a dozen probability #> density and distribution functions such as dpois(), dbinom(), dgamma(), pgamma() #> etc) has been complemented by a more sophisticated and (mostly) more accurate C #> function ebd0(), currently called only by internal dpois_raw() improving accuracy #> for R level dpois() and potentially others calling it such as dnbinom(), dgamma() or #> pgamma(). (Thanks to Morten Welinder‚Äôs PR#15628.) #>  #> (cid:136) write.ftable() gains sep = \" \" argument as suggested by Thomas Soeiro. #> (cid:136) The names of the locale categories supported by R‚Äôs Sys.getlocale() and #> Sys.setlocale() are now provided by variable .LC.categories in the base names- #> pace. #>  #> (cid:136) The Date and POSIXt methods for hist() and the histogram method for plot() now #> also use the new default col = \"lightgray\" in consistency with the corresponding #> change to hist()‚Äôs default for R 4.0.0. #>  #> (cid:136) hist.default() gains new fuzz argument, and the histogram plot method no longer #>  #> uses fractional axis ticks when displaying counts (\"Frequency\"). #>  #> (cid:136) mapply() and hence Map() now also obey the (cid:16)max-or-0-if-any(cid:17) recycling rule, such #>  #> that, e.g., Map(‚Äò+‚Äò, 1:3, 1[0]) is valid now. #>  #> (cid:136) as.character(<obj>) for \"hexmode\" or \"octmode\" objects now ful(cid:28)ls the important #>  #> basic rule as.character(x)[j] === as.character(x[j]). #>  #> (cid:136) The set utility functions, notably intersect() have been tweaked to be more con- #> sistent and symmetric in their two set arguments, also preserving a common mode. #>  #> (cid:136) substr(ch, start,end) <- new now e.g., #>  #> preserves #>  #> names(ch); #>  #> ditto #>  #> for #>  #> substring(), thanks to a patch from Brodie Gaslam. #>  #> (cid:136) plot(<lm>) gains a extend.ylim.f argument, in partial response to PR#15285; #> further PR#17784 is (cid:28)xed thanks to several contributors and a patch by Elin War- #> ing. The Cook‚Äôs dist contours get customizable via cook.col and cook.lty with #> a di(cid:27)erent default color and their legend is nicer by default and customizable via #> cook.legendChanges. #>  #> (cid:136) Attempting to subset an object that is not subsettable now signals an error of class #> notSubsettableError. The non-subsettable object is contained in the object (cid:28)eld #> of the error condition. #> (cid:136) Subscript-out-of-bounds #>  #> now signaled #>  #> errors #>  #> errors #>  #> class #>  #> are #>  #> as #>  #> of #>  #> subscriptOutOfBoundsError. #>  #> (cid:136) Stack-over(cid:29)ow errors #>  #> are now signaled as #>  #> errors #>  #> inheriting #>  #> from class #>  #> stackOverflowError. See ?stackOverflowError for more details. #>  #> (cid:136) New partly experimental Sys.setLanguage() utility, solving the main problem of #>  #> PR#18055. #>  #> (cid:136) gettext() and gettextf() get a new option trim = TRUE which when set to false #> allows translations for strings such as \"Execution halted\\n\" typical for C code. #> (cid:136) An experimental implementation of hash tables is now available. See ?hashtab for #>  #> more details. #>  #> (cid:136) identical() gains a extptr.as.ref argument for requesting that external pointer #>  #> objects be compared as reference objects. #>  #> (cid:136) reorder() gets an argument decreasing which it passes to sort() for level creation; #>  #> based on the wish and patch by Thomas Soeiro in PR#18243. #>  #>  #>  #> --- #>  #> 32 #>  #> NEWS #>  #> (cid:136) as.vector() gains a data.frame method which returns a simple named list, #> also clearing a long standing ‚ÄòFIXME‚Äô to enable as.vector(<data.frame>, #> mode=\"list\"). This breaks code relying on as.vector(<data.frame>) to return #> the unchanged data frame. #>  #> (cid:136) legend() is now vectorized for arguments cex, x.intersp, and text.width. The #> latter can now also be speci(cid:28)ed as a vector (one element for each column of the legend) #> or as NA for computing a proper column wise maximum value of strwidth(legend). #> The argument y.intersp can be speci(cid:28)ed as a vector with one entry for each row of #> the legend. #> legend() also gains new arguments title.cex and title.font. Thanks to Swetlana #> Herbrandt. #>  #> (cid:136) Deparsing no longer remaps attribute names dim, dimnames, levels, names and tsp #>  #> to historical S-compatible names (which structure() maps back). #>  #> (cid:136) sample() and sample.int() have additional sanity checks on their size and n ar- #>  #> guments. #> all.equal.numeric() gains a sanity check on its tolerance argument (cid:21) calling #> all.equal(a, b, c) for three numeric vectors is a surprisingly common error. #> mean(na.rm =), #> boxplot(), #> contour(drawlabels =), polygon(border =) and methods::is(class2 =) have #> more robust sanity checks on their arguments. #> R CMD Rd2pdf (used by R CMD check) has a more robust sanity check on the format #> of \\alias{} commands. #>  #> barplot(legend.text =), #>  #> rank(na.last =), #>  #> (cid:136) psigamma(x, deriv) for negative x now also works for deriv = 4 and 5; their under- #>  #> lying C level dpsifn() is documented in ‚ÄòWriting R Extensions‚Äô. #> (cid:136) The HTML help system now uses HTML5 (wish of PR#18149). #> (cid:136) ks.test() now provides exact p-values also with ties and MC p-values in the two- #>  #> sample (Smirnov) case. By Torsten Hothorn. #>  #> (cid:136) ks.test() gains a formula interface, with y ~ 1 for the one-sample (Kolmogorov) test #> and y ~ group for the two-sample (Smirnov) test. Contributed by Torsten Hothorn. #> (cid:136) The return value from ks.test() now has class c(\"ks.test\", \"htest\") (cid:21) packages #>  #> using try() need to take care to use inherits() and not == on the class. #>  #> (cid:136) New functions psmirnov(), qsmirnov() and rsmirnov() in package stats implement- #> ing the asymptotic and exact distributions of the two-sample Smirnov statistic. #> (cid:136) iconv() now allows sub = \"c99\" to use C99-style escapes for UTF-8 inputs which #>  #> cannot be converted to encoding to. #>  #> (cid:136) In a forward pipe |> expression it is now possible to use a named argument with #> the placeholder _ in the rhs call to specify where the lhs is to be inserted. The #> placeholder can only appear once on the rhs. #>  #> (cid:136) The included LAPACK sources have been updated to version 3.10.0, except for the #> four Fortran 77 routines which 3.10.0 has re-implemented in Fortran 90 (where the #> older versions have been retained as the R build process does not support Fortran #> 90). #>  #> (cid:136) path.expand() and most other uses of tilde expansion now warn if a path would be #> too long if expanded. (An exception is file.exists(), which silently returns false.) #> (cid:136) trunc(<Date>, *) now supports units = \"months\" or \"years\" for consistency with #>  #> the POSIXt method, thanks to Dirk Eddelbuettel‚Äôs proposal in PR#18099. #>  #>  #>  #> --- #>  #> NEWS #>  #> 33 #>  #> (cid:136) list2DF() now checks that its arguments are of the same length, rather than use #>  #> recycling. #>  #> (cid:136) The HTML help system has several new features: LaTeX-like math can be typeset #> using either KaTeX or MathJax, usage and example code is highlighted using Prism, #> and for dynamic help the output of examples and demos can be shown within the #> browser if the knitr package is installed. These features can be disabled by setting #> the environment variable _R_HELP_ENABLE_ENHANCED_HTML_ to a false value. #>  #> GRAPHICS: #>  #> (cid:136) The graphics engine version, R_GE_version, has been bumped to 15 and so packages #>  #> that provide graphics devices should be reinstalled. #>  #> (cid:136) The grid package now allows the user to specify a (cid:16)vector(cid:17) of pattern (cid:28)lls. The fill #> argument to gpar() accepts a list of gradients and/or patterns and the functions #> linearGradient(), radialGradient(), and pattern() have a new group argument. #> Points grobs (data symbols) can now also have a pattern (cid:28)ll. #> The grobCoords() function now returns a more informative and complex result. #> (cid:136) The grid package has new functions for drawing isolated groups: grid.group(), #> grid.define(), and grid.use(). These functions add compositing operators and #> a(cid:30)ne transformations to R‚Äôs graphics capabilities. #> The grid package also has new functions #> grid.stroke(), grid.fill(), and grid.fillStroke(). #> A new function as.path() allows the user to specify the (cid:28)ll rule for a path that #> is to be used for clipping, stroking, or (cid:28)lling; available options are \"winding\" and #> \"evenodd\". A new function as.mask() allows the user to specify the type of a mask; #> available options are \"alpha\" and \"luminance\". #> These new features are only supported so far (at most) on the Cairo-based graphics #> devices and on the pdf() device. #>  #> stroking and (cid:28)lling paths: #>  #> for #>  #> (cid:136) dev.capabilities() reports on device support for the new features. #> (cid:136) par() now warns about unnamed non-character arguments to prevent misuse such #>  #> as {usr <- par(\"usr\"); par(usr)}. #>  #> WINDOWS: #>  #> (cid:136) R uses UTF-8 as the native encoding on recent Windows systems (at least Windows #> 10 version 1903, Windows Server 2022 or Windows Server 1903). As a part of this #> change, R uses UCRT as the C runtime. UCRT should be installed manually on #> systems older than Windows 10 or Windows Server 2016 before installing R. #>  #> (cid:136) The default personal library on Windows, folder ‚ÄòR\\win-library\\x.y‚Äô where ‚Äòx.y‚Äô #> stands for R release ‚Äòx.y.z‚Äô, is now a subdirectory of Local Application Data di- #> rectory (usually a hidden directory ‚ÄòC:\\Users\\username\\AppData\\Local‚Äô). Use #> shell.exec(.libPaths()[1]) from R to open the personal library in Explorer when #> it is (cid:28)rst in the list (PR#17842). #>  #> (cid:136) R uses a new 64-bit Tcl/Tk bundle. The previous 32-bit/64-bit bundle had a di(cid:27)erent #>  #> layout and can no longer be used. #>  #> (cid:136) Make (cid:28)les and installer scripts for Windows have been tailored to ‚ÄòRtools42‚Äô, the #>  #> newly recommended 64-bit gcc 10.3 MinGW-W64 UCRT toolchain. #>  #> (cid:136) ‚ÄòRtools42‚Äô by default uses the Windows security features ASLR and DEP; hence #>  #> CRAN builds of R and packages also do. #>  #>  #>  #> --- #>  #> 34 #>  #> NEWS #>  #> (cid:136) R now supports (cid:28)les ‚ÄòMakevars.ucrt‚Äô, #>  #> ‚Äòconfigure.ucrt‚Äô and #> ‚Äòcleanup.ucrt‚Äô in packages, which are used in preference to the ‚Äò.win‚Äô variants. This #> allows keeping the ‚Äò.win‚Äô (cid:28)les around to support older versions of R. This feature #> will be removed in the future once support for older versions of R would no longer be #> needed. #>  #> ‚ÄòMakefile.ucrt‚Äô, #>  #> (cid:136) R.version gains a new (cid:28)eld crt (only on Windows) to denote the C runtime. The #>  #> value is \"ucrt\". #>  #> (cid:136) On Windows, download.file(method = \"auto\") and url(method = \"default\") #>  #> now follow Unix in using \"libcurl\" for all except ‚Äòfile://‚Äô URIs. #>  #> (cid:136) ‚ÄòRtools42‚Äô includes an unpatched Msys2 build of GNU tar. Paths including drive #> letters can be made to work by adding ‚Äò--force-local‚Äô to environment variable #> TAR_OPTIONS. (‚ÄòRtools40‚Äô and earlier included a patched version which defaulted to #> this option.) #>  #> (cid:136) Installer builds of R automatically (cid:28)nd the ‚ÄòRtools42‚Äô software collection as well as #>  #> the compiler toolchain. No PATH setting is required from the user. #>  #> (cid:136) The default installation directory of R for a user-only installation has been #> changed to the User Program Files directory (usually a hidden directory #> ‚ÄòC:\\Users\\username\\AppData\\Local\\Programs‚Äô) to follow Windows conventions. #> Use shell.exec(R.home()) from R to open the R installation directory in Explorer #> (PR#17842). #>  #> (cid:136) R now supports installation-time patching of packages. Patches may be installed #> from a supplied URL or a local directory or disabled. Patches are included into the #> installed packages for reference. This experimental feature may be removed in the #> future. #>  #> (cid:136) libcurl is now required for building from source. #> (cid:136) The clipboard connection now works also with text in other than the current native #> encoding (PR#18267, with Hiroaki Yutani). Text is always pasted to the clipboard #> in UTF16-LE and the encoding argument is ignored. #>  #> (cid:136) The internal case-changing functions are now used by default on Windows (cid:21) this #> circumvents problems (for example with E acute) of the UCRT Windows‚Äô runtime. #> (cid:136) R on Windows now uses the system memory allocator. Doug Lea‚Äôs allocator was #> used since R 1.2.0 to mitigate performance limitations seen with system allocators on #> earlier versions of Windows. #>  #> (cid:136) memory.limit() and memory.size() are now stubs on Windows (as on Unix-alikes). #> (cid:136) Applications embedding R on Windows can now use additional callbacks, which have #>  #> so far only been available only on Unix (PR#18286). #>  #> INSTALLATION: #>  #> (cid:136) Facilities for accessing ‚Äòftp://‚Äô sites are no longer tested (except pro tem for #>  #> curlGetHeaders()) as modern browsers have removed support. #>  #> (cid:136) R can now be built with ‚ÄòDEFS = -DSTRICT_R_HEADERS‚Äô . #>  #> PACKAGE INSTALLATION: #>  #> (cid:136) R CMD INSTALL no longer tangles vignettes. This completes an R CMD build change in #> R 3.0.0 and a(cid:27)ects packages built before R 3.0.2. Such packages should be re-made #> with R CMD build to have the tangled R code of vignettes shipped with the tarball. #>  #>  #>  #> --- #>  #> NEWS #>  #> 35 #>  #> (cid:136) USE_FC_LEN_T will become the default: this uses the correct prototypes for Fortran #> BLAS/LAPACK routines called from C/C++, and requires adjustment of most such #> calls (cid:21) see ‚ÄòWriting R Extensions‚Äô (cid:159)6.6.1. (This has been supported since R 3.6.2.) #> (cid:136) Package installation speed for packages installed with keep.source has been im- #>  #> proved. This resolve the issue reported by Ofek Shilon in PR#18236. #>  #> UTILITIES: #>  #> (cid:136) R CMD check can optionally report (cid:28)les/directories left behind in home, ‚Äò/tmp‚Äô (even #> though TMPDIR is set) and other directories. See the (cid:16)R Internals(cid:17) manual for details. #> (cid:136) R CMD check now reports byte-compilation errors during installation. These are not #>  #> usually fatal but may result in parts of the package not being byte-compiled. #>  #> (cid:136) _R_CHECK_DEPENDS_ONLY_ can be applied selectively to examples, tests and/or vi- #>  #> gnettes in R CMD check: see the (cid:16)R Internals(cid:17) manual. #>  #> (cid:136) _R_CHECK_SRC_MINUS_W_IMPLICIT_ now defaults to true: recent versions of Apple #> clang on macOS have made implicit function declarations in C into a compilation #> error. #>  #> (cid:136) R CMD check --as-cran makes use of the environment variable AUTORECONF. See the #>  #> (cid:16)R Internals(cid:17) manual (cid:159)8 for further details. #>  #> (cid:136) R CMD check --use-valgrind also uses valgrind when re-building vignettes as some #> non-Sweave vignettes unhelpfully comment out all their code when R CMD check runs #> vignettes. #>  #> (cid:136) Errors in re-building vignettes (unless there are LaTeX errors) are reported by R CMD #> check as ‚ÄòERROR‚Äô rather than ‚ÄòWARNING‚Äô when running vignettes has been skipped (as #> it frequently is in CRAN checks and by ‚Äò--as-cran‚Äô). #>  #> (cid:136) R CMD Rd2pdf gains a ‚Äò--quiet‚Äô option that is used by R CMD build when building #>  #> the PDF package manual. #>  #> (cid:136) R CMD Rd2pdf now always runs LaTeX in batch mode, consistent with Texinfo ‚â• 6.7. #>  #> The ‚Äò--batch‚Äô option is ignored. #>  #> (cid:136) R CMD build and R CMD check now include the Rd (cid:28)le name and line numbers in the #>  #> error message of an \\Sexpr evaluation failure. #>  #> (cid:136) For packages using the \\doi Rd macro (now an install-time \\Sexpr) but no other #> dynamic Rd content, R CMD build now produces a smaller tarball and is considerably #> faster (cid:21) skipping temporary package installation. #>  #> (cid:136) R CMD check can optionally (but included in ‚Äò--as-cran‚Äô) validate the HTML pro- #> duced from the packages ‚Äò.Rd‚Äô (cid:28)les. See https://blog.r-project.org/2022/04/ #> 08/enhancements-to-html-documentation/: this needs a fairly recent version of #> HTML Tidy to be available. #>  #> C-LEVEL FACILITIES: #>  #> (cid:136) The non-API header ‚ÄòR_ext/R-ftp-http.h‚Äô is no longer provided, as the entry points #>  #> it covered are now all defunct. #>  #> (cid:136) A number of non-API declarations and macro de(cid:28)nitions have been moved from the #> installed header ‚ÄòRinternals.h‚Äô to the internal header ‚ÄòDefn.h‚Äô. Packages that only #> use entry points and de(cid:28)nitions documented to be part of the API as speci(cid:28)ed in #> ‚ÄòWriting R Extensions‚Äô (cid:159)6 should not be a(cid:27)ected. #>  #>  #>  #> --- #>  #> 36 #>  #> NEWS #>  #> (cid:136) The macro USE_RINTERNALS no longer has any e(cid:27)ect when compiling package code. #> Packages which also use R_NO_REMAP will need to ensure that the remapped names #> are used for calls to API functions that were formerly also made available as macros. #> (cid:136) The deprecated legacy S-compatibility macros PROBLEM, MESSAGE, ERROR, WARN, #> WARNING, RECOVER, . . . are no longer de(cid:28)ned in ‚ÄòR_ext/RS.h‚Äô (included by ‚ÄòR.h‚Äô). Re- #> place these by calls to Rf_error and Rf_warning (de(cid:28)ned in header ‚ÄòR_ext/Error.h‚Äô #> included by ‚ÄòR.h‚Äô). #> Header ‚ÄòR_ext/RS.h‚Äô no longer includes ‚ÄòR_ext/Error.h‚Äô. #>  #> (cid:136) Header ‚ÄòR_ext/Constants.h‚Äô (included by ‚ÄòR.h‚Äô) when included from C++ now in- #> cludes the C++ header ‚Äòcfloat‚Äô rather than the C header ‚Äòfloat.h‚Äô (now possible #> as C++11 is required). #>  #> (cid:136) The legacy S-compatibility macros DOUBLE_* in ‚ÄòR_ext/Constants.h‚Äô (included by #>  #> ‚ÄòR.h‚Äô) are deprecated. #>  #> (cid:136) The deprecated S-compatibility macros SINGLE_* in ‚ÄòR_ext/Constants.h‚Äô (included #>  #> by ‚ÄòR.h‚Äô) have been removed. #>  #> (cid:136) R_Calloc, R_Free and R_Realloc are preferred to their unpre(cid:28)xed forms and error #> messages now use the pre(cid:28)x. These forms were introduced in R 3.4.0 and are available #> even when STRICT_R_HEADERS is de(cid:28)ned. #>  #> (cid:136) rmultinom has been documented in ‚ÄòWriting R Extensions‚Äô (cid:159)6 so is now part of the #>  #> R API. #>  #> (cid:136) Similarly, Rtanpi, called from R level tanpi() is now part of the R API. #> (cid:136) The long-deprecated, undocumented and non-API entry point call_R is no longer #>  #> declared in ‚ÄòR_ext/RS.h‚Äô (included by ‚ÄòR.h‚Äô). #>  #> (cid:136) The header ‚ÄòS.h‚Äô which has been unsupported since Jan 2016 has been removed. Use #>  #> ‚ÄòR.h‚Äô instead. #>  #> DEPRECATED AND DEFUNCT: #>  #> (cid:136) The (non-default and deprecated) method = \"internal\" for download.file() and #> url() no longer supports ‚Äòhttp://‚Äô nor ‚Äòftp://‚Äô URIs. (It is used only for ‚Äòfile://‚Äô #> URIs.) #> On Windows, download.file(method = \"wininet\") no longer supports ‚Äòftp://‚Äô #> URIs. (It is no longer the default method, which is \"libcurl\" and does.) #> On Windows, the deprecated method = \"wininet\" now gives a warning for ‚Äòhttp://‚Äô #> and ‚Äòhttps://‚Äô URIs for both download.file() and url(). #> (It is no longer the #> default method.) #>  #> (cid:136) On Windows, the command-line option ‚Äò--max-mem-size‚Äô and environment variable #> R_MAX_MEM_SIZE are defunct. The memory allocation limit was important for 32-bit #> builds, but these are no longer supported. #>  #> (cid:136) default.stringsAsFactors() is now formally deprecated, where that was only men- #>  #> tioned on its regular help page, previously. So it now gives a warning if called. #>  #> (cid:136) unix.time() is defunct now; it had been deprecated since R 3.4.0. #>  #> BUG FIXES: #>  #> (cid:136) Setting digits = 0 in format(), print.default() (and hence typically print()) or #> options() is again invalid. Its behaviour was platform-dependent, and it is unclear #> what (cid:16)zero signi(cid:28)cant digits(cid:17) should mean (PR#18098). #>  #>  #>  #> --- #>  #> NEWS #>  #> 37 #>  #> (cid:136) Messages from C code in the ‚Äòcairo‚Äô section of package grDevices are now also o(cid:27)ered #>  #> for translation, thanks to Michael Chirico‚Äôs PR#18123. #>  #> (cid:136) mean(x) with (cid:28)nite x now is (cid:28)nite also without \"long.double\" capability. #> (cid:136) R CMD Rd2pdf no longer leaves an empty build directory behind when it aborts due #>  #> to an already existing output (cid:28)le. (Thanks to Sebastian Meyer‚Äôs PR#18141.) #>  #> (cid:136) density(x, weights = w, na.rm = TRUE) when anyNA(x) is true, now removes #> weights (cid:16)in parallel(cid:17) to x, (cid:28)xing PR#18151, reported by Matthias Gondan. Addi- #> tionally, it gets a subdensity option. #>  #> (cid:136) Conversion of \\Sexpr[]{<expR>} to LaTeX or HTML no longer produces long blocks #> of empty lines when <expR> itself contains several lines all producing empty output. #> Thanks to a report and patch by Ivan Krylov posted to R-devel. #>  #> (cid:136) R CMD build no longer fails if a package vignette uses child documents and ‚Äòinst/doc‚Äô #>  #> exists. (Thanks to Sebastian Meyer‚Äôs PR#18156.) #>  #> (cid:136) When an R documentation (‚Äòhelp‚Äô source) (cid:28)le ‚Äòman/foo.Rd‚Äô #>  #> in a package has #> \\donttest{..} examples with a syntax error, it is now signalled as ERROR and #> with correct line numbers relating to the ‚Äò*-Ex.R‚Äô (cid:28)le, thanks to Duncan Murdoch #> and Sebastian Meyer‚Äôs reports and patch proposals in PR#17501. #>  #> (cid:136) Improved determination of the correct translation domain in non-base packages, ad- #> dressing the combination of PR#18092 and PR#17998 (#c6) with reports and aug- #> mented patch #2904 by Suharto Anggono. #> Note that \"R-base\" is no longer the default domain e.g., #> for top-level calls to #> gettext(); rather translation needs explicit domain = * speci(cid:28)cation in such cases. #> (cid:136) identical(attrib.as.set=FALSE) now works correctly with data frames with de- #>  #> fault row names (Thanks to Charlie Gao‚Äôs PR#18179). #>  #> (cid:136) txtProgressBar() now enforces a non-zero width for argument char, without which #>  #> no progress can be visible. #>  #> (cid:136) dimnames(table(d)) is more consistent in the case where d is a list with a single #>  #> component, thanks to Thomas Soeiro‚Äôs report to R-devel. #> Further, table(d1, d2) now gives an error when d1 and d2 are data frames as sug- #> gested by Thomas in PR#18224. #>  #> (cid:136) Fix for drawing semi-transparent lines and (cid:28)lls on the native Windows graphics device #> (PR#18219 and PR#16694). Thanks to Nick Ray for helpful diagnosis on Bugzilla. #> (cid:136) The deparser now wraps sub-expressions such as if(A) .. with parentheses when #> needed; thanks to Duncan Murdoch‚Äôs PR#18232 and Lionel Henry‚Äôs patches there. #> (cid:136) remove.packages() no longer tries to uninstall Priority: base packages, thanks to #>  #> a report and suggestions by Colin Fay in PR#18227. #>  #> (cid:136) win.metafile() now has xpinch and ypinch arguments so that the user can override #>  #> Windows‚Äô (potentially wrong) guess at device dimensions. #>  #> (cid:136) x[i] and x[[i]] for non-integer i should now behave in all cases as always docu- #> mented: the index used is equivalent to as.integer(i) unless that would over(cid:29)ow #> where trunc(i) is used instead; thanks to Suharto Anggono‚Äôs report and patch pro- #> posals in PR#17977. #>  #> (cid:136) asOneSidedFormula() now associates the resulting formula with the global environ- #>  #> ment rather than the evaluation environment created for the call. #>  #> (cid:136) <bibentry>$name now matches the (cid:28)eld name case-insensitively, consistent with #>  #> bibentry() creation and the replacement method. #>  #>  #>  #> --- #>  #> 38 #>  #> NEWS #>  #> (cid:136) cbind() failed to detect some length mismatches with a mixture of time-series and #>  #> non-time-series inputs. #>  #> (cid:136) The default LaTeX style (cid:28)le ‚ÄòSweave.sty‚Äô used by the RweaveLatex driver no longer #> loads the obsolete ‚Äòae‚Äô package; thanks to a report by Thomas Soeiro in PR#18271. #> Furthermore, it now skips ‚Äò\\usepackage[T1]{fontenc}‚Äô for engines other than pdf- #> TeX (if detected) or if the new ‚Äò[nofontenc]‚Äô option is used. #>  #> (cid:136) smooth.spline() now stores its logical cv argument more safely, (cid:28)xing a rare bug #>  #> when printing, and also stores n. #>  #> (cid:136) smooth.spline(x,y,*) now computes the cv.crit statistic correctly, also when #>  #> is.unsorted(x), (cid:28)xing PR#18294. #>  #> (cid:136) The data.frame method of rbind() now warns when binding not-wholly-recycling #>  #> vectors, by analogy to the default method (for matrices). #>  #> (cid:136) setAs() (cid:28)nds the correct class for name to when multiple packages de(cid:28)ne a class #>  #> with that name. Thanks to Gabor Csardi for the report. #>  #> (cid:136) Fix for detaching a package when two classes of the same name are present in method #>  #> signatures for the same generic. Thanks to Gabor Csardi for the report. #>  #> (cid:136) match.arg(\"\", c(\"\", \"a\", \"B\")) gives a better error message, #>  #> in part from #>  #> PR#17959, thanks to Elin Waring. #> (cid:136) R CMD Sweave --clean no longer #>  #> (PR#18242). #>  #> removes pre-existing (cid:28)les or #>  #> subdirectories #>  #> (cid:136) The quartz() device no longer splits polylines into subpaths. That has caused #> narrowly-spaced lines with many points to always look solid even when dashed line #> type was used due to dash phase restarts. #>  #> (cid:136) Deparsing constructs such as quote(1 + ‚Äò!‚Äò(2) + 3) works again as before R 3.5.0, #>  #> thanks to the report and patch in PR#18284 by Suharto Anggono. #> (cid:136) as.list(f) for a factor f now keeps names(f), (cid:28)xing PR#18309. #> (cid:136) qbeta(.001, .9, .009) and analogous qf() calls now return a correct value instead #> of NaN or wrongly 1, all with a warning; thanks to the report by Ludger Goeminne #> in PR#18302. #>  #> (cid:136) plot.lm() failed to produce the plot of residuals vs. factor levels (i.e., which=5 when #>  #> leverages are constant) for models with character predictors (PR#17840). #>  #> (cid:136) interaction.plot(..., xtick = TRUE) misplaced the x-axis line (PR#18305). #> (cid:136) Not strictly (cid:28)xing a bug, format()ing and print()ing of non-(cid:28)nite Date and POSIXt #> values NaN and ¬±Inf no longer show as NA but the respective string, e.g., Inf, for #> consistency with numeric vector‚Äôs behaviour, ful(cid:28)lling the wish of PR#18308. #>  #> (cid:136) R CMD check no longer runs test scripts generated from corresponding ‚Äò.Rin‚Äô (cid:28)les #>  #> twice and now signals an ERROR if processing an ‚Äò.Rin‚Äô script fails. #>  #> (cid:136) tools::Rd2txt() used for plain-text help pages now renders \\hrefs #>  #> (if #> tools::Rd2txt_options(showURLs = TRUE)) and \\urls with percent-encoding and #> standards-compliant delimiting style (angle brackets and no ‚ÄòURL: ‚Äô pre(cid:28)x). \\email #> is now rendered with a ‚Äòmailto:‚Äô pre(cid:28)x. #>  #> CHANGES IN R 4.1.3 #>  #> NEW FEATURES: #>  #>  #>  #> --- #>  #> NEWS #>  #> 39 #>  #> (cid:136) The default version of Bioconductor has been changed to 3.14. #>  #> (This is used by #>  #> setRepositories and the menus in GUIs.) #>  #> UTILITIES: #>  #> (cid:136) R CMD check --as-cran has a workaround for a bug in versions of file up to at least #>  #> 5.41 which mis-identify DBF (cid:28)les last changed in 2022 as executables. #>  #> C-LEVEL FACILITIES: #>  #> (cid:136) The legacy S-compatibility macros SINGLE_* in ‚ÄòR_ext/Constants.h‚Äô (included by #>  #> ‚ÄòR.h‚Äô) are deprecated and will be removed in R 4.2.0. #>  #> BUG FIXES: #>  #> (cid:136) Initialization of self-starting nls() models with initialization functions following the #> pre-R-4.1.0 API (without the ... argument) works again for now, with a deprecation #> warning. #>  #> (cid:136) Fixed quoting of ~autodetect~ in Java setting defaults to avoid inadvertent user #>  #> lookup due to leading ~, reported in PR#18231 by Harold Gutch. #>  #> (cid:136) substr(., start, stop) <- v now treats negative stop values correctly. Reported #>  #> with a patch in PR#18228 by Brodie Gaslam. #>  #> (cid:136) Subscripting an array x without dimnames by a length(dim(x))-column character #> matrix gave \"random\" non-sense, now an error; reported in PR#18244 by Mikael #> Jagan. #>  #> (cid:136) ...names() now matches names(list(...)) closely, (cid:28)xing PR#18247. #> (cid:136) all.equal(*, scale = s) now works as intended when length(s) > 1, partly thanks #>  #> to Michael Chirico‚Äôs PR#18272. #>  #> (cid:136) print(x) for long vectors x now also works for named atomic vectors or lists and #> prints the correct number when reaching the getOption(\"max.print\") limit; partly #> thanks to a report and proposal by Hugh Parsonage to the R-devel list. #> (cid:136) all.equal(<selfStart>, *) no longer signals a deprecation warning. #> (cid:136) reformulate(*, response=r) gives a helpful error message now when length(r) > #>  #> 1, thanks to Bill Dunlap‚Äôs PR#18281. #>  #> (cid:136) Modifying globalCallingHandlers inside withCallingHandlers() now works or #>  #> fails correctly, thanks to Henrik Bengtsson‚Äôs PR#18257. #>  #> (cid:136) hist(<Date>, breaks = \"days\") and hist(<POSIXt>, breaks = \"secs\") no longer #>  #> fail for inputs of length 1. #>  #> (cid:136) qbeta(.001, .9, .009) and similar cases now converge correctly thanks to Ben #>  #> Bolker‚Äôs report in PR#17746. #>  #> (cid:136) window(x, start, end) no longer wrongly signals (cid:16)‚Äôstart‚Äô cannot be after ‚Äôend(cid:17) ‚Äô, #>  #> (cid:28)xing PR#17527 and PR#18291. #>  #> (cid:136) data() now checks that its (rarely used) list argument is a character vector (cid:21) a #>  #> couple of packages passed other types and gave incorrect results. #>  #> (cid:136) which() now checks its arr.ind argument is TRUE rather coercing to logical and #>  #> taking the (cid:28)rst element (cid:21) which gave incorrect results in package code. #>  #> (cid:136) model.weights() and model.offset() more carefully extract their model compo- #>  #> nents, thanks to Ben Bolker and Tim Taylor‚Äôs R-devel post. #>  #> (cid:136) list.files(recursive = TRUE) now shows all broken symlinks (previously, some of #>  #> them may have been omitted, PR#18296). #>  #>  #>  #> --- #>  #> 40 #>  #> NEWS #>  #> CHANGES IN R 4.1.2 #>  #> C-LEVEL FACILITIES: #>  #> (cid:136) The workaround in headers ‚ÄòR.h‚Äô and ‚ÄòRmath.h‚Äô (using namespace std;) for the Or- #> acle Developer Studio compiler is no longer needed now C++11 is required so has #> been removed. A couple more usages of log() (which should have been std::log()) #> with an int argument are reported on Solaris. #>  #> (cid:136) The undocumented limit of 4095 bytes on messages from the S-compatibility macros #> PROBLEM and MESSAGE is now documented and longer messages will be silently trun- #> cated rather than potentially causing segfaults. #>  #> (cid:136) If the R_NO_SEGV_HANDLER environment variable is non-empty, the signal handler for #> SEGV/ILL/BUS signals (which o(cid:27)ers recovery user interface) is not set. This allows #> more reliable debugging of crashes that involve the console. #>  #> DEPRECATED AND DEFUNCT: #>  #> (cid:136) The legacy S-compatibility macros PROBLEM, MESSAGE, ERROR, WARN, WARNING, #> RECOVER, . . . are deprecated and will be hidden in R 4.2.0. R‚Äôs native interface of #> Rf_error and Rf_warning has long been preferred. #>  #> BUG FIXES: #>  #> (cid:136) .mapply(F, dots, .) no longer segfaults when dots is not a list and uses #> match.fun(F) as always documented; reported by Andrew Simmons in PR#18164. #> (cid:136) hist(<Date>, ...) and hist(<POSIXt>, ...) no longer pass arguments for rect() #> (such as col and density) to axis(). (Thanks to Sebastian Meyer‚Äôs PR#18171.) #> (cid:136) \\Sexpr{ch} now preserves Encoding(ch). (Thanks to report and patch by Jeroen #>  #> Ooms in PR#18152.) #>  #> (cid:136) Setting the RNG to \"Marsaglia-Multicarry\" e.g., by RNGkind(), now warns in #>  #> more places, thanks to Andr√ò Gillibert‚Äôs report and patch in PR#18168. #>  #> (cid:136) gray(numeric(), alpha=1/2) no longer segfaults, (cid:28)xing PR#18183, reported by Till #>  #> Krenz. #>  #> (cid:136) Fixed dnbinom(x, size=<very_small>, .., log=TRUE) regression, #>  #> reported by #>  #> Martin Morgan. #>  #> (cid:136) as.Date.POSIXlt(x) now keeps names(x), thanks to Davis Vaughan‚Äôs report and #>  #> patch in PR#18188. #>  #> (cid:136) model.response() now strips an \"AsIs\" class typically, thanks to Duncan Murdoch‚Äôs #>  #> report and other discussants in PR#18190. #>  #> (cid:136) try() is considerably faster in case of an error and long call, as e.g., from some #>  #> do.call(). Thanks to Alexander Kaever‚Äôs suggestion posted to R-devel. #> (cid:136) qqline(y = <object>) such as y=I(.), now works, see also PR#18190. #> (cid:136) Non-integer mgp par() settings are now handled correctly in axis() and mtext(), #> thanks to Mikael Jagan and Duncan Murdoch‚Äôs report and suggestion in PR#18194. #> (cid:136) formatC(x) returns length zero character() now, rather than \"\" when x is of length #>  #> zero, as documented, thanks to Davis Vaughan‚Äôs post to R-devel. #>  #> (cid:136) removeSource(fn) now retains (other) attributes(fn). #>  #>  #>  #> --- #>  #> NEWS #>  #> 41 #>  #> CHANGES IN R 4.1.1 #>  #> NEW FEATURES: #>  #> (cid:136) require(pkg, quietly = TRUE) is quieter and in particular does not warn if the #>  #> package is not found. #>  #> DEPRECATED AND DEFUNCT: #>  #> (cid:136) Use of ‚Äòftp://‚Äô URIs should be regarded as deprecated, with on-going support con- #> (cid:28)ned to method = \"libcurl\" and not routinely tested. (Nowadays no major browser #> supports them.) #>  #> (cid:136) The non-default method = \"internal\" is deprecated for ‚Äòhttp://‚Äô and ‚Äòftp://‚Äô URIs #>  #> for both download.file and url. #>  #> (cid:136) On Windows, method = \"wininet\" is deprecated for ‚Äòhttp://‚Äô, #>  #> ‚Äòftp://‚Äô URIs for both download.file and url. #> ‚Äòftp://‚Äô.) #> For ‚Äòftp://‚Äô URIs the default method is now \"libcurl\" if available (which it is on #> CRAN builds). #> method = \"wininet\" remains the default for ‚Äòhttp://‚Äô and ‚Äòhttps://‚Äô URIs but if #> libcurl is available, using method = \"libcurl\" is preferred. #>  #> ‚Äòhttps://‚Äô and #> (A warning is only given for #>  #> INSTALLATION: #>  #> (cid:136) make check now works also without a LaTeX installation. #>  #> (Thanks to Sebastian #>  #> Meyer‚Äôs PR#18103.) #>  #> BUG FIXES: #>  #> (cid:136) make check-devel #>  #> again #> ‚Äò--without-recommended-packages‚Äô. #>  #> works #>  #> in #>  #> an #>  #> R #>  #> build #>  #> con(cid:28)gured #>  #> with #>  #> (cid:136) qnbinom(p, size, mu) for large size/mu is correct now in a range of cases #> (PR#18095); similarly for the (size, prob) parametrization of the negative bino- #> mial. Also qpois() and qbinom() are better and or faster for extreme cases. The #> underlying C code has been modularized and is common to all four cases of discrete #> distributions. #>  #> (cid:136) gap.axis is now part of the axis() arguments which are passed from bxp(), and #> hence boxplot(). (Thanks to Martin Smith‚Äôs report and suggestions in PR#18109.) #>  #> (cid:136) .First and .Last can again be set from the site pro(cid:28)le. #> (cid:136) seq.int(from, to, *) and seq.default(..) now work better in large range cases #>  #> where from-to is in(cid:28)nite where the two boundaries are (cid:28)nite. #>  #> (cid:136) all.equal(x,y) now returns TRUE correctly also when several entries of abs(x) and #>  #> abs(y) are close to .Machine$double.xmax, the largest (cid:28)nite numeric. #>  #> (cid:136) model.frame() now clears the object bit when removing the class attribute of a #>  #> value via na.action (PR#18100). #>  #> (cid:136) charClass() now works with multi-character strings on Windows (PR#18104, (cid:28)xed #>  #> by Bill Dunlap). #>  #> (cid:136) encodeString() on Solaris now works again in Latin-1 encoding on characters repre- #> sented di(cid:27)erently in UTF-8. Support for surrogate pairs on Solaris has been improved. #>  #>  #>  #> --- #>  #> 42 #>  #> NEWS #>  #> (cid:136) file.show() on Windows now works with non-ASCII path names representable in #>  #> the current native encoding (PR#18132). #>  #> (cid:136) Embedded R on Windows can now (cid:28)nd R home directory via the registry even when #>  #> installed only for the current user (PR#18135). #>  #> (cid:136) pretty(x) with (cid:28)nite x now returns (cid:28)nite values also in the case where the extreme x #> values are close in size to the maximal representable number .Machine$double.xmax. #> Also, it‚Äôs been tweaked for very small ranges and when a boundary is close (or equal) #> to zero; e.g., pretty(c(0,1e-317)) no longer has negative numbers, currently still #> warning about a very small range, and pretty(2^-(1024 - 2^-1/(c(24,10)))) is #> more accurate. #>  #> (cid:136) The error message for not (cid:28)nding vignette (cid:28)les when weaving has correct (cid:28)le sizes #>  #> now. (Thanks to Sebastian Meyer‚Äôs PR#18154.) #>  #> (cid:136) dnbinom(20, <large>, 1) now correctly gives 0, and similar cases are more accurate #> with under(cid:29)ow precaution. (Reported by Francisco Vera Alcivar in PR#18072.) #>  #> CHANGES IN R 4.1.0 #>  #> FUTURE DIRECTIONS: #>  #> (cid:136) It is planned that the 4.1.x series will be the last to support 32-bit Windows, with #>  #> production of binary packages for that series continuing until early 2023. #>  #> SIGNIFICANT USER-VISIBLE CHANGES: #>  #> (cid:136) Data set esoph in package datasets now provides the correct numbers of controls; #> (Reported by Alexander #>  #> previously it had the numbers of cases added to these. #> Fowler in PR#17964.) #>  #> NEW FEATURES: #>  #> (cid:136) ‚Äòwww.omegahat.net‚Äô #>  #> is no longer one of the repositories known by default to #> setRepositories(). (Nowadays it only provides source packages and is often un- #> available.) #>  #> (cid:136) Function package_dependencies() (in package tools) can now use di(cid:27)erent depen- #>  #> dency types for direct and recursive dependencies. #>  #> (cid:136) The checking of the size of tarball in R CMD check --as-cran <pkg> may be tweaked #> via the new environment variable _R_CHECK_CRAN_INCOMING_TARBALL_THRESHOLD_, #> as suggested in PR#17777 by Jan Gorecki. #>  #> (cid:136) Using c() to combine a factor with other factors now gives a factor, an ordered factor #>  #> when combining ordered factors with identical levels. #>  #> (cid:136) apply() gains a simplify argument to allow disabling of simpli(cid:28)cation of results. #> (cid:136) The format() method for class \"ftable\" gets a new option justify. (Suggested by #>  #> Thomas Soeiro.) #>  #> (cid:136) New ...names() utility. (Proposed by Neal Fultz in PR#17705.) #> (cid:136) type.convert() now warns when its as.is argument is not speci(cid:28)ed, as the help #> (cid:28)le always said it should. In that case, the default is changed to TRUE in line with its #> change in read.table() (related to stringsAsFactors) in R 4.0.0. #>  #>  #>  #> --- #>  #> NEWS #>  #> 43 #>  #> (cid:136) When printing list arrays, classed objects are now shown via their format() value if #> this is a short enough character string, or by giving the (cid:28)rst elements of their class #> vector and their length. #>  #> (cid:136) capabilities() gets new entry \"Rprof\" which is TRUE when R has been con(cid:28)gured #> (Related to #>  #> with the equivalent of --enable-R-profiling (as it is by default). #> Michael Orlitzky‚Äôs report PR#17836.) #>  #> (cid:136) str(xS4) now also shows extraneous attributes of an S4 object xS4. #> (cid:136) Rudimentary support for vi-style tags in rtags() and R CMD rtags has been added. #>  #> (Based on a patch from Neal Fultz in PR#17214.) #>  #> (cid:136) checkRdContents() is now exported from tools; it and also checkDocFiles() have a #> new option chkInternal allowing to check Rd (cid:28)les marked with keyword \"internal\" #> as well. The latter can be activated for R CMD check via environment variable #> _R_CHECK_RD_INTERNAL_TOO_. #>  #> (cid:136) New functions numToBits() and numToInts() extend the raw conversion utilities to #>  #> (double precision) numeric. #>  #> (cid:136) Functions URLencode() and URLdecode() in package utils now work on vectors of #>  #> URIs. (Based on patch from Bob Rudis submitted with PR#17873.) #>  #> (cid:136) path.expand() can expand ‚Äò~user‚Äô on most Unix-alikes even when readline is not #> in use. It tries harder to expand ‚Äò~‚Äô, for example should environment variable HOME #> be unset. #>  #> (cid:136) For HTML help (both dynamic and static), Rd (cid:28)le links to help pages in external #> packages are now treated as references to topics rather than (cid:28)le names, and fall back #> to a (cid:28)le link only if the topic is not found in the target package. The earlier rule #> which prioritized (cid:28)le names over topics can be restored by setting the environment #> variable _R_HELP_LINKS_TO_TOPICS_ to a false value. #>  #> (cid:136) c() now removes NULL arguments before dispatching to methods, thus simplifying the #> implementation of c() methods, but for back compatibility keeps NULL when it is the #> (cid:28)rst argument. (From a report and patch proposal by Lionel Henry in PR#17900.) #>  #> (cid:136) Vectorize()‚Äôs result function‚Äôs environment no longer keeps unneeded objects. #> (cid:136) Function ...elt() now propagates visibility consistently with ..n. (Thanks to Lionel #>  #> Henry‚Äôs PR#17905.) #>  #> (cid:136) capture.output() no longer uses non-standard evaluation to evaluate its arguments. #> This makes evaluation of functions like parent.frame() more consistent. (Thanks #> to Lionel Henry‚Äôs PR#17907.) #>  #> (cid:136) packBits(bits, type=\"double\") now works as inverse of numToBits(). (Thanks #>  #> to Bill Dunlap‚Äôs proposal in PR#17914.) #>  #> (cid:136) curlGetHeaders() has two new arguments, timeout to specify the timeout for that #> call (overriding getOption(\"timeout\")) and TLS to specify the minimum TLS pro- #> tocol version to be used for https:// URIs (inter alia providing a means to check #> for sites using deprecated TLS versions 1.0 and 1.1). #>  #> (cid:136) For nls(), an optional constant scaleOffset may be added to the denominator of #> the relative o(cid:27)set convergence test for cases where the (cid:28)t of a model is expected to #> be exact, thanks to a proposal by John Nash. nls(*, trace=TRUE) now also shows #> the convergence criterion. #>  #> (cid:136) Numeric di(cid:27)erentiation via numericDeriv() gets new optional arguments eps and #> central, the latter for taking central divided di(cid:27)erences. The latter can be activated #> for nls() via nls.control(nDcentral = TRUE). #>  #>  #>  #> --- #>  #> 44 #>  #> NEWS #>  #> (cid:136) nls() now passes the trace and control arguments to getInitial(), notably for all #> self-starting models, so these can also be (cid:28)t in zero-noise situations via a scaleOffset. #> For this reason, the initial function of a selfStart model must now have ... in #> its argument list. #>  #> (cid:136) bquote(splice = TRUE) can now splice expression vectors with attributes: this makes #> it possible to splice the result of parse(keep.source = TRUE). (Report and patch #> provided by Lionel Henry in PR#17869.) #>  #> (cid:136) textConnection() gets an optional name argument. #> (cid:136) get(), exists(), and get0() now signal an error if the (cid:28)rst argument has length #> greater than 1. Previously additional elements were silently ignored. (Suggested by #> Antoine Fabri on R-devel.) #>  #> (cid:136) R now provides a shorthand notation for creating functions, e.g. \\(x) x + 1 is parsed #>  #> as function(x) x + 1. #>  #> (cid:136) R now provides a simple native forward pipe syntax |>. The simple form of the #> forward pipe inserts the left-hand side as the (cid:28)rst argument in the right-hand side call. #> The pipe implementation as a syntax transformation was motivated by suggestions #> from Jim Hester and Lionel Henry. #>  #> (cid:136) all.equal(f, g) #>  #> for #>  #> their #> environment(.)s, notably via new all.equal method for class function. Com- #> parison of nls() (cid:28)ts, e.g., may now need all.equal(m1, m2,check.environment = #> FALSE). #>  #> compares #>  #> now by #>  #> functions #>  #> default #>  #> also #>  #> (cid:136) .libPaths() gets a new option include.site, allowing to not include the site library. #>  #> (Thanks to Dario Strbenac‚Äôs suggestion and Gabe Becker‚Äôs PR#18016.) #> (cid:136) Lithuanian translations are now available. (Thanks to Rimantas (cid:154)akauskas.) #> (cid:136) names() now works for DOTSXP objects. On the other hand, in ‚ÄòR-lang‚Äô, the R #> language manual, we now warn against relying on the structure or even existence of #> such dot-dot-dot objects. #>  #> (cid:136) all.equal() no longer gives an error on DOTSXP objects. #> (cid:136) capabilities(\"cairo\") now applies only to the (cid:28)le-based devices as it is now pos- #> sible (if very unusual) to build R with Cairo support for those but not for X11(). #> (cid:136) There is optional support for tracing the progress of loadNamespace() (cid:22) see its help. #> (cid:136) (Not Windows.) l10n_info() reports an additional element, the name of the encod- #> ing as reported by the OS (which may di(cid:27)er from the encoding part (if any) of the #> result from Sys.getlocale(\"LC_CTYPE\")). #>  #> (cid:136) New function gregexec() which generalizes regexec() to (cid:28)nd all disjoint matches #> and all substrings corresponding to parenthesized subexpressions of the given regular #> expression. (Contributed by Brodie Gaslam.) #>  #> (cid:136) New function charClass() in package utils to query the wide-character classi(cid:28)cation #>  #> functions in use (such as iswprint). #>  #> (cid:136) The #>  #> of #>  #> names #>  #> global #> getOption(\"digits\"), but quantile() gets a new optional argument digits #> = 7 instead. #>  #> quantile()‚Äôs #>  #> depend #>  #> longer #>  #> result #>  #> the #>  #> on #>  #> no #>  #> (cid:136) grep(), sub(), regexp and variants work considerably faster for long factors with #>  #> few levels. (Thanks to Michael Chirico‚Äôs PR#18063.) #>  #> (cid:136) Provide grouping of x11() graphics windows within a window manager such as Gnome #>  #> or Unity; thanks to a patch by Ivan Krylov posted to R-devel. #>  #>  #>  #> --- #>  #> NEWS #>  #> 45 #>  #> (cid:136) The split() method for class data.frame now allows the f argument to be speci(cid:28)ed #>  #> as a formula. #>  #> (cid:136) sprintf now warns on arguments unused by the format string. #> (cid:136) New palettes \"Rocket\" and \"Mako\" for hcl.colors() (approximating palettes of the #>  #> same name from the viridisLite package). #> Contributed by Achim Zeileis. #>  #> (cid:136) The base environment and its namespace are now locked (so one can no longer add #>  #> bindings to these or remove from these). #>  #> (cid:136) Rterm handling of multi-byte characters has been improved, allowing use of such #>  #> characters when supported by the current locale. #>  #> (cid:136) Rterm now accepts ALT+ +xxxxxxxx sequences to enter Unicode characters as hex #>  #> digits. #>  #> (cid:136) Environment variable LC_ALL on Windows now takes precedence over LC_CTYPE and #>  #> variables for other supported categories, matching the POSIX behaviour. #>  #> (cid:136) duplicated() and anyDuplicated() are now optimized for integer and real vectors #> that are known to be sorted via the ALTREP framework. Contributed by Gabriel #> Becker via PR#17993. #>  #> GRAPHICS: #>  #> (cid:136) The graphics engine version, R_GE_version, has been bumped to 14 and so packages #>  #> that provide graphics devices should be reinstalled. #>  #> (cid:136) Graphics devices should now specify deviceVersion to indicate what version of the #>  #> graphics engine they support. #>  #> (cid:136) Graphics devices can now specify deviceClip. If TRUE, the graphics engine will never #>  #> perform any clipping of output itself. #> The clipping that the graphics engine does perform (for both canClip = TRUE and #> canClip = FALSE) has been improved to avoid producing unnecessary artifacts in #> clipped output. #>  #> (cid:136) The grid package now allows gpar(fill) to be a linearGradient(), #>  #> a #> radialGradient(), or a pattern(). The viewport(clip) can now also be a grob, #> which de(cid:28)nes a clipping path, and there is a new viewport(mask) that can also be a #> grob, which de(cid:28)nes a mask. #> These new features are only supported so far on the Cairo-based graphics devices and #> on the pdf() device. #>  #> (cid:136) (Not Windows.) A warning is given when a Cairo-based type is speci(cid:28)ed for a png(), #> jpeg(), tiff() or bmp() device but Cairo is unsupported (so type = \"Xlib\" is tried #> instead). #>  #> (cid:136) grSoftVersion() now reports the versions of FreeType and FontCon(cid:28)g if they are #>  #> used directly (not via Pango), as is most commonly done on macOS. #>  #> C-LEVEL FACILITIES: #>  #> (cid:136) The standalone ‚ÄòlibRmath‚Äô math library and R‚Äôs C API now provide log1pexp() #>  #> again as documented, and gain log1mexp(). #>  #> INSTALLATION on a UNIX-ALIKE: #>  #>  #>  #> --- #>  #> 46 #>  #> NEWS #>  #> (cid:136) configure checks for a program pkgconf if program pkg-config is not found. These #> are now only looked for on the path (like almost all other programs) so if needed #> specify a full path to the command in PKG_CONFIG, for example in (cid:28)le ‚Äòconfig.site‚Äô. #> (cid:136) C99 function iswblank is required (cid:21) it was last seen missing ca 2003 so the workaround #>  #> has been removed. #>  #> (cid:136) There #>  #> are #>  #> new #>  #> options #>  #> configure #>  #> ‚Äò--with-internal-iswxxxxx‚Äô, #> and ‚Äò--with-internal-wcwidth‚Äô which allows #> ‚Äò--with-internal-towlower‚Äô #> the system functions for wide-character classi(cid:28)cation, case-switching and width #> (wcwidth and wcswidth) to be replaced by internal ones. The (cid:28)rst has long been #> used on macOS, AIX (and Windows) but this enables it to be unselected there and #> selected for other platforms (it is the new default on Solaris). The second is new in #> this version of R and is selected by default on macOS and Solaris. The third has #> long been the default and remains so as it contains customizations for East Asian #> languages. #> System versions of these functions are often minimally implemented (sometimes only #> for ASCII characters) and may not cover the full range of Unicode points: for example #> Solaris (and Windows) only cover the Basic Multilingual Plane. #>  #> (cid:136) Cairo installations without X11 are more likely to be detected by configure, when #> the (cid:28)le-based Cairo graphics devices will be available but not X11(type = \"cairo\"). #> (cid:136) There is a new configure option ‚Äò--with-static-cairo‚Äô which is the default on #> macOS. This should be used when only static cairo (and where relevant, Pango) #> libraries are available. #>  #> (cid:136) Cairo-based #>  #> graphics #>  #> devices #>  #> on #>  #> platforms without Pango #>  #> but with #>  #> FreeType/FontCon(cid:28)g will make use of the latter for font selection. #>  #> LINK-TIME OPTIMIZATION on a UNIX-ALIKE: #>  #> (cid:136) Con(cid:28)guring with (cid:29)ag ‚Äò--enable-lto=R‚Äô now also uses LTO when installing the rec- #>  #> ommended packages. #>  #> (cid:136) R CMD INSTALL and R CMD SHLIB have a new (cid:29)ag ‚Äò--use-LTO‚Äô to use LTO when com- #> piling code, for use with R con(cid:28)gured with ‚Äò--enable-lto=R‚Äô. For R con(cid:28)gured with #> ‚Äò--enable-lto‚Äô, they have the new (cid:29)ag ‚Äò--no-use-LTO‚Äô. #> Packages can opt in or out of LTO compilation via a ‚ÄòUseLTO‚Äô (cid:28)eld in the #> ‚ÄòDESCRIPTION‚Äô (cid:28)le. (As usual this can be overridden by the command-line (cid:29)ags.) #>  #> BUILDING R on Windows: #>  #> (cid:136) for GCC ‚â• 8, FC_LEN_T is de(cid:28)ned in ‚Äòconfig.h‚Äô and hence character lengths are #>  #> passed from C to Fortran in inter alia BLAS and LAPACK calls. #>  #> (cid:136) There is a new text (cid:28)le ‚Äòsrc/gnuwin32/README.compilation‚Äô, which outlines how #>  #> C/Fortran code compilation is organized and documents new features: #> (cid:21) R can be built with Link-Time Optimization with a suitable compiler (cid:21) doing so #>  #> with GCC 9.2 showed several inconsistencies which have been corrected. #>  #> (cid:21) There is support for cross-compiling the C and Fortran code in R and standard #> packages on suitable (Linux) platforms. This is mainly intended to allow devel- #> opers to test later versions of compilers (cid:21) for example using GCC 9.2 or 10.x has #> detected issues that GCC 8.3 in Rtools40 does not. #>  #> (cid:21) There is experimental support for cross-building R packages with C, C++ and/or #>  #> Fortran code. #>  #>  #>  #> --- #>  #> NEWS #>  #> 47 #>  #> (cid:136) The R installer can now be optionally built to support a single architecture (only #>  #> 64-bit or only 32-bit). #>  #> PACKAGE INSTALLATION: #>  #> (cid:136) The default C++ standard has been changed to C++14 where available (which it #> is on all currently checked platforms): if not (as before) C++11 is used if available #> otherwise C++ is not supported. #> Packages which specify C++11 will still be installed using C++11. #> for #> C++14 #> often #> give #> std::random_shuffle (deprecated in C++14 and removed in C++17). #> Ei- #> ther specify C++11 (see ‚ÄòWriting R Extensions‚Äô) or modernize the code and if #> needed specify C++14. The latter has been supported since R 3.4.0 so the package‚Äôs #> ‚ÄòDESCRIPTION‚Äô would need to include something like #>  #> deprecation warnings, most #>  #> compilers may #>  #> Depends: R (>= 3.4) #>  #> PACKAGE INSTALLATION on Windows: #>  #> (cid:136) R CMD INSTALL and R CMD SHLIB make use of their (cid:29)ag ‚Äò--use-LTO‚Äô when the #> ‚ÄòLTO_OPT‚Äô make macro is set in (cid:28)le ‚Äòetc/${R_ARCH}/Makeconf‚Äô or in a personal/site #> ‚ÄòMakevars‚Äô (cid:28)le. (For details see ‚ÄòWriting R Extensions‚Äô (cid:159)4.5.) #> This provides a valuable check on code consistency. It does work with GCC 8.3 as in #> Rtools40, but that does not detect everything the CRAN checks with current GCC #> do. #>  #> PACKAGE INSTALLATION on macOS: #>  #> (cid:136) The default personal library directory on builds with ‚Äò--enable-aqua‚Äô (including #>  #> CRAN builds) now di(cid:27)ers by CPU type, one of #>  #> ~/Library/R/x86_64/x.y/library #> ~/Library/R/arm64/x.y/library #>  #> This uses the CPU type R (and hence the packages) were built for, so when a ‚Äòx86_64‚Äô #> build of R is run under Rosetta emulation on an ‚Äòarm64‚Äô Mac, the (cid:28)rst is used. #>  #> UTILITIES: #>  #> (cid:136) R CMD check can now scan package functions for bogus return statements, which #> were possibly intended as return() calls (wish of PR#17180, patch by Sebas- #> tian Meyer). This check can be activated via the new environment variable #> _R_CHECK_BOGUS_RETURN_, true for --as-cran. #>  #> (cid:136) R CMD build omits tarballs and binaries of previous builds from the top-level package #>  #> directory. (PR#17828, patch by Sebastian Meyer.) #>  #> (cid:136) R CMD check now runs sanity checks on the use of ‚ÄòLazyData‚Äô, for example that a #> ‚Äòdata‚Äô directory is present and that ‚ÄòLazyDataCompression‚Äô is not speci(cid:28)ed without #> ‚ÄòLazyData‚Äô and has a documented value. For packages with large LazyData databases #> without specifying ‚ÄòLazyDataCompression‚Äô, there is a reference to the code given in #> ‚ÄòWriting R Extensions‚Äô (cid:159)1.1.6 to test the choice of compression (as in all the CRAN #> packages tested a non-default method was preferred). #>  #> (cid:136) R CMD build removes #>  #> ‚ÄòLazyData‚Äô and ‚ÄòLazyDataCompression‚Äô (cid:28)elds from the #>  #> ‚ÄòDESCRIPTION‚Äô (cid:28)le of packages without a ‚Äòdata‚Äô directory. #>  #> ENCODING-RELATED CHANGES: #>  #>  #>  #> --- #>  #> 48 #>  #> NEWS #>  #> (cid:136) The parser now treats ‚Äò\\Unnnnnnnn‚Äô escapes larger than the upper limit for Unicode #>  #> points (‚Äò\\U10FFFF‚Äô) as an error as they cannot be represented by valid UTF-8. #> Where such escapes are used for outputting non-printable (including unassigned) #> characters, 6 hex digits are used (rather than 8 with leading zeros). For clarity, #> braces are used, for example ‚Äò\\U{0effff}‚Äô. #>  #> (cid:136) The parser now looks for non-ASCII spaces on Solaris (as previously on most other #>  #> OSes). #>  #> (cid:136) There are warnings (including from the parser) on the use of unpaired surrogate #>  #> Unicode points such as ‚Äò\\uD834‚Äô. (These cannot be converted to valid UTF-8.) #>  #> (cid:136) Functions nchar(), tolower(), toupper() and chartr() and those using regular #>  #> expressions have more support for inputs with a marked Latin-1 encoding. #>  #> (cid:136) The character-classi(cid:28)cation functions used (by default) to replace the system #> iswxxxxx functions on Windows, macOS and AIX have been updated to Unicode #> 13.0.0. #> The character-width tables have been updated to include new assignments in Unicode #> 13.0.0. This included treating all control characters as having zero width. #>  #> (cid:136) The code for evaluating default (extended) regular expressions now uses the same #> character-classi(cid:28)cation functions as the rest of R (previously they di(cid:27)ered on Win- #> dows, macOS and AIX). #>  #> (cid:136) There is a build-time option to replace the system‚Äôs wide-character wctrans C func- #> tion by tables shipped with R: use configure option ‚Äò--with-internal-towlower‚Äô #> or (on Windows) ‚Äò-DUSE_RI18N_CASE‚Äô in ‚ÄòCFLAGS‚Äô when building R. This may be #> needed to allow tolower() and toupper() to work with Unicode characters beyond #> the Basic Multilingual Plane where not supported by system functions (e.g. on Solaris #> where it is the new default). #>  #> (cid:136) R is more careful when truncating UTF-8 and other multi-byte strings that are too #> long to be printed, passed to the system or libraries or placed into an internal bu(cid:27)er. #> Truncation will no longer produce incomplete multibyte characters. #>  #> DEPRECATED AND DEFUNCT: #>  #> (cid:136) Function plclust() from the package stats and package.dependencies(), #> pkgDepends(), getDepList(), installFoundDepends(), and vignetteDepends() #> from package tools are defunct. #>  #> (cid:136) Defunct #>  #> functions checkNEWS() and readNEWS() from package #>  #> tools and #>  #> CRAN.packages() from utils have been removed. #>  #> (cid:136) R CMD config CXXCPP is defunct (it was deprecated in R 3.6.2). #> (cid:136) parallel::detectCores() drops support for IRIX (retired in 2013). #> (cid:136) The LINPACK argument to chol.default(), chol2inv(), solve.default() and #> It was silently ignored up to R 4.0.3 but #>  #> svd() has been defunct since R 3.1.0. #> now gives an error. #>  #> (cid:136) Subsetting/indexing, such as ddd[*] or ddd$x on a DOTSXP (dot-dot-dot) object ddd #>  #> has been disabled; it worked by accident only and was undocumented. #>  #> BUG FIXES: #>  #> (cid:136) Many more C-level allocations (mainly by malloc and strdup) are checked for success #>  #> with suitable alternative actions. #>  #>  #>  #> --- #>  #> NEWS #>  #> 49 #>  #> (cid:136) Bug (cid:28)x for replayPlot(); this was turning o(cid:27) graphics engine display list recording #> if a recorded plot was replayed in the same session. The impact of the bug became #> visible if resize the device after replay OR if attempted another savePlot() after #> replay (empty display list means empty screen on resize or empty saved plot). #>  #> (cid:136) R CMD check etc now warn when a package exports non-existing S4 classes or methods, #> (Reported by Alex Bertram; reproducible #>  #> also in case of no (cid:16)methods(cid:17) presence. #> example and patch by Sebastian Meyer in PR#16662.) #>  #> (cid:136) boxplot() now also accepts calls for labels such as ylab, the same as plot(). #>  #> (Reported by Marius Hofert.) #>  #> (cid:136) The help page for xtabs() now correctly states that addNA is setting na.action = #>  #> na.pass among others. (Reported as PR#17770 by Thomas Soeiro.) #>  #> (cid:136) The R CMD check <pkg> gives a longer and more comprehensible message when #> ‚ÄòDESCRIPTION‚Äô misses dependencies, e.g., in Imports:. (Thanks to the contributors #> of PR#17179.) #>  #> (cid:136) update.default() now calls the generic update() on the formula to work correctly #> (As reported and suggested by Neal Fultz in #>  #> for models with extended formulas. #> PR#17865.) #>  #> (cid:136) The horizontal position of leaves in a dendrogram is now correct also with center = #>  #> FALSE. (PR#14938, patch from Sebastian Meyer.) #>  #> (cid:136) all.equal.POSIXt() no longer warns about and subsequently ignores inconsistent #> \"tzone\" attributes, but describes the di(cid:27)erence in its return value (PR#17277). This #> check can be disabled via the new argument check.tzone = FALSE as suggested by #> Sebastian Meyer. #>  #> (cid:136) as.POSIXct() now populates the \"tzone\" attribute from its tz argument when x is #>  #> a logical vector consisting entirely of NA values. #>  #> (cid:136) x[[2^31]] <- v now works. (Thanks to the report and patch by Suharto Anggono #>  #> in PR#17330.) #>  #> (cid:136) In log-scale graphics, axis() ticks and label positions are now computed more care- #> fully and symmetrically in their range, typically providing more ticks, ful(cid:28)lling wishes #> in PR#17936. The change really corresponds to an improved axisTicks() (package #> grDevices), potentially in(cid:29)uencing grid and lattice, for example. #>  #> (cid:136) qnorm(<very large negative>, log.p=TRUE) is now correct to at least (cid:28)ve digits #>  #> where it was catastrophically wrong, previously. #>  #> (cid:136) sum(df) and similar \"Summary\"- and \"Math\"-group member functions now work for #> data frames df with logical columns, notably also of zero rows. (Reported to R- #> devel by Martin (cid:16)b706(cid:17).) #>  #> (cid:136) unsplit() had trouble with tibbles due to unsound use of rep(NA, len)-indexing, #>  #> which should use NA_integer_ (Reported to R-devel by Mario Annau.) #>  #> (cid:136) pnorm(x, log.p = TRUE) under(cid:29)ows to -Inf slightly later. #> (cid:136) show(<hidden S4 generic>) prints better and without quotes for non-hidden S4 #>  #> generics. #>  #> (cid:136) read.table() and relatives treated an \"NA\" column name as missing when #>  #> check.names = FALSE PR#18007. #>  #> (cid:136) Parsing strings containing UTF-16 surrogate pairs #> some #>  #> works #> utf8ToInt(\"\\uD834\\uDD1E\")) should now give \"1D11E\" on all platforms. #>  #> such as \"\\uD834\\uDD1E\" #> sprintf(\"%X\", #>  #> (uncommon) #>  #> platforms. #>  #> better #>  #> on #>  #>  #>  #> --- #>  #> 50 #>  #> NEWS #>  #> (cid:136) identical(x,y) is no longer true for di(cid:27)ering DOTSXP objects, (cid:28)xing PR#18032. #> (cid:136) str() now works correctly for DOTSXP and related exotics, even when these are #>  #> doomed. #> Additionally, it no longer fails for lists with a class and (cid:16)irregular(cid:17) method de(cid:28)ni- #> tions such that e.g. lapply(*) will necessarily fail, as currently for di(cid:27)erent igraph #> objects. #>  #> (cid:136) Message translation domains, e.g., for errors and warnings, are now correctly deter- #> mined also when e.g., a base function is called from (cid:16)top-level(cid:17) function (i.e., de(cid:28)ned #> in globalenv()), thanks to a patch from Joris Goosen (cid:28)xing PR#17998. #>  #> (cid:136) Too long lines in environment (cid:28)les (e.g., ‚ÄòRenviron‚Äô) no longer crash R. This limit #>  #> has been increased to 100,000 bytes. (PR#18001.) #>  #> (cid:136) There is a further workaround for FreeType giving incorrect italic font faces with #>  #> cairo-based graphics devices on macOS. #>  #> (cid:136) add_datalist(*, force = TRUE) (from package tools) now actually updates an exist- #> ing ‚Äòdata/datalist‚Äô (cid:28)le for new content. (Thanks to a report and patch by Sebastian #> Meyer in PR#18048.) #>  #> (cid:136) cut.Date() and cut.POSIXt() could produce an empty last interval for breaks = #> \"months\" or breaks = \"years\". (Reported as PR#18053 by Christopher Carbone.) #> (cid:136) Detection of the encoding of ‚Äòregular‚Äô macOS locales such as ‚Äòen_US‚Äô (which is UTF- #> 8) had been broken by a macOS change: fortunately these are now rarely used with #> ‚Äòen_US.UTF-8‚Äô being preferred. #>  #> (cid:136) sub() and gsub(pattern, repl, x, *) now keep attributes of x such as names() #>  #> also when pattern is NA (PR#18079). #>  #> (cid:136) Time di(cid:27)erences (\"difftime\" objects) get a replacement and a rep() method to keep #> \"units\" consistent. (Thanks to a report and patch by Nicolas Bennett in PR#18066.) #> (cid:136) The \\RdOpts macro, setting defaults for \\Sexpr options in an Rd (cid:28)le, had been #> it now works again. (Thanks to a report and patch by #>  #> ine(cid:27)ective since R 2.12.0: #> Sebastian Meyer in PR#18073.) #>  #> (cid:136) mclapply and pvec no longer accidentally terminate parallel processes started before #>  #> by mcparallel or related calls in package parallel (PR#18078). #>  #> (cid:136) grep and other functions for evaluating (extended) regular expressions handle in #> Unicode also strings not explicitly (cid:29)agged UTF-8, but (cid:29)agged native when running #> in UTF-8 locale. #>  #> (cid:136) Fixed a crash in fifo implementation on Windows (PR#18031). #> (cid:136) Binary mode in fifo on Windows is now properly detected from argument open #>  #> (PR#15600, PR#18031). #>  #> CHANGES IN R 4.0.5 #>  #> BUG FIXES: #>  #> (cid:136) The change to the internal table in R 4.0.4 for iswprint has been reverted: it con- #>  #> tained some errors in printability of ‚ÄòEast Asian‚Äô characters. #>  #> (cid:136) For packages using ‚ÄòLazyData‚Äô, R CMD build ignored the ‚Äò--resave-data‚Äô option and #> the ‚ÄòBuildResaveData‚Äô (cid:28)eld of the ‚ÄòDESCRIPTION‚Äô (cid:28)le (in R versions 4.0.0 to 4.0.4). #>  #>  #>  #> --- #>  #> NEWS #>  #> 51 #>  #> CHANGES IN R 4.0.4 #>  #> NEW FEATURES: #>  #> (cid:136) File ‚Äòshare/texmf/tex/latex/jss.cls‚Äô has been updated to work with LaTeX ver- #>  #> sions since Oct 2020. #>  #> (cid:136) Unicode character width tables (as used by nchar(, type = \"w\")) have been updated #>  #> to Unicode 12.1 by Brodie Gaslam (PR#17781), including many emoji. #>  #> (cid:136) The internal table for iswprint (used on Windows, macOS and AIX) has been up- #>  #> dated to include many recent Unicode characters. #>  #> INSTALLATION on a UNIX-ALIKE: #>  #> (cid:136) If an external BLAS is speci(cid:28)ed by ‚Äò--with-blas=foo‚Äô or via environment vari- #> able BLAS_LIBS is not found, this is now a con(cid:28)guration error. The previous be- #> haviour was not clear from the documentation: #> it was to continue the search as if #> ‚Äò--with-blas=yes‚Äô was speci(cid:28)ed. #>  #> BUG FIXES: #>  #> (cid:136) all.equal(x,y) now (cid:16)sees(cid:17) the two di(cid:27)erent NAs in factors, thanks to Bill Dunlap #>  #> and others in PR#17897. #>  #> (cid:136) (~ NULL)[1] and similar formula subsetting now works, thanks to a report and patch #> by Henrik Bengtsson in PR#17935. Additionally, subsetting leaving an empty for- #> mula now works too, thanks to suggestions by Suharto Anggono. #>  #> (cid:136) .traceback(n) keeps source references again, as before R 4.0.0, (cid:28)xing a regression; #> introduced by the PR#17580, reported including two patch proposals by Brodie #> Gaslam. #>  #> (cid:136) unlist(plst, recursive=FALSE) no longer drops content for pairlists with list com- #>  #> ponents, thanks to the report and patch by Suharto Anggono in PR#17950. #>  #> (cid:136) iconvlist() now also works on MUSL based (Linux) systems, from a report and #>  #> patch suggestion by Wesley Chan in PR#17970. #>  #> (cid:136) round() and signif() no longer tolerate wrong argument names, notably in 1- #> argument calls; reported by Shane Mueller on R-devel (mailing list); later reported #> as PR#17976. #>  #> (cid:136) .Machine has longdouble.* elements only if capabilities(\"long.double\") is true, #> (Previously they were included if the platform had long double #>  #> as documented. #> identical to double, as ARM does.) #>  #> (cid:136) p.adjust(numeric(), n=0) now works, (cid:28)xing PR#18002. #> (cid:136) identical(x,y) no longer prints \"Unknown Type ..\" for typeof(x) == \"...\" ob- #>  #> jects. #>  #> (cid:136) Fix (auto-)print()ing of named complex vectors, see PR#17868 and PR#18019. #> (cid:136) all.equal(<language>, <...>) now works, (cid:28)xing PR#18029. #> (cid:136) as.data.frame.list(L, row.names=NULL) now behaves in line with data.frame(), #> disregarding names of components of L, (cid:28)xing PR#18034, reported by Kevin Tappe. #> (cid:136) checkRdaFiles(ff)$version is now correct also when ff contains (cid:28)les of di(cid:27)erent #>  #> versions, thanks to a report and patch from Sebastian Meyer in PR#18041. #>  #>  #>  #> --- #>  #> 52 #>  #> NEWS #>  #> (cid:136) macOS: Quartz device live drawing could fail (no plot is shown) if the system changes #> the drawing context after view update (often the case since macOS Big Sur). System #> log may show \"CGContextDelegateCreateForContext: invalid context\" error. #>  #> CHANGES IN R 4.0.3 #>  #> NEW FEATURES: #>  #> (cid:136) On platforms using configure option ‚Äò--with-internal-tzcode‚Äô, additional values #> \"internal\" and (on macOS only) \"macOS\" are accepted for the environment variable #> TZDIR. (See ?TZDIR.) #> On macOS, \"macOS\" is used by default if the system timezone database is a newer #> version than that in the R installation. #>  #> (cid:136) When install.packages(type = \"source\") fails to (cid:28)nd a package in a repository #> it mentions package versions which are excluded by their R version requirement and #> links to hints on why a package might not be found. #>  #> (cid:136) The default value for options(\"timeout\") can be set from environment variable #> R_DEFAULT_INTERNET_TIMEOUT, still defaulting to 60 (seconds) if that is not set or #> invalid. #> This may be needed when child R processes are doing downloads, for example during #> the installation of source packages which download jars or other forms of data. #>  #> LINK-TIME OPTIMIZATION on a UNIX-ALIKE: #>  #> (cid:136) There is now support for parallelized Link-Time Optimization (LTO) with GCC and #>  #> for ‚Äòthin‚Äô LTO with clang via setting the ‚ÄòLTO‚Äô macro. #>  #> (cid:136) There is support for setting a di(cid:27)erent LTO (cid:29)ag for the Fortran compiler, including #> to empty when mixing clang and gfortran (as on macOS). See (cid:28)le ‚Äòconfig.site‚Äô. #> (cid:136) There is a new ‚ÄòLTO_LD‚Äô macro to set linker options for LTO compilation, for example #>  #> to select an alternative linker or to parallelize thin LTO. #>  #> DEPRECATED AND DEFUNCT: #>  #> (cid:136) The LINPACK argument to chol.default(), chol2inv(), solve.default() and #> svd() has been defunct since R 3.1.0. Using it now gives a warning which will become #> an error in R 4.1.0. #>  #> BUG FIXES: #>  #> (cid:136) The code mitigating stack over(cid:29)ow with PCRE regexps on very long strings is enabled #> for PCRE2 < 10.30 also when JIT is enabled, since stack over(cid:29)ows have been seen in #> that case. #>  #> (cid:136) Fix to correctly show the group labels in dotchart() (which where lost in the ylab #>  #> improvement for R 4.0.0). #>  #> (cid:136) addmargins(*, ..) now also works when fn() is a local function, thanks to bug #>  #> report and patch PR#17124 from Alex Bertram. #>  #> (cid:136) rank(x) and hence sort(x) now work when x is an object (as per is.object(x)) of #> type \"raw\" and provides a valid ‚Äò[‚Äò method, e.g., for gmp::as.bigz(.) numbers. #>  #>  #>  #> --- #>  #> NEWS #>  #> 53 #>  #> (cid:136) chisq.test(*, simulate.p.value=TRUE) and r2dtable() now work correctly for #> large table entries (in the millions). Reported by Sebastian Meyer and investigated #> by more helpers in PR#16184. #>  #> (cid:136) Low-level socket read/write operations have been (cid:28)xed to correctly signal communi- #> cation errors. Previously, such errors could lead to a segfault due to invalid memory #> access. Reported and debugged by Dmitriy Selivanov in PR#17850. #>  #> (cid:136) quantile(x, pr) works more consistently for pr values slightly outside [0,1], thanks #>  #> to Suharto Anggono‚Äôs PR#17891. #> Further, quantile(x, prN, names=FALSE) now works even when prN contains NAs, #> thanks to Anggono‚Äôs PR#17892. Ditto for ordered factors or Date objects when type #> = 1 or 3, thanks to PR#17899. #>  #> (cid:136) Internet access based on libcurl, including curlGetHeaders(), was not respecting #> the \"timeout\" option. If this causes unanticipated timeouts, consider increasing the #> default by setting R_DEFAULT_INTERNET_TIMEOUT. #>  #> (cid:136) as.Date(<char>) now also works with an initial \"\", thanks to Michael Chirico‚Äôs #>  #> PR#17909. #>  #> (cid:136) isS3stdGeneric(f) now detects an S3 generic also when it is trace()d, thanks to #>  #> Gabe Becker‚Äôs PR#17917. #>  #> (cid:136) R_allocLD() has been (cid:28)xed to return memory aligned for long double type #>  #> PR#16534. #>  #> (cid:136) fisher.test() no longer segfaults when called again after its internal stack has been #>  #> exceeded PR#17904. #>  #> (cid:136) Accessing a long vector represented by a compact integer sequence no longer segfaults #>  #> (reported and debugged by Hugh Parsonage). #>  #> (cid:136) duplicated() now works also for strings with multiple encodings inside a single #>  #> vector PR#17809. #>  #> (cid:136) phyper(11, 15, 0, 12, log.p=TRUE) no longer gives NaN; reported as PR#17271 by #>  #> Alexey Stukalov. #>  #> (cid:136) Fix incorrect calculation in logLik.nls() PR#16100, patch from Sebastian Meyer. #> (cid:136) A very old bug could cause a segfault in model.matrix() when terms involved logical #>  #> variables. Part of PR#17879. #>  #> (cid:136) model.frame.default() allowed data = 1, leading to involuntary variable capture #>  #> (rest of PR#17879). #>  #> (cid:136) tar() no longer skips non-directory (cid:28)les, thanks to a patch by Sebastian Meyer, (cid:28)xing #>  #> the remaining part of PR#16716. #>  #> CHANGES IN R 4.0.2 #>  #> UTILITIES: #>  #> (cid:136) R CMD check skips vignette re-building (with a warning) if the ‚ÄòVignetteBuilder‚Äô #>  #> package(s) are not available. #>  #> BUG FIXES: #>  #> (cid:136) Paths with non-ASCII characters caused problems for package loading on Windows #>  #> PR#17833. #>  #>  #>  #> --- #>  #> 54 #>  #> NEWS #>  #> (cid:136) Using tcltk widgets no longer crashes R on Windows. #> (cid:136) source(*, echo=TRUE) no longer fails in some cases with empty lines; reported by #>  #> Bill Dunlap in PR#17769. #>  #> (cid:136) on.exit() now correctly matches named arguments, thanks to PR#17815 (including #>  #> patch) by Brodie Gaslam. #>  #> (cid:136) regexpr(*, perl=TRUE) no longer returns incorrect positions into text containing #>  #> characters outside of the Unicode Basic Multilingual Plane on Windows. #>  #> CHANGES IN R 4.0.1 #>  #> NEW FEATURES: #>  #> (cid:136) paste() and paste0() gain a new optional argument recycle0. When set to #> true, zero-length arguments are recycled leading to character(0) after the sep- #> concatenation, i.e., to the empty string \"\" if collapse is a string and to the zero- #> length value character(0) when collapse = NULL. #> A package whose code uses this should depend on ‚ÄòR (>= 4.0.1)‚Äô. #>  #> (cid:136) The summary(<warnings>) method now maps the counts correctly to the warning #>  #> messages. #>  #> BUG FIXES: #>  #> (cid:136) aov(frml, ...) now also works where the formula deparses to more than 500 char- #>  #> acters, thanks to a report and patch proposal by Jan Hau(cid:27)a. #>  #> (cid:136) Fix a dozen places (code, examples) as Sys.setlocale() returns the new rather than #>  #> the previous setting. #>  #> (cid:136) Fix for adding two complex grid units via sum(). Thanks to Gu Zuguang for the #>  #> report and Thomas Lin Pedersen for the patch. #>  #> (cid:136) Fix parallel::mclapply(..., mc.preschedule=FALSE) to handle raw vector re- #>  #> sults correctly. PR#17779 #>  #> (cid:136) Computing the base value, i.e., 2, (cid:16)everywhere(cid:17), now uses FLT_RADIX, as the original #> ‚Äòmachar‚Äô code looped inde(cid:28)nitely on the ppc64 architecture for the longdouble case. #> (cid:136) In R 4.0.0, sort.list(x) when is.object(x) was true, e.g., for x <- I(letters), #> was accidentally using method = \"radix\". Consequently, e.g., merge(<data.frame>) #> was much slower than previously; reported in PR#17794. #> (cid:136) plot(y ~ x, ylab = quote(y[i])) now works, as e.g., #>  #> related to #>  #> for xlab; #>  #> PR#10525. #>  #> (cid:136) parallel::detect.cores(all.tests = TRUE) tries a matching OS name before the #>  #> other tests (which were intended only for unknown OSes). #>  #> (cid:136) Parse data for raw strings is now recorded correctly. Reported by Gabor Csardi. #>  #> CHANGES IN R 4.0.0 #>  #> SIGNIFICANT USER-VISIBLE CHANGES: #>  #> (cid:136) Packages need to be (re-)installed under this version (4.0.0) of R. #>  #>  #>  #> --- #>  #> NEWS #>  #> 55 #>  #> (cid:136) matrix objects now also inherit from class \"array\", so e.g., class(diag(1)) #> invalidates code incorrectly assuming that #>  #> is c(\"matrix\",\"array\"). #> class(matrix_obj)) has length one. #> S3 methods for class \"array\" are now dispatched for matrix objects. #>  #> This #>  #> (cid:136) There is a new syntax for specifying raw character constants similar to the one used #> in C++: r\"(...)\" with ... any character sequence not containing the sequence #> ‚Äò)\"‚Äô. This makes it easier to write strings that contain backslashes or both single and #> double quotes. For more details see ?Quotes. #>  #> (cid:136) R now uses a ‚ÄòstringsAsFactors = FALSE‚Äô default, and hence by default no longer #>  #> converts strings to factors in calls to data.frame() and read.table(). #> A large number of packages relied on the previous behaviour and so have needed/will #> need updating. #>  #> (cid:136) The plot() S3 generic function is now in package base rather than package graphics, #> as it is reasonable to have methods that do not use the graphics package. The generic #> is currently re-exported from the graphics namespace to allow packages importing it #> from there to continue working, but this may change in future. #> Packages which de(cid:28)ne S4 generics for plot() should be re-installed and package code #> using such generics from other packages needs to ensure that they are imported rather #> than rely on their being looked for on the search path (as in a namespace, the base #> namespace has precedence over the search path). #>  #> REFERENCE COUNTING: #>  #> (cid:136) Reference counting is now used instead of the NAMED mechanism for determining when #> objects can be safely mutated in base C code. This reduces the need for copying in #> some cases and should allow further optimizations in the future. It should help make #> the internal code easier to maintain. #> This change is expected to have almost no impact on packages using supported coding #> practices in their C/C++ code. #>  #> MIGRATION TO PCRE2: #>  #> (cid:136) This version of R is built against the PCRE2 library for Perl-like regular expressions, #> if available. (On non-Windows platforms PCRE1 can optionally be used if PCRE2 #> is not available at build time.) The version of PCRE in use can be obtained via #> extSoftVersion(): PCRE1 (formerly known as ‚ÄòPCRE‚Äô) has versions <= 8, PCRE2 #> versions >= 10. #>  #> (cid:136) Making PCRE2 available when building R from source is strongly recommended #> (preferably version 10.30 or later) as PCRE1 is no longer developed: version 8.44 #> is ‚Äòlikely to be the (cid:28)nal release‚Äô. #>  #> (cid:136) PCRE2 reports errors for some regular expressions that were accepted by PCRE1. #> A hyphen now has to be escaped in a character class to be interpreted as a literal #> ‚Äò\\R‚Äô, ‚Äò\\B‚Äô and ‚Äò\\X‚Äô are no longer allowed #> (unless (cid:28)rst or last in the class de(cid:28)nition). #> in character classes (PCRE1 treated these as literals). #>  #> (cid:136) Option PCRE_study is no longer used with PCRE2, and is reported as FALSE when #>  #> that is in use. #>  #> NEW FEATURES: #>  #>  #>  #> --- #>  #> 56 #>  #> NEWS #>  #> (cid:136) assertError() and assertWarning() (in package tools) can now check for speci(cid:28)c #> error or warning classes via the new optional second argument classes (which is not #> back compatible with previous use of an unnamed second argument). #>  #> (cid:136) DF2formula(), the utility for the data frame method of formula(), now works with- #> out parsing and explicit evaluation, starting from Suharto Anggono‚Äôs suggestion in #> PR#17555. #>  #> (cid:136) approxfun() and approx() gain a new argument na.rm defaulting to true. If set to #>  #> false, missing y values now propagate into the interpolated values. #> (cid:136) Long vectors are now supported as the seq argument of a for() loop. #> (cid:136) str(x) gets a new deparse.lines option with a default to speed it up when x is a #>  #> large call object. #>  #> (cid:136) The internal traceback object produced when an error is signalled (.Traceback), #> now contains the calls rather than the deparse()d calls, deferring the deparsing #> to the user-level functions .traceback() and traceback(). This ful(cid:28)ls the wish of #> PR#17580, reported including two patch proposals by Brodie Gaslam. #>  #> (cid:136) data.matrix() now converts character columns to factors and from this to integers. #> (cid:136) package.skeleton() now explicitly lists all exports in the ‚ÄòNAMESPACE‚Äô (cid:28)le. #> (cid:136) New function .S3method() to register S3 methods in R scripts. #> (cid:136) file.path() has some support for (cid:28)le paths not in the session encoding, e.g. with #>  #> UTF-8 inputs in a non-UTF-8 locale the output is marked as UTF-8. #>  #> (cid:136) Most functions with (cid:28)le-path inputs will give an explicit error if a (cid:28)le-path input in #> a marked encoding cannot be translated (to the native encoding or in some cases #> on Windows to UTF-8), rather than translate to a di(cid:27)erent (cid:28)le path using es- #> capes. Some (such as dir.exists(), file.exists(), file.access(), file.info(), #> list.files(), normalizePath() and path.expand()) treat this like any other non- #> existent (cid:28)le, often with a warning. #>  #> (cid:136) There is a new help document accessed by help(\"file path encoding\") detailing #>  #> how (cid:28)le paths with marked encodings are handled. #>  #> (cid:136) New function list2DF() for creating data frames from lists of variables. #> (cid:136) iconv() has a new option sub = \"Unicode\" to translate UTF-8 input invalid in the #>  #> ‚Äòto‚Äô encoding using ‚Äò<U+xxxx>‚Äô escapes. #>  #> (cid:136) There is a new function infoRDS() providing information about the serialization #>  #> format of a serialized object. #>  #> (cid:136) S3 method lookup now by default skips the elements of the search path between the #>  #> global and base environments. #>  #> (cid:136) Added an argument add_datalist(*, small.size = 0) to allow the creation of a #>  #> ‚Äòdata/datalist‚Äô (cid:28)le even when the total size of the data sets is small. #>  #> (cid:136) The backquote function bquote() has a new argument splice to enable splicing a #>  #> computed list of values into an expression, like ,@ in LISP‚Äôs backquote. #>  #> (cid:136) The formula interface to t.test() and wilcox.test() has been extended to handle #>  #> one-sample and paired tests. #>  #> (cid:136) The palette() function has a new default set of colours (which are less saturated #> and have better accessibility properties). There are also some new built-in palettes, #> which are listed by the new palette.pals() function. These include the old default #> palette under the name \"R3\". Finally, the new palette.colors() function allows a #> subset of colours to be selected from any of the built-in palettes. #>  #>  #>  #> --- #>  #> NEWS #>  #> 57 #>  #> (cid:136) n2mfrow() gains an option asp = 1 to specify the aspect ratio, ful(cid:28)lling the wish and #>  #> extending the proposal of Michael Chirico in PR#17648. #>  #> (cid:136) For head(x, n) and tail() the default and other S3 methods notably for vector n, #> e.g. to get a (cid:16)corner(cid:17) of a matrix, has been extended to array‚Äôs of higher dimension #> thanks to the patch proposal by Gabe Becker in PR#17652. Consequently, optional #> argument addrownums is deprecated and replaced by the (more general) argument #> keepnums. An invalid second argument n now leads to typically more easily readable #> error messages. #>  #> (cid:136) New function .class2() provides the full character vector of class names used for S3 #>  #> method dispatch. #>  #> (cid:136) Printing methods(..) now uses a new format() method. #> (cid:136) sort.list(x) now works for non-atomic objects x and method = \"auto\" (the default) #>  #> or \"radix\" in cases order(x) works, typically via a xtfrm() method. #>  #> (cid:136) Where they are available, writeBin() allows long vectors. #> (cid:136) New function deparse1() produces one string, wrapping deparse(), to be used typ- #>  #> ically in deparse1(substitute(*)), e.g., to (cid:28)x PR#17671. #>  #> (cid:136) wilcox.test() enhancements: In the (non-paired) two-sample case, Inf values are #> treated as very large for robustness consistency. If exact computations are used, the #> result now has \"exact\" in the method element of its return value. New arguments #> tol.root and digits.rank where the latter may be used for stability to treat very #> close numbers as ties. #>  #> (cid:136) readBin() and writeBin() now report an error for an invalid endian value. The #> a(cid:27)ected code needs to be (cid:28)xed with care as the old undocumented behavior was to #> swap endianness in such cases. #>  #> (cid:136) sequence() is now an S3 generic with an internally implemented default method, #> and gains arguments to generate more complex sequences. Based on code from the #> S4Vectors Bioconductor package and the advice of Herv√ò Pag≈Ås. #>  #> (cid:136) print()‚Äôs default method and many other methods (by calling the default eventually #> and passing ...) now make use of a new optional width argument, avoiding the need #> for the user to set and reset options(\"width\"). #>  #> (cid:136) memDecompress() supports the RFC 1952 format (e.g. in-memory copies of gzip- #>  #> compressed (cid:28)les) as well as RFC 1950. #>  #> (cid:136) memCompress() and memDecompress() support long raw vectors for types \"gzip\" and #>  #> \"zx\". #>  #> (cid:136) sweep() and slice.index() can now use names of dimnames for their MARGIN argu- #>  #> ment (apply has had this for almost a decade). #>  #> (cid:136) New function proportions() and marginSums(). These should replace the unfortu- #> nately named prop.table() and margin.table(). They are drop-in replacements, #> but also add named-margin functionality. The old function names are retained as #> aliases for back-compatibility. #>  #> (cid:136) Functions rbinom(), rgeom(), rhyper(), rpois(), rnbinom(), rsignrank() and #> rwilcox() which have returned integer since R 3.0.0 and hence NA when the numbers #> would have been outside the integer range, now return double vectors (without NAs, #> typically) in these cases. #>  #> (cid:136) matplot(x,y) (and hence matlines() and matpoints()) now call the corresponding #> methods of plot() and lines(), e.g, when x is a \"Date\" or \"POSIXct\" object; #> prompted by Spencer Graves‚Äô suggestion. #>  #>  #>  #> --- #>  #> 58 #>  #> NEWS #>  #> (cid:136) stopifnot() now allows customizing error messages via argument names, thanks to #>  #> a patch proposal by Neal Fultz in PR#17688. #>  #> (cid:136) unlink() gains a new argument expand to disable wildcard and tilde expansion. #>  #> Elements of x of value \"~\" are now ignored. #>  #> (cid:136) mle() in the stats4 package has had its interface extended so that arguments to the #> negative log-likelihood function can be one or more vectors, with similar conventions #> applying to bounds, start values, and parameter values to be kept (cid:28)xed. This required #> a minor extension to class \"mle\", so saved objects from earlier versions may need to #> be recomputed. #>  #> (cid:136) The default for pdf() is now useDingbats = FALSE. #> (cid:136) The default (cid:28)ll colour for hist() and boxplot() is now col = \"lightgray\". #> (cid:136) The default order of the levels on the y-axis for spineplot() and cdplot() has been #>  #> reversed. #>  #> (cid:136) If the R_ALWAYS_INSTALL_TESTS environment variable is set to a true value, R CMD #> INSTALL behaves as if the ‚Äò--install-tests‚Äô option is always speci(cid:28)ed. Thanks to #> Reinhold Koch for the suggestion. #>  #> (cid:136) New function R_user_dir() in package tools suggests paths appropriate for storing #>  #> R-related user-speci(cid:28)c data, con(cid:28)guration and cache (cid:28)les. #>  #> (cid:136) capabilities() gains a new logical option Xchk to avoid warnings about X11-related #>  #> capabilities. #>  #> (cid:136) The internal implementation of grid units has changed, but the only visible e(cid:27)ects at #>  #> user-level should be #>  #> (cid:21) a slightly di(cid:27)erent print format for some units (especially unit arithmetic), #> (cid:21) faster performance (for unit operations) and #> (cid:21) two new functions unitType() and unit.psum(). #> Based on code contributed by Thomas Lin Pedersen. #>  #> (cid:136) When internal dispatch for rep.int() and rep_len() fails, there is an attempt to #>  #> dispatch on the equivalent call to rep(). #>  #> (cid:136) Object .Machine now contains new longdouble.* entries (when R uses long doubles #>  #> internally). #>  #> (cid:136) news() has been enhanced to cover the news on R 3.x and 2.x. #> (cid:136) For consistency, N <- NULL; N[[1]] <- val now turns N into a list also when val) #> has length one. This enables dimnames(r1)[[1]] <- \"R1\" for a 1-row matrix r1, #> (cid:28)xing PR#17719 reported by Serguei Sokol. #>  #> (cid:136) deparse(..), dump(..), and dput(x, control = \"all\") now include control option #> \"digits17\" which typically ensures 1:1 invertibility. New option control = \"exact\" #> ensures numeric exact invertibility via \"hexNumeric\". #>  #> (cid:136) When loading data sets via read.table(), data() now uses ‚ÄòLC_COLLATE=C‚Äô to ensure #>  #> locale-independent results for possible string-to-factor conversions. #>  #> (cid:136) A server socket connection, a new connection type representing a listening server #> socket, is created via serverSocket() and can accept multiple socket connections #> via socketAccept(). #>  #> (cid:136) New function socketTimeout() changes the connection timeout of a socket connec- #>  #> tion. #>  #> (cid:136) The time needed to start a homogeneous ‚ÄòPSOCK‚Äô cluster on ‚Äòlocalhost‚Äô with many #>  #> nodes has been signi(cid:28)cantly reduced (package parallel). #>  #>  #>  #> --- #>  #> NEWS #>  #> 59 #>  #> (cid:136) New globalCallingHandlers() function to establish global condition handlers. This #> allows registering default handlers for speci(cid:28)c condition classes. Developed in collab- #> oration with Lionel Henry. #>  #> (cid:136) New function tryInvokeRestart() to invoke a speci(cid:28)ed restart if one is available and #> return without signaling an error if no such restart is found. Contributed by Lionel #> Henry in PR#17598. #>  #> (cid:136) str(x) now shows the length of attributes in some cases for a data frame x. #> (cid:136) Rprof() gains a new argument filter.callframes to request that intervening call #> frames due to lazy evaluation or explicit eval() calls be omitted from the recorded #> pro(cid:28)le data. Contributed by Lionel Henry in PR#17595. #>  #> (cid:136) The handling of ${FOO-bar} and ${FOO:-bar} in ‚ÄòRenviron‚Äô (cid:28)les now follows POSIX #> shells (at least on a Unix-alike), so the (cid:28)rst treats empty environment variables as set #> and the second does not. Previously both ignored empty variables. There are several #> uses of the (cid:28)rst form in ‚Äòetc/Renviron‚Äô. #>  #> (cid:136) New classes argument for suppressWarnings() and suppressMessages() to selec- #> tively suppress only warnings or messages that inherit from particular classes. Based #> on patch from Lionel Henry submitted with PR#17619. #>  #> (cid:136) New function activeBindingFunction() retrieves the function of an active binding. #> (cid:136) New \"cairoFT\" and \"pango\" components in the output of grSoftVersion(). #> (cid:136) New argument symbolfamily in cairo-based graphics devices and new function #>  #> cairoSymbolFont() that can be used to provide the value for that argument. #>  #> Windows: #>  #> (cid:136) Rterm now works also when invoked from MSYS2 terminals. Line editing is possible #>  #> when command winpty is installed. #>  #> (cid:136) normalizePath() now resolves symbolic links and normalizes case of long names of #>  #> path elements in case-insensitive folders (PR#17165). #>  #> (cid:136) md5sum() supports UTF-8 (cid:28)le names with characters that cannot be translated to #>  #> the native encoding (PR#17633). #>  #> (cid:136) Rterm gains a new option ‚Äò--workspace‚Äô to specify the workspace to be restored. #> This allows equals to be part of the name when opening via Windows (cid:28)le associations #> (reported by Christian Asseburg). #>  #> (cid:136) Rterm now accepts ALT+xxx sequences also with NumLock on. Tilde can be pasted #>  #> with an Italian keyboard (PR#17679). #>  #> (cid:136) R falls back to copying when junction creation fails during package checking (patch #>  #> from Duncan Murdoch). #>  #> DEPRECATED AND DEFUNCT: #>  #> (cid:136) Make macro ‚ÄòF77_VISIBILITY‚Äô has been removed and replaced by ‚ÄòF_VISIBILITY‚Äô. #> (cid:136) Make macros ‚ÄòF77‚Äô, ‚ÄòFCPIFCPLAGS‚Äô and ‚ÄòSHLIB_OPENMP_FCFLAGS‚Äô have been removed #> and replaced by ‚ÄòFC‚Äô, ‚ÄòFPICFLAGS‚Äô and ‚ÄòSHLIB_OPENMP_FFLAGS‚Äô respectively. (Most #> make programs will set ‚ÄòF77‚Äô to the value of ‚ÄòFC‚Äô, which is set for package compilation. #> But portable code should not rely on this.) #>  #> (cid:136) The deprecated support for specifying C++98 for package installation has been re- #>  #> moved. #>  #>  #>  #> --- #>  #> 60 #>  #> NEWS #>  #> (cid:136) R CMD config no longer knows about the unused settings ‚ÄòF77‚Äô and ‚ÄòFCPIFCPLAGS‚Äô, #>  #> nor ‚ÄòCXX98‚Äô and similar. #>  #> (cid:136) Either PCRE2 or PCRE1 >= 8.32 (Nov 2012) is required: the deprecated provision #>  #> for 8.20(cid:21)8.31 has been removed. #>  #> (cid:136) Defunct functions mem.limits(), .readRDS(), .saveRDS(), .find.package(), #> and .path.package() from package base and allGenerics(), getAccess(), #> getExtends(), #> getAllMethods(), #> getVirtual(), #> getProperties(), #> mlistMetaName(), #> traceOff(), #> and traceOn() from methods have been removed. #>  #> getClassPackage(), #> getSubclasses(), #>  #> getClassName(), #> getPrototype(), #>  #> removeMethodsObject(), #>  #> seemsS4Object(), #>  #> C-LEVEL FACILITIES: #>  #> (cid:136) installChar is now remapped in ‚ÄòRinternals.h‚Äô to installTrChar, of which it #> has been a wrapper since R 3.6.0. Neither are part of the API, but packages using #> installChar can replace it if they depend on ‚ÄòR >= 3.6.2‚Äô. #>  #> (cid:136) Header ‚ÄòR_ext/Print.h‚Äô de(cid:28)nes ‚ÄòR_USE_C99_IN_CXX‚Äô and hence exposes Rvprintf #>  #> and REvprintf if used with a C++11 (or later) compiler. #>  #> (cid:136) There are new Fortran subroutines dblepr1, realpr1 and intpr1 to print a scalar #> variable (gfortran 10 enforces the distinction between scalars and length-one arrays). #> Also labelpr to print just a label. #>  #> (cid:136) R_withCallingErrorHandler is now available for establishing a calling handler in C #>  #> code for conditions inheriting from class error. #>  #> INSTALLATION on a UNIX-ALIKE: #>  #> (cid:136) User-set ‚ÄòDEFS‚Äô (e.g., in ‚Äòconfig.site‚Äô) is now used for compiling packages (including #>  #> base packages). #>  #> (cid:136) There is a new variant option ‚Äò--enable-lto=check‚Äô for checking consistency of #>  #> BLAS/LAPACK/LINPACK calls (cid:22) see ‚ÄòWriting R Extensions‚Äô. #>  #> (cid:136) A C++ compiler default is set only if the C++11 standard is supported: it no longer #>  #> falls back to C++98. #>  #> (cid:136) PCRE2 is used if available. To make use of PCRE1 if PCRE2 is unavailable, con(cid:28)gure #>  #> with option ‚Äò--with-pcre1‚Äô. #>  #> (cid:136) The minimum required version of libcurl is now 7.28.0 (Oct 2012). #> (cid:136) New make target distcheck checks #>  #> (cid:21) R can be rebuilt from the tarball created by make dist, #> (cid:21) the build from the tarball passes make check-all, #> (cid:21) the build installs and uninstalls, #> (cid:21) the source (cid:28)les are properly cleaned by make distclean. #>  #> UTILITIES: #>  #> (cid:136) R --help now mentions the option --no-echo (renamed from --slave) and its pre- #>  #> viously undocumented short form -s. #>  #> (cid:136) R CMD check now optionally checks configure and cleanup scripts for non-Bourne- #>  #> shell code (‚Äòbashisms‚Äô). #>  #>  #>  #> --- #>  #> NEWS #>  #> 61 #>  #> (cid:136) R CMD check --as-cran now runs \\donttest examples (which are run by example()) #> instead of instructing the tester to do so. This can be temporarily circumvented during #> development by setting environment variable _R_CHECK_DONTTEST_EXAMPLES_ to a #> false value. #>  #> PACKAGE INSTALLATION: #>  #> (cid:136) There is the beginnings of support for the recently approved C++20 standard, spec- #> i(cid:28)ed analogously to C++14 and C++17. There is currently only limited support for #> this in compilers, with (cid:29)ags such as ‚Äò-std=c++20‚Äô and ‚Äò-std=c++2a‚Äô. For the time #> being the configure test is of accepting one of these (cid:29)ags and compiling C++17 #> code. #>  #> BUG FIXES: #>  #> (cid:136) formula(x) with length(x) > 1 character vectors, is deprecated now. Such use has #> been rare, and has ‚Äòworked‚Äô as expected in some cases only. In other cases, wrong x #> have silently been truncated, not detecting previous errors. #>  #> (cid:136) Long-standing issue where the X11 device could lose events shortly after startup has #>  #> been addressed (PR#16702). #>  #> (cid:136) The data.frame method for rbind() no longer drops <NA> levels from factor columns #>  #> by default (PR#17562). #>  #> (cid:136) available.packages() and hence install.packages() now pass their ... ar- #> subsequently, #>  #> gument to download.file(), #> available.packages() gets new argument quiet, solving PR#17573. #>  #> ful(cid:28)lling the wish of PR#17532; #>  #> (cid:136) stopifnot() gets new argument exprObject to allow an R object of class expression #> (or other ‚Äòlanguage‚Äô) to work more consistently, thanks to suggestions by Suharto #> Anggono. #>  #> (cid:136) conformMethod() now works correctly in cases containing a (cid:16)&& logic(cid:17) bug, reported #> by Henrik Bengtsson. It now creates methods with \"missing\" entries in the signature. #> Consequently, rematchDefinition() is amended to use appropriate .local() calls #> with named arguments where needed. #>  #> (cid:136) format.default(*, scientific = FALSE) now corresponds to a practically most ex- #>  #> treme options(scipen = n) setting rather than arbitrary n = 100. #>  #> (cid:136) format(as.symbol(\"foo\")) now works (returning \"foo\"). #> (cid:136) postscript(.., title = *) now signals an error when the title string contains a #> character which would produce corrupt PostScript, thanks to PR#17607 by Daisuko #> Ogawa. #>  #> (cid:136) Certain Ops (notably comparison such as ==) now also work for 0-length data frames, #>  #> after reports by Hilmar Berger. #>  #> (cid:136) methods(class = class(glm(..))) now warns more usefully and only once. #> (cid:136) write.dcf() no longer mangles (cid:28)eld names (PR#17589). #> (cid:136) Primitive replacement functions no longer mutate a referenced (cid:28)rst argument when #>  #> used outside of a complex assignment context. #>  #> (cid:136) A better error message for contour(*, levels = Inf). #> (cid:136) The return value of contourLines() is no longer invisible(). #> (cid:136) The Fortran code for calculating the coefficients component in lm.influence() #> It has (for now) been replaced with much faster R code #>  #> was very ine(cid:30)cient. #> (PR#17624). #>  #>  #>  #> --- #>  #> 62 #>  #> NEWS #>  #> (cid:136) cm.colors(n) etc no longer append the code for alpha = 1, \"FF\", to all colors. Hence #> all eight *.colors() functions and rainbow() behave consistently and have the same #> non-explicit default (PR#17659). #>  #> (cid:136) dnorm had a problematic corner case with sd == -Inf or negative sd which was not #> (cid:29)agged as an error in all cases. Thanks to Stephen D. Weigand for reporting and #> Wang Jiefei for analyzing this; similar change has been made in dlnorm(). #>  #> (cid:136) The optional iter.smooth argument of plot.lm(), (the plot() method for lm and #> glm (cid:28)ts) now defaults to 0 for all glm (cid:28)ts. Especially for binary observations with high #> or low (cid:28)tted probabilities, this e(cid:27)ectively deleted all observations of 1 or 0. Also, the #> type of residuals used in the glm case has been switched to \"pearson\" since deviance #> residuals do not in general have approximately zero mean. #>  #> (cid:136) In plot.lm, Cook‚Äôs distance was computed from unweighted residuals, leading to #>  #> inconsistencies. Replaced with usual weighted version. (PR#16056) #>  #> (cid:136) Time-series ts(*, start, end, frequency) with fractional frequency are supported #> more consistently; thanks to a report from Johann Kleinbub and analysis and patch #> by Duncan Murdoch in PR#17669. #>  #> (cid:136) In case of errors mcmapply() now preserves attributes of returned \"try-error\" ob- #>  #> jects and avoids simpli(cid:28)cation, overriding SIMPLIFY to FALSE. (PR#17653) #>  #> (cid:136) as.difftime() gets new optional tz = \"UTC\" argument which should (cid:28)x behaviour #> during daylight-savings-changeover days, (cid:28)xing PR#16764, thanks to proposals and #> analysis by Johannes Ranke and Kirill M(cid:252)ller. #>  #> (cid:136) round() does a better job of rounding (cid:16)to nearest(cid:17) by measuring and (cid:16)to even(cid:17); thanks #> to a careful algorithm originally prompted by the report from Adam Wheeler and then #> others, in PR#17668. #> round(x, dig) for negative digits is much more rational now, notably for large |dig|. #> (cid:136) Inheritance information on S4 classes is maintained more consistently, particularly in #> the case of class unions (in part due to PR#17596 and a report from Ezra Tucker). #> (cid:136) is() behaves more robustly when its argument class2 is a classRepresentation #>  #> object. #>  #> (cid:136) The warning message when attempting to export an nonexistent class is now more #>  #> readable; thanks to Thierry Onkelinx for recognizing the problem. #>  #> (cid:136) choose() misbehaved in corner cases where it switched n - k for k and n was only #>  #> nearly integer (report from Erik Scott Wright). #>  #> (cid:136) mle() in the stats4 package had problems combining use of box constraints and #>  #> (cid:28)xed starting values (in particular, con(cid:28)dence intervals were a(cid:27)ected). #>  #> (cid:136) Operator ? now has lower precedence than = to work as documented, so = behaves #>  #> like <- in help expressions (PR#16710). #>  #> (cid:136) smoothEnds(x) now returns integer type in both cases when x is integer, thanks #>  #> to a report and proposal by Bill Dunlap PR#17693. #>  #> (cid:136) The methods package does a better job of tracking inheritance relationships across #>  #> packages. #>  #> (cid:136) norm(diag(c(1, NA)), \"2\") now works. #> (cid:136) subset() had problems with 0-col dataframes (reported by Bill Dunlap, PR#17721). #> (cid:136) Several cases of integer over(cid:29)ow detected by the ‚Äòunde(cid:28)ned behaviour sanitizer‚Äô of #> clang 10 have been circumvented. One in rhyper() may change the generated value #> for large input values. #>  #>  #>  #> --- #>  #> NEWS #>  #> 63 #>  #> (cid:136) dotchart() now places the y-axis label (ylab) much better, not overplotting labels, #>  #> thanks to a report and suggestion by Alexey Shipunov. #>  #> (cid:136) A rare C-level array over(cid:29)ow in chull() has been worked around. #> (cid:136) Some invalid speci(cid:28)cations of the day-of-the-year (via %j, e.g. day 366 in 2017) or #> week plus day-of-the-week are now detected by strptime(). They now return NA but #> give a warning as they may have given random results or corrupted memory in earlier #> versions of R. #>  #> (cid:136) socketConnection(server = FALSE) now respects the connection timeout also on #>  #> Linux. #>  #> (cid:136) socketConnection(server = FALSE) no longer leaks a connection that is available #>  #> right away without waiting (e.g. on ‚Äòlocalhost‚Äô). #>  #> (cid:136) Socket connections are now robust against spurious readability and spurious avail- #>  #> ability of an incoming connection. #>  #> (cid:136) blocking = FALSE is now respected also on the server side of a socket connection, #>  #> allowing non-blocking read operations. #>  #> (cid:136) anova.glm() and anova.glmlist() computed incorrect score (Rao) tests in no- #>  #> intercept cases. (Andr√ò Gillibert, PR#17735) #> now #>  #> (cid:136) summaryRprof() #>  #> Rprof(*, #> work #> memory.profiling=TRUE) case with small chunk size (and \"tseries\" or simi- #> lar) thanks to a patch proposal by Benjamin Tyner, in PR#15886. #>  #> correctly #>  #> should #>  #> the #>  #> for #>  #> (cid:136) xgettext() ignores strings passed to ngettext(), since the latter is handled by #> xngettext(). Thanks to Daniele Medri for the report and all the recent work he has #> done on the Italian translations. #>  #> (cid:136) data(package = \"P\") for P in base and stats no longer reports the data sets from #> package datasets (which it did for back compatibility for 16 years), (cid:28)xing PR#17730. #> (cid:136) x[[Inf]] (returning NULL) no longer leads to unde(cid:28)ned behavior, thanks to a report #> by Kirill M(cid:252)ller in PR#17756. Further, x[[-Inf]] and x[[-n]] now give more #> helpful error messages. #>  #> (cid:136) Gamma() family sometimes had trouble storing link name PR#15891 #>  #> BUG FIXES (Windows): #>  #> (cid:136) Sys.glob() now supports all characters from the Unicode Basic Multilingual Plane, #>  #> no longer corrupting some (less commonly used) characters (PR#17638). #>  #> (cid:136) Rterm now correctly displays multi-byte-coded characters representable in the current #> native encoding (at least on Windows 10 they were sometimes omitted, PR#17632). #> (cid:136) scan() issues with UTF-8 data when running in a DBCS locale have been resolved #>  #> (PR#16520, PR#16584). #>  #> (cid:136) Rterm now accepts enhanced/arrow keys also with ConPTY. #> (cid:136) R can now be started via the launcher icon in a user documents directory whose path #>  #> is not representable in the system encoding. #>  #> (cid:136) socketConnection(server = FALSE) now returns instantly also on Windows when #>  #> connection failure is signalled. #>  #> (cid:136) Problems with UTF-16 surrogate pairs have been (cid:28)xed in several functions, including #>  #> tolower() and toupper() (PR#17645). #>  #>  #>  #> --- #>  #> 64 #>  #> NEWS #>  #> CHANGES in previous versions #>  #> (cid:136) Older news can be found in text format in (cid:28)les ‚ÄòNEWS.0‚Äô, #>  #> ‚ÄòNEWS.2‚Äô #> News in HTML format for R versions #> and ‚ÄòNEWS.3‚Äô #> 3.x and from 2.10.0 to 2.15.3 are available at ‚Äòdoc/html/NEWS.3.html‚Äô and #> ‚Äòdoc/html/NEWS.2.html‚Äô. #>  #> in the ‚Äòdoc‚Äô directory. #>  #> ‚ÄòNEWS.1‚Äô, #>  #>  # pdftools::pdf_text(pdf)"}]
