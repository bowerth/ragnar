% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read-markdown.R
\name{read_as_markdown}
\alias{read_as_markdown}
\title{Convert files to markdown}
\usage{
read_as_markdown(x, ..., canonical = FALSE)
}
\arguments{
\item{x}{A filepath or url}

\item{...}{Passed on to \code{MarkItDown.convert()}}

\item{canonical}{logical, whether to postprocess the output from MarkItDown
with \code{commonmark::markdown_commonmark()}.}
}
\value{
A single string of markdown
}
\description{
Convert files to markdown
}
\examples{
# convert html
read_as_markdown("https://r4ds.hadley.nz/base-R.html") |>
  substr(1, 5000) |> cat()

read_as_markdown("https://r4ds.hadley.nz/base-R.html", canonical = TRUE) |>
  substr(1, 5000) |> cat()

# convert pdf
pdf <- file.path(R.home("doc"), "NEWS.pdf")
read_as_markdown(pdf)
# pdftools::pdf_text(pdf)

# convert images
jpg <- file.path(R.home("doc"), "html", "logo.jpg")
## currently broken https://github.com/microsoft/markitdown/issues/1036
if(FALSE) {
  reticulate::py_require("openai")
  llm_client <- reticulate::import("openai")$OpenAI()
  read_as_markdown(jpg,
    llm_client = llm_client,
    llm_model = "gpt-4o"
  )
}

# Alternative approach to image conversion:
if (rlang::is_installed("magick")) {
  chat <- ellmer::chat_openai(echo = TRUE)
  chat$chat("Describe this image", content_image_file(jpg))
}
}
